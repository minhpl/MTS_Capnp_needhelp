// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: message.capnp

#include "message.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<147> b_99bfd28ffda77d09 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
      9, 125, 167, 253, 143, 210, 191, 153,
     14,   0,   0,   0,   1,   0,   3,   0,
     52, 241, 204,  62, 191,  68,  26, 136,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 146,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 199,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    112,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     32,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    209,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    208,   0,   0,   0,   3,   0,   1,   0,
    220,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    217,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    216,   0,   0,   0,   3,   0,   1,   0,
    228,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    225,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    224,   0,   0,   0,   3,   0,   1,   0,
    236,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    233,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    232,   0,   0,   0,   3,   0,   1,   0,
    244,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    241,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    240,   0,   0,   0,   3,   0,   1,   0,
     12,   1,   0,   0,   2,   0,   1,   0,
      5,   0,   0,   0,   4,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   1,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   1,   0,   0,   3,   0,   1,   0,
     16,   1,   0,   0,   2,   0,   1,   0,
      6,   0,   0,   0,   5,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   1,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   1,   0,   0,   3,   0,   1,   0,
     20,   1,   0,   0,   2,   0,   1,   0,
      7,   0,   0,   0,   6,   0,   0,   0,
      0,   0,   1,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   1,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   1,   0,   0,   3,   0,   1,   0,
     28,   1,   0,   0,   2,   0,   1,   0,
     99,  97, 109, 112,  97, 105, 110, 103,
     73,  68,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 111, 118, 105, 110,  99, 101,
     67, 111, 100, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 116,  97, 114, 116,  84, 105, 109,
    101,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 116, 111, 112,  84, 105, 109, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 118, 105,  99, 101,  76, 105,
    115, 116,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 121, 112, 101,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110, 100, 111, 111, 114,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 101, 112, 111, 115, 105, 116, 105,
    111, 110,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_99bfd28ffda77d09 = b_99bfd28ffda77d09.words;
#if !CAPNP_LITE
static const uint16_t m_99bfd28ffda77d09[] = {0, 4, 6, 1, 2, 3, 5, 7};
static const uint16_t i_99bfd28ffda77d09[] = {0, 1, 2, 3, 4, 5, 6, 7};
const ::capnp::_::RawSchema s_99bfd28ffda77d09 = {
  0x99bfd28ffda77d09, b_99bfd28ffda77d09.words, 147, nullptr, m_99bfd28ffda77d09,
  0, 8, i_99bfd28ffda77d09, nullptr, nullptr, { &s_99bfd28ffda77d09, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<47> b_d8aa76dc72b09879 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    121, 152, 176, 114, 220, 118, 170, 216,
     14,   0,   0,   0,   1,   0,   2,   0,
     52, 241, 204,  62, 191,  68,  26, 136,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 186,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  80, 116,
     76,  97, 116,  76, 111, 110,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  18,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  18,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    120,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    121,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d8aa76dc72b09879 = b_d8aa76dc72b09879.words;
#if !CAPNP_LITE
static const uint16_t m_d8aa76dc72b09879[] = {0, 1};
static const uint16_t i_d8aa76dc72b09879[] = {0, 1};
const ::capnp::_::RawSchema s_d8aa76dc72b09879 = {
  0xd8aa76dc72b09879, b_d8aa76dc72b09879.words, 47, nullptr, m_d8aa76dc72b09879,
  0, 2, i_d8aa76dc72b09879, nullptr, nullptr, { &s_d8aa76dc72b09879, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<47> b_cb4f4dfeeeed3f29 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     41,  63, 237, 238, 254,  77,  79, 203,
     14,   0,   0,   0,   1,   0,   2,   0,
     52, 241, 204,  62, 191,  68,  26, 136,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 194,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  80, 111,
    105, 110, 116,  84, 121, 112, 101,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  18,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  18,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    120,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    121,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_cb4f4dfeeeed3f29 = b_cb4f4dfeeeed3f29.words;
#if !CAPNP_LITE
static const uint16_t m_cb4f4dfeeeed3f29[] = {0, 1};
static const uint16_t i_cb4f4dfeeeed3f29[] = {0, 1};
const ::capnp::_::RawSchema s_cb4f4dfeeeed3f29 = {
  0xcb4f4dfeeeed3f29, b_cb4f4dfeeeed3f29.words, 47, nullptr, m_cb4f4dfeeeed3f29,
  0, 2, i_cb4f4dfeeeed3f29, nullptr, nullptr, { &s_cb4f4dfeeeed3f29, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<79> b_a249b85fb5ab8dcc = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    204, 141, 171, 181,  95, 184,  73, 162,
     14,   0,   0,   0,   1,   0,   4,   0,
     52, 241, 204,  62, 191,  68,  26, 136,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 178,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  66, 111,
    120,  84, 121, 112, 101,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    104,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,   0,   0,   0,   3,   0,   1,   0,
    112,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,   0,   0,   0,   3,   0,   1,   0,
    116,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    113,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,   0,   0,   0,   3,   0,   1,   0,
    124,   0,   0,   0,   2,   0,   1,   0,
    116, 111, 112,  76,  97, 116,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98, 111, 116, 116, 111, 109,  76,  97,
    116,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 111, 112,  76, 110, 103,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98, 111, 116, 116, 111, 109,  76, 110,
    103,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a249b85fb5ab8dcc = b_a249b85fb5ab8dcc.words;
#if !CAPNP_LITE
static const uint16_t m_a249b85fb5ab8dcc[] = {1, 3, 0, 2};
static const uint16_t i_a249b85fb5ab8dcc[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_a249b85fb5ab8dcc = {
  0xa249b85fb5ab8dcc, b_a249b85fb5ab8dcc.words, 79, nullptr, m_a249b85fb5ab8dcc,
  0, 4, i_a249b85fb5ab8dcc, nullptr, nullptr, { &s_a249b85fb5ab8dcc, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<279> b_adc051dcaf5d17ba = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    186,  23,  93, 175, 220,  81, 192, 173,
     14,   0,   0,   0,   1,   0,   7,   0,
     52, 241, 204,  62, 191,  68,  26, 136,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 218,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 191,   3,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  80, 111,
    105, 110, 116,  68,  97, 116,  97,  78,
    101, 119,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     68,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    205,   1,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    200,   1,   0,   0,   3,   0,   1,   0,
    212,   1,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    209,   1,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    204,   1,   0,   0,   3,   0,   1,   0,
    216,   1,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    213,   1,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    212,   1,   0,   0,   3,   0,   1,   0,
    224,   1,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   6,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    221,   1,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    216,   1,   0,   0,   3,   0,   1,   0,
    228,   1,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    225,   1,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    220,   1,   0,   0,   3,   0,   1,   0,
    232,   1,   0,   0,   2,   0,   1,   0,
      5,   0,   0,   0,   8,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    229,   1,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    224,   1,   0,   0,   3,   0,   1,   0,
    236,   1,   0,   0,   2,   0,   1,   0,
      6,   0,   0,   0,   9,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    233,   1,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    228,   1,   0,   0,   3,   0,   1,   0,
    240,   1,   0,   0,   2,   0,   1,   0,
      7,   0,   0,   0,  20,   0,   0,   0,
      0,   0,   1,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    237,   1,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    236,   1,   0,   0,   3,   0,   1,   0,
    248,   1,   0,   0,   2,   0,   1,   0,
      8,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   1,   0,   8,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    245,   1,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    240,   1,   0,   0,   3,   0,   1,   0,
    252,   1,   0,   0,   2,   0,   1,   0,
      9,   0,   0,   0,  43,   0,   0,   0,
      0,   0,   1,   0,   9,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    249,   1,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    248,   1,   0,   0,   3,   0,   1,   0,
      4,   2,   0,   0,   2,   0,   1,   0,
     10,   0,   0,   0,  44,   0,   0,   0,
      0,   0,   1,   0,  10,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   2,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   2,   0,   0,   3,   0,   1,   0,
     12,   2,   0,   0,   2,   0,   1,   0,
     11,   0,   0,   0,  45,   0,   0,   0,
      0,   0,   1,   0,  11,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   2,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   2,   0,   0,   3,   0,   1,   0,
     20,   2,   0,   0,   2,   0,   1,   0,
     12,   0,   0,   0, 112,   1,   0,   0,
      0,   0,   1,   0,  12,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   2,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   2,   0,   0,   3,   0,   1,   0,
     24,   2,   0,   0,   2,   0,   1,   0,
     13,   0,   0,   0,  47,   0,   0,   0,
      0,   0,   1,   0,  13,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   2,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   2,   0,   0,   3,   0,   1,   0,
     28,   2,   0,   0,   2,   0,   1,   0,
     14,   0,   0,   0,  48,   0,   0,   0,
      0,   0,   1,   0,  14,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   2,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     20,   2,   0,   0,   3,   0,   1,   0,
     32,   2,   0,   0,   2,   0,   1,   0,
     15,   0,   0,   0,  49,   0,   0,   0,
      0,   0,   1,   0,  15,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   2,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     24,   2,   0,   0,   3,   0,   1,   0,
     36,   2,   0,   0,   2,   0,   1,   0,
     16,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   1,   0,  16,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   2,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     32,   2,   0,   0,   3,   0,   1,   0,
     44,   2,   0,   0,   2,   0,   1,   0,
    108,  97, 116,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 111, 110,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  97, 116, 101, 116, 105, 109, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 100,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 118, 105,  99, 101,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 101, 108, 108,  73,  68,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 102,  99, 110,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 115,  99, 112,  82, 115, 115, 105,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,  99, 110, 111,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  79, 118, 101, 114,  73, 109, 105,
    110,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  79, 118, 101, 114,  73, 109,  97,
    120,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  79, 118, 101, 114,  73,  97, 118,
    103,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110, 100, 111, 111, 114,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 118, 101, 110, 116,  73,  68,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 120, 113, 117,  97, 108,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 121, 112, 101,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 101, 112, 111, 115, 105, 116, 105,
    111, 110,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_adc051dcaf5d17ba = b_adc051dcaf5d17ba.words;
#if !CAPNP_LITE
static const uint16_t m_adc051dcaf5d17ba[] = {11, 10, 9, 5, 2, 4, 8, 13, 3, 12, 0, 1, 6, 7, 14, 15, 16};
static const uint16_t i_adc051dcaf5d17ba[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16};
const ::capnp::_::RawSchema s_adc051dcaf5d17ba = {
  0xadc051dcaf5d17ba, b_adc051dcaf5d17ba.words, 279, nullptr, m_adc051dcaf5d17ba,
  0, 17, i_adc051dcaf5d17ba, nullptr, nullptr, { &s_adc051dcaf5d17ba, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<183> b_e871a5fb9f1ab855 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     85, 184,  26, 159, 251, 165, 113, 232,
     14,   0,   0,   0,   1,   0,   5,   0,
     52, 241, 204,  62, 191,  68,  26, 136,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 242,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  55,   2,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  80, 111,
    105, 110, 116,  68,  97, 116,  97,  86,
    101,  99, 116, 111, 114,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     40,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   1,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   1,   0,   0,   3,   0,   1,   0,
     32,   1,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   1,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     28,   1,   0,   0,   3,   0,   1,   0,
     40,   1,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   1,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   1,   0,   0,   3,   0,   1,   0,
     48,   1,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   1,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   1,   0,   0,   3,   0,   1,   0,
     56,   1,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     53,   1,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     52,   1,   0,   0,   3,   0,   1,   0,
     64,   1,   0,   0,   2,   0,   1,   0,
      5,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     61,   1,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     60,   1,   0,   0,   3,   0,   1,   0,
     72,   1,   0,   0,   2,   0,   1,   0,
      6,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   1,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   1,   0,   0,   3,   0,   1,   0,
     96,   1,   0,   0,   2,   0,   1,   0,
      7,   0,   0,   0,  24,   0,   0,   0,
      0,   0,   1,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     93,   1,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     88,   1,   0,   0,   3,   0,   1,   0,
    100,   1,   0,   0,   2,   0,   1,   0,
      8,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   1,   0,   8,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   1,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   1,   0,   0,   3,   0,   1,   0,
    104,   1,   0,   0,   2,   0,   1,   0,
      9,   0,   0,   0,   8,   0,   0,   0,
      0,   0,   1,   0,   9,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,   1,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,   1,   0,   0,   3,   0,   1,   0,
    112,   1,   0,   0,   2,   0,   1,   0,
    100,  97, 116,  97,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    186,  23,  93, 175, 220,  81, 192, 173,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110, 117, 109,  80, 111, 105, 110, 116,
    115,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  97, 109, 112,  97, 105, 103, 110,
     73,  68,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 111, 118, 105, 110,  99, 101,
     67, 111, 100, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 116,  97, 114, 116,  84, 105, 109,
    101,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 116, 111, 112,  84, 105, 109, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 118, 105,  99, 101,  76, 105,
    115, 116,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 121, 112, 101,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 120,  73,  68,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 111, 116,  97, 108,  80, 111, 105,
    110, 116, 115,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e871a5fb9f1ab855 = b_e871a5fb9f1ab855.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_e871a5fb9f1ab855[] = {
  &s_adc051dcaf5d17ba,
};
static const uint16_t m_e871a5fb9f1ab855[] = {2, 0, 6, 8, 1, 3, 4, 5, 9, 7};
static const uint16_t i_e871a5fb9f1ab855[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9};
const ::capnp::_::RawSchema s_e871a5fb9f1ab855 = {
  0xe871a5fb9f1ab855, b_e871a5fb9f1ab855.words, 183, d_e871a5fb9f1ab855, m_e871a5fb9f1ab855,
  1, 10, i_e871a5fb9f1ab855, nullptr, nullptr, { &s_e871a5fb9f1ab855, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<79> b_8543958636423507 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
      7,  53,  66,  54, 134, 149,  67, 133,
     14,   0,   0,   0,   1,   0,   4,   0,
     52, 241, 204,  62, 191,  68,  26, 136,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 154,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  82, 101,
     99, 116,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    104,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,   0,   0,   0,   3,   0,   1,   0,
    112,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,   0,   0,   0,   3,   0,   1,   0,
    116,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    113,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,   0,   0,   0,   3,   0,   1,   0,
    124,   0,   0,   0,   2,   0,   1,   0,
    116, 111, 112,  76,  97, 116,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98, 111, 116, 116, 111, 109,  76,  97,
    116,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 111, 112,  76, 110, 103,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98, 111, 116, 116, 111, 109,  76, 110,
    103,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_8543958636423507 = b_8543958636423507.words;
#if !CAPNP_LITE
static const uint16_t m_8543958636423507[] = {1, 3, 0, 2};
static const uint16_t i_8543958636423507[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_8543958636423507 = {
  0x8543958636423507, b_8543958636423507.words, 79, nullptr, m_8543958636423507,
  0, 4, i_8543958636423507, nullptr, nullptr, { &s_8543958636423507, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<130> b_ce26efce5dffed46 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     70, 237, 255,  93, 206, 239,  38, 206,
     14,   0,   0,   0,   1,   0,   4,   0,
     52, 241, 204,  62, 191,  68,  26, 136,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 218,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 143,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  67, 108,
    117, 115, 116, 101, 114,  80,  97, 114,
     97, 109,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     28,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    181,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    180,   0,   0,   0,   3,   0,   1,   0,
    192,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    189,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    188,   0,   0,   0,   3,   0,   1,   0,
    200,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    197,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    196,   0,   0,   0,   3,   0,   1,   0,
    208,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    205,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    204,   0,   0,   0,   3,   0,   1,   0,
    216,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   4,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    213,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    212,   0,   0,   0,   3,   0,   1,   0,
    224,   0,   0,   0,   2,   0,   1,   0,
      5,   0,   0,   0,   5,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    221,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    220,   0,   0,   0,   3,   0,   1,   0,
    232,   0,   0,   0,   2,   0,   1,   0,
      6,   0,   0,   0,   6,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    229,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    228,   0,   0,   0,   3,   0,   1,   0,
    240,   0,   0,   0,   2,   0,   1,   0,
    102, 105, 108, 116, 101, 114,  84, 121,
    112, 101,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    122, 111, 111, 109,  76, 101, 118, 101,
    108,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118, 105, 101, 119,  80, 101, 114,  99,
    101, 110, 116,  87,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118, 105, 101, 119,  80, 101, 114,  99,
    101, 110, 116,  72,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 112,  87, 105, 100, 116, 104,
     80, 120,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 112,  72, 101, 105, 103, 104,
    116,  80, 120,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 111, 105, 110, 116,  76, 105, 109,
    105, 116,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ce26efce5dffed46 = b_ce26efce5dffed46.words;
#if !CAPNP_LITE
static const uint16_t m_ce26efce5dffed46[] = {0, 5, 4, 6, 3, 2, 1};
static const uint16_t i_ce26efce5dffed46[] = {0, 1, 2, 3, 4, 5, 6};
const ::capnp::_::RawSchema s_ce26efce5dffed46 = {
  0xce26efce5dffed46, b_ce26efce5dffed46.words, 130, nullptr, m_ce26efce5dffed46,
  0, 7, i_ce26efce5dffed46, nullptr, nullptr, { &s_ce26efce5dffed46, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<278> b_f0374a1e38e6a0d7 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    215, 160, 230,  56,  30,  74,  55, 240,
     14,   0,   0,   0,   1,   0,   7,   0,
     52, 241, 204,  62, 191,  68,  26, 136,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 162,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 191,   3,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  80, 111,
    105, 110, 116,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     68,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    205,   1,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    200,   1,   0,   0,   3,   0,   1,   0,
    212,   1,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   4,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    209,   1,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    204,   1,   0,   0,   3,   0,   1,   0,
    216,   1,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    213,   1,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    208,   1,   0,   0,   3,   0,   1,   0,
    220,   1,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    217,   1,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    212,   1,   0,   0,   3,   0,   1,   0,
    224,   1,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    221,   1,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    220,   1,   0,   0,   3,   0,   1,   0,
    232,   1,   0,   0,   2,   0,   1,   0,
      5,   0,   0,   0,  12,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    229,   1,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    224,   1,   0,   0,   3,   0,   1,   0,
    236,   1,   0,   0,   2,   0,   1,   0,
      6,   0,   0,   0,  13,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    233,   1,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    232,   1,   0,   0,   3,   0,   1,   0,
    244,   1,   0,   0,   2,   0,   1,   0,
      7,   0,   0,   0,  14,   0,   0,   0,
      0,   0,   1,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    241,   1,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    240,   1,   0,   0,   3,   0,   1,   0,
    252,   1,   0,   0,   2,   0,   1,   0,
      8,   0,   0,   0,   4,   0,   0,   0,
      0,   0,   1,   0,   8,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    249,   1,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    248,   1,   0,   0,   3,   0,   1,   0,
      4,   2,   0,   0,   2,   0,   1,   0,
      9,   0,   0,   0,  10,   0,   0,   0,
      0,   0,   1,   0,   9,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   2,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    252,   1,   0,   0,   3,   0,   1,   0,
      8,   2,   0,   0,   2,   0,   1,   0,
     10,   0,   0,   0,  40,   0,   0,   0,
      0,   0,   1,   0,  10,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   2,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   2,   0,   0,   3,   0,   1,   0,
     12,   2,   0,   0,   2,   0,   1,   0,
     11,   0,   0,   0,  30,   0,   0,   0,
      0,   0,   1,   0,  11,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   2,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   2,   0,   0,   3,   0,   1,   0,
     16,   2,   0,   0,   2,   0,   1,   0,
     12,   0,   0,   0,  11,   0,   0,   0,
      0,   0,   1,   0,  12,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   2,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   2,   0,   0,   3,   0,   1,   0,
     20,   2,   0,   0,   2,   0,   1,   0,
     13,   0,   0,   0,  24,   0,   0,   0,
      0,   0,   1,   0,  13,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   2,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   2,   0,   0,   3,   0,   1,   0,
     24,   2,   0,   0,   2,   0,   1,   0,
     14,   0,   0,   0,  25,   0,   0,   0,
      0,   0,   1,   0,  14,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   2,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     20,   2,   0,   0,   3,   0,   1,   0,
     32,   2,   0,   0,   2,   0,   1,   0,
     15,   0,   0,   0,  13,   0,   0,   0,
      0,   0,   1,   0,  15,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   2,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     24,   2,   0,   0,   3,   0,   1,   0,
     36,   2,   0,   0,   2,   0,   1,   0,
     16,   0,   0,   0,  31,   0,   0,   0,
      0,   0,   1,   0,  16,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   2,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     32,   2,   0,   0,   3,   0,   1,   0,
     44,   2,   0,   0,   2,   0,   1,   0,
    105, 100,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 121, 112, 101,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,  97, 116,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 111, 110,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 115,  99, 112,  82, 115, 115, 105,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,  99, 110, 111,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  79, 118, 101, 114,  73, 109, 105,
    110,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  79, 118, 101, 114,  73, 109,  97,
    120,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  97, 116, 101, 116, 105, 109, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 118, 105,  99, 101,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110, 100, 111, 111, 114,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 118, 101, 110, 116,  73,  68,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 101, 108, 108,  73,  68,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 120, 113, 117,  97, 108,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  79, 118, 101, 114,  73,  97, 118,
    103,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 102,  99, 110,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 101, 112, 111, 115, 105, 116, 105,
    111, 110,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f0374a1e38e6a0d7 = b_f0374a1e38e6a0d7.words;
#if !CAPNP_LITE
static const uint16_t m_f0374a1e38e6a0d7[] = {14, 7, 6, 12, 8, 9, 5, 11, 0, 10, 2, 3, 15, 4, 13, 1, 16};
static const uint16_t i_f0374a1e38e6a0d7[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16};
const ::capnp::_::RawSchema s_f0374a1e38e6a0d7 = {
  0xf0374a1e38e6a0d7, b_f0374a1e38e6a0d7.words, 278, nullptr, m_f0374a1e38e6a0d7,
  0, 17, i_f0374a1e38e6a0d7, nullptr, nullptr, { &s_f0374a1e38e6a0d7, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<368> b_b327ba4a3b39bc32 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     50, 188,  57,  59,  74, 186,  39, 179,
     14,   0,   0,   0,   1,   0,   8,   0,
     52, 241, 204,  62, 191,  68,  26, 136,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 194,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  15,   5,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  80, 111,
    105, 110, 116,  70, 117, 108, 108,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     92,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117,   2,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,   2,   0,   0,   3,   0,   1,   0,
    124,   2,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    121,   2,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116,   2,   0,   0,   3,   0,   1,   0,
    128,   2,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   2,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    124,   2,   0,   0,   3,   0,   1,   0,
    136,   2,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   6,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    133,   2,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    128,   2,   0,   0,   3,   0,   1,   0,
    140,   2,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    137,   2,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    132,   2,   0,   0,   3,   0,   1,   0,
    144,   2,   0,   0,   2,   0,   1,   0,
      5,   0,   0,   0,   8,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    141,   2,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    136,   2,   0,   0,   3,   0,   1,   0,
    148,   2,   0,   0,   2,   0,   1,   0,
      6,   0,   0,   0,   9,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    145,   2,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    140,   2,   0,   0,   3,   0,   1,   0,
    152,   2,   0,   0,   2,   0,   1,   0,
      7,   0,   0,   0,  40,   0,   0,   0,
      0,   0,   1,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    149,   2,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    144,   2,   0,   0,   3,   0,   1,   0,
    156,   2,   0,   0,   2,   0,   1,   0,
      8,   0,   0,   0,  21,   0,   0,   0,
      0,   0,   1,   0,   8,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    153,   2,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    152,   2,   0,   0,   3,   0,   1,   0,
    164,   2,   0,   0,   2,   0,   1,   0,
      9,   0,   0,   0,  41,   0,   0,   0,
      0,   0,   1,   0,   9,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    161,   2,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    156,   2,   0,   0,   3,   0,   1,   0,
    168,   2,   0,   0,   2,   0,   1,   0,
     10,   0,   0,   0,  44,   0,   0,   0,
      0,   0,   1,   0,  10,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    165,   2,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    164,   2,   0,   0,   3,   0,   1,   0,
    176,   2,   0,   0,   2,   0,   1,   0,
     11,   0,   0,   0,  45,   0,   0,   0,
      0,   0,   1,   0,  11,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    173,   2,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    172,   2,   0,   0,   3,   0,   1,   0,
    184,   2,   0,   0,   2,   0,   1,   0,
     12,   0,   0,   0,  46,   0,   0,   0,
      0,   0,   1,   0,  12,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    181,   2,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    180,   2,   0,   0,   3,   0,   1,   0,
    192,   2,   0,   0,   2,   0,   1,   0,
     13,   0,   0,   0,  47,   0,   0,   0,
      0,   0,   1,   0,  13,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    189,   2,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    184,   2,   0,   0,   3,   0,   1,   0,
    196,   2,   0,   0,   2,   0,   1,   0,
     14,   0,   0,   0,  48,   0,   0,   0,
      0,   0,   1,   0,  14,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    193,   2,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    188,   2,   0,   0,   3,   0,   1,   0,
    200,   2,   0,   0,   2,   0,   1,   0,
     15,   0,   0,   0,  49,   0,   0,   0,
      0,   0,   1,   0,  15,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    197,   2,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    192,   2,   0,   0,   3,   0,   1,   0,
    204,   2,   0,   0,   2,   0,   1,   0,
     16,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   1,   0,  16,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    201,   2,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    196,   2,   0,   0,   3,   0,   1,   0,
    208,   2,   0,   0,   2,   0,   1,   0,
     17,   0,   0,   0,  51,   0,   0,   0,
      0,   0,   1,   0,  17,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    205,   2,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    200,   2,   0,   0,   3,   0,   1,   0,
    212,   2,   0,   0,   2,   0,   1,   0,
     18,   0,   0,   0,  52,   0,   0,   0,
      0,   0,   1,   0,  18,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    209,   2,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    204,   2,   0,   0,   3,   0,   1,   0,
    216,   2,   0,   0,   2,   0,   1,   0,
     19,   0,   0,   0,  53,   0,   0,   0,
      0,   0,   1,   0,  19,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    213,   2,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    208,   2,   0,   0,   3,   0,   1,   0,
    220,   2,   0,   0,   2,   0,   1,   0,
     20,   0,   0,   0,  54,   0,   0,   0,
      0,   0,   1,   0,  20,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    217,   2,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    212,   2,   0,   0,   3,   0,   1,   0,
    224,   2,   0,   0,   2,   0,   1,   0,
     21,   0,   0,   0,  55,   0,   0,   0,
      0,   0,   1,   0,  21,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    221,   2,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    220,   2,   0,   0,   3,   0,   1,   0,
    232,   2,   0,   0,   2,   0,   1,   0,
     22,   0,   0,   0, 192,   1,   0,   0,
      0,   0,   1,   0,  22,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    229,   2,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    224,   2,   0,   0,   3,   0,   1,   0,
    236,   2,   0,   0,   2,   0,   1,   0,
    108,  97, 116,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 111, 110,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  97, 116, 101, 116, 105, 109, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 100,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 118, 105,  99, 101,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 101, 108, 108,  73,  68,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 102,  99, 110,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 121, 112, 101,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 115,  99, 112,  82, 115, 115, 105,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,  99, 110, 111,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  79, 118, 101, 114,  73, 109, 105,
    110,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  79, 118, 101, 114,  73, 109,  97,
    120,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  79, 118, 101, 114,  73,  97, 118,
    103,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 118, 101, 110, 116,  73,  68,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 120, 113, 117,  97, 108,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 120, 108, 101, 118,  49,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 120, 108, 101, 118,  50,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 120, 108, 101, 118,  51,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 120, 108, 101, 118,  52,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 120, 108, 101, 118,  53,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 120, 108, 101, 118,  54,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 101, 112, 111, 115, 105, 116, 105,
    111, 110,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110, 100, 111, 111, 114,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b327ba4a3b39bc32 = b_b327ba4a3b39bc32.words;
#if !CAPNP_LITE
static const uint16_t m_b327ba4a3b39bc32[] = {12, 11, 10, 5, 2, 4, 9, 13, 3, 22, 0, 1, 6, 8, 15, 16, 17, 18, 19, 20, 14, 7, 21};
static const uint16_t i_b327ba4a3b39bc32[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22};
const ::capnp::_::RawSchema s_b327ba4a3b39bc32 = {
  0xb327ba4a3b39bc32, b_b327ba4a3b39bc32.words, 368, nullptr, m_b327ba4a3b39bc32,
  0, 23, i_b327ba4a3b39bc32, nullptr, nullptr, { &s_b327ba4a3b39bc32, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<101> b_e7d8183072ea74aa = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    170, 116, 234, 114,  48,  24, 216, 231,
     14,   0,   0,   0,   1,   0,   1,   0,
     52, 241, 204,  62, 191,  68,  26, 136,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 186,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  31,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  84, 105,
    108, 101,  68,  97, 116,  97,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     20,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,   0,   0,   0,   3,   0,   1,   0,
    148,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    145,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    140,   0,   0,   0,   3,   0,   1,   0,
    168,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    165,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    160,   0,   0,   0,   3,   0,   1,   0,
    172,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    169,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    168,   0,   0,   0,   3,   0,   1,   0,
    180,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    177,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    172,   0,   0,   0,   3,   0,   1,   0,
    184,   0,   0,   0,   2,   0,   1,   0,
    100,  97, 116,  97,  50,  71,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     50, 188,  57,  59,  74, 186,  39, 179,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  97, 116,  97,  51,  71,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     50, 188,  57,  59,  74, 186,  39, 179,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98,  98,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    204, 141, 171, 181,  95, 184,  73, 162,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110, 117, 109,  80, 111, 105, 110, 116,
    115,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 120,  73, 100,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e7d8183072ea74aa = b_e7d8183072ea74aa.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_e7d8183072ea74aa[] = {
  &s_a249b85fb5ab8dcc,
  &s_b327ba4a3b39bc32,
};
static const uint16_t m_e7d8183072ea74aa[] = {2, 0, 1, 4, 3};
static const uint16_t i_e7d8183072ea74aa[] = {0, 1, 2, 3, 4};
const ::capnp::_::RawSchema s_e7d8183072ea74aa = {
  0xe7d8183072ea74aa, b_e7d8183072ea74aa.words, 101, d_e7d8183072ea74aa, m_e7d8183072ea74aa,
  2, 5, i_e7d8183072ea74aa, nullptr, nullptr, { &s_e7d8183072ea74aa, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<140> b_adde30bdc518106c = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    108,  16,  24, 197, 189,  48, 222, 173,
     14,   0,   0,   0,   1,   0,   4,   0,
     52, 241, 204,  62, 191,  68,  26, 136,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 226,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 199,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    112,  68, 101, 116,  97, 105, 108,  68,
     97, 116,  97,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     32,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    209,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    204,   0,   0,   0,   3,   0,   1,   0,
    216,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    213,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    212,   0,   0,   0,   3,   0,   1,   0,
    224,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    221,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    216,   0,   0,   0,   3,   0,   1,   0,
    228,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   8,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    225,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    224,   0,   0,   0,   3,   0,   1,   0,
    236,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    233,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    228,   0,   0,   0,   3,   0,   1,   0,
    240,   0,   0,   0,   2,   0,   1,   0,
      5,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    237,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    232,   0,   0,   0,   3,   0,   1,   0,
    244,   0,   0,   0,   2,   0,   1,   0,
      6,   0,   0,   0,   9,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    241,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    236,   0,   0,   0,   3,   0,   1,   0,
    248,   0,   0,   0,   2,   0,   1,   0,
      7,   0,   0,   0,  10,   0,   0,   0,
      0,   0,   1,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    245,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    240,   0,   0,   0,   3,   0,   1,   0,
    252,   0,   0,   0,   2,   0,   1,   0,
     98,  98,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    204, 141, 171, 181,  95, 184,  73, 162,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110, 117, 109,  80, 111, 105, 110, 116,
    115,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 120,  73, 100,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110, 117, 109,  84, 105, 108, 101, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 120,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 121,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110,  82,  79,  87,  83,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110,  67,  79,  76,  83,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_adde30bdc518106c = b_adde30bdc518106c.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_adde30bdc518106c[] = {
  &s_a249b85fb5ab8dcc,
};
static const uint16_t m_adde30bdc518106c[] = {0, 4, 5, 2, 7, 6, 1, 3};
static const uint16_t i_adde30bdc518106c[] = {0, 1, 2, 3, 4, 5, 6, 7};
const ::capnp::_::RawSchema s_adde30bdc518106c = {
  0xadde30bdc518106c, b_adde30bdc518106c.words, 140, d_adde30bdc518106c, m_adde30bdc518106c,
  1, 8, i_adde30bdc518106c, nullptr, nullptr, { &s_adde30bdc518106c, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<90> b_b865502aff3ab93a = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     58, 185,  58, 255,  42,  80, 101, 184,
     14,   0,   0,   0,   1,   0,   1,   0,
     52, 241, 204,  62, 191,  68,  26, 136,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 178,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  82, 101,
    115, 117, 108, 116, 115,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    120,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,   0,   0,   0,   3,   0,   1,   0,
    156,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    153,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    148,   0,   0,   0,   3,   0,   1,   0,
    160,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    157,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    156,   0,   0,   0,   3,   0,   1,   0,
    168,   0,   0,   0,   2,   0,   1,   0,
    100,  97, 116,  97,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    215, 160, 230,  56,  30,  74,  55, 240,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101, 109,  97, 105, 110, 115,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    121, 152, 176, 114, 220, 118, 170, 216,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 111,  97, 100, 101, 100,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110, 117, 109,  80, 111, 105, 110, 116,
    115,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b865502aff3ab93a = b_b865502aff3ab93a.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_b865502aff3ab93a[] = {
  &s_d8aa76dc72b09879,
  &s_f0374a1e38e6a0d7,
};
static const uint16_t m_b865502aff3ab93a[] = {0, 2, 3, 1};
static const uint16_t i_b865502aff3ab93a[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_b865502aff3ab93a = {
  0xb865502aff3ab93a, b_b865502aff3ab93a.words, 90, d_b865502aff3ab93a, m_b865502aff3ab93a,
  2, 4, i_b865502aff3ab93a, nullptr, nullptr, { &s_b865502aff3ab93a, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<250> b_87934c0c63ebb108 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
      8, 177, 235,  99,  12,  76, 147, 135,
     14,   0,   0,   0,   1,   0,   6,   0,
     52, 241, 204,  62, 191,  68,  26, 136,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 242,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  79,   3,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  65, 110,
     97, 108, 121, 115, 105, 115,  79, 112,
    116, 105, 111, 110, 115,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     60,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    149,   1,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    144,   1,   0,   0,   3,   0,   1,   0,
    156,   1,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    153,   1,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    148,   1,   0,   0,   3,   0,   1,   0,
    160,   1,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   4,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    157,   1,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    156,   1,   0,   0,   3,   0,   1,   0,
    168,   1,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   5,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    165,   1,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    164,   1,   0,   0,   3,   0,   1,   0,
    176,   1,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   6,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    173,   1,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    172,   1,   0,   0,   3,   0,   1,   0,
    184,   1,   0,   0,   2,   0,   1,   0,
      5,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    181,   1,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    176,   1,   0,   0,   3,   0,   1,   0,
    188,   1,   0,   0,   2,   0,   1,   0,
      6,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    185,   1,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    180,   1,   0,   0,   3,   0,   1,   0,
    192,   1,   0,   0,   2,   0,   1,   0,
      7,   0,   0,   0,  14,   0,   0,   0,
      0,   0,   1,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    189,   1,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    188,   1,   0,   0,   3,   0,   1,   0,
    200,   1,   0,   0,   2,   0,   1,   0,
      8,   0,   0,   0,   8,   0,   0,   0,
      0,   0,   1,   0,   8,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    197,   1,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    192,   1,   0,   0,   3,   0,   1,   0,
    204,   1,   0,   0,   2,   0,   1,   0,
      9,   0,   0,   0,   9,   0,   0,   0,
      0,   0,   1,   0,   9,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    201,   1,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    196,   1,   0,   0,   3,   0,   1,   0,
    208,   1,   0,   0,   2,   0,   1,   0,
     10,   0,   0,   0,  15,   0,   0,   0,
      0,   0,   1,   0,  10,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    205,   1,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    204,   1,   0,   0,   3,   0,   1,   0,
    216,   1,   0,   0,   2,   0,   1,   0,
     11,   0,   0,   0,  10,   0,   0,   0,
      0,   0,   1,   0,  11,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    213,   1,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    208,   1,   0,   0,   3,   0,   1,   0,
    220,   1,   0,   0,   2,   0,   1,   0,
     12,   0,   0,   0,  44,   0,   0,   0,
      0,   0,   1,   0,  12,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    217,   1,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    212,   1,   0,   0,   3,   0,   1,   0,
    224,   1,   0,   0,   2,   0,   1,   0,
     13,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   1,   0,  13,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    221,   1,   0,   0, 130,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    220,   1,   0,   0,   3,   0,   1,   0,
    232,   1,   0,   0,   2,   0,   1,   0,
     14,   0,   0,   0, 104,   1,   0,   0,
      0,   0,   1,   0,  14,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    229,   1,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    228,   1,   0,   0,   3,   0,   1,   0,
    240,   1,   0,   0,   2,   0,   1,   0,
    101, 112, 115,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 105, 110,  80,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  98, 109,  84, 104, 114, 101, 115,
    104, 111, 108, 100,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 115, 115, 105,  84, 104, 114, 101,
    115, 104, 111, 108, 100,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,  99, 110, 111,  84, 104, 114, 101,
    115, 104, 111, 108, 100,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 120,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 121,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 110,  97, 108, 121, 115, 105, 115,
     84, 121, 112, 101,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    111, 118,  50,  71,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    111, 118,  51,  71,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  97, 116,  97,  84, 121, 112, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 105, 110,  80, 116, 115,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    111, 118,  69, 120, 116, 114,  97,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 120, 113, 117,  97, 108,  84, 104,
    114, 101, 115, 104, 111, 108, 100,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118, 105, 101, 119,  69, 120, 116, 114,
     97,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_87934c0c63ebb108 = b_87934c0c63ebb108.words;
#if !CAPNP_LITE
static const uint16_t m_87934c0c63ebb108[] = {7, 10, 2, 4, 0, 5, 6, 1, 11, 8, 9, 12, 3, 13, 14};
static const uint16_t i_87934c0c63ebb108[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14};
const ::capnp::_::RawSchema s_87934c0c63ebb108 = {
  0x87934c0c63ebb108, b_87934c0c63ebb108.words, 250, nullptr, m_87934c0c63ebb108,
  0, 15, i_87934c0c63ebb108, nullptr, nullptr, { &s_87934c0c63ebb108, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<197> b_df909ab6846d65af = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    175, 101, 109, 132, 182, 154, 144, 223,
     14,   0,   0,   0,   1,   0,   7,   0,
     52, 241, 204,  62, 191,  68,  26, 136,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 202,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 111,   2,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  82, 101,
    115, 117, 108, 116,  84, 121, 112, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     44,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   1,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     32,   1,   0,   0,   3,   0,   1,   0,
     44,   1,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   1,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   1,   0,   0,   3,   0,   1,   0,
     52,   1,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   1,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     48,   1,   0,   0,   3,   0,   1,   0,
     60,   1,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     57,   1,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     56,   1,   0,   0,   3,   0,   1,   0,
     68,   1,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   4,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     65,   1,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     60,   1,   0,   0,   3,   0,   1,   0,
     72,   1,   0,   0,   2,   0,   1,   0,
      5,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   1,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   1,   0,   0,   3,   0,   1,   0,
     80,   1,   0,   0,   2,   0,   1,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   1,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   1,   0,   0,   3,   0,   1,   0,
    116,   1,   0,   0,   2,   0,   1,   0,
      7,   0,   0,   0,  40,   0,   0,   0,
      0,   0,   1,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    113,   1,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,   1,   0,   0,   3,   0,   1,   0,
    120,   1,   0,   0,   2,   0,   1,   0,
      8,   0,   0,   0,  41,   0,   0,   0,
      0,   0,   1,   0,   8,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117,   1,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116,   1,   0,   0,   3,   0,   1,   0,
    128,   1,   0,   0,   2,   0,   1,   0,
      9,   0,   0,   0,  11,   0,   0,   0,
      0,   0,   1,   0,   9,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   1,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,   1,   0,   0,   3,   0,   1,   0,
    132,   1,   0,   0,   2,   0,   1,   0,
     10,   0,   0,   0,  12,   0,   0,   0,
      0,   0,   1,   0,  10,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    129,   1,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    128,   1,   0,   0,   3,   0,   1,   0,
    140,   1,   0,   0,   2,   0,   1,   0,
     97, 114, 101,  97,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110, 117, 109,  80, 111, 105, 110, 116,
    115,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 101, 110, 116, 114, 111, 105, 100,
    120,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 101, 110, 116, 114, 111, 105, 100,
    121,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114,  97, 100, 105, 117, 115,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 111, 116,  97, 108,  80, 111, 105,
    110, 116, 115,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  97, 116,  97,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    121, 152, 176, 114, 220, 118, 170, 216,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 121, 112, 101,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  97, 116,  97,  84, 121, 112, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 120,  73,  68,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 112,  78, 117, 109,  80, 111,
    105, 110, 116, 115,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_df909ab6846d65af = b_df909ab6846d65af.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_df909ab6846d65af[] = {
  &s_d8aa76dc72b09879,
};
static const uint16_t m_df909ab6846d65af[] = {0, 2, 3, 6, 8, 10, 9, 1, 4, 5, 7};
static const uint16_t i_df909ab6846d65af[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
const ::capnp::_::RawSchema s_df909ab6846d65af = {
  0xdf909ab6846d65af, b_df909ab6846d65af.words, 197, d_df909ab6846d65af, m_df909ab6846d65af,
  1, 11, i_df909ab6846d65af, nullptr, nullptr, { &s_df909ab6846d65af, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<124> b_ff5f829257371879 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    121,  24,  55,  87, 146, 130,  95, 255,
     14,   0,   0,   0,   1,   0,   4,   0,
     52, 241, 204,  62, 191,  68,  26, 136,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 234,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 143,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  78, 101,
    105, 103, 104,  98, 111, 117, 114, 115,
     68,  97, 116,  97,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     28,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    181,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    180,   0,   0,   0,   3,   0,   1,   0,
    192,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    189,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    184,   0,   0,   0,   3,   0,   1,   0,
    196,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    193,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    188,   0,   0,   0,   3,   0,   1,   0,
    200,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    197,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    192,   0,   0,   0,   3,   0,   1,   0,
    204,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    201,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    196,   0,   0,   0,   3,   0,   1,   0,
    208,   0,   0,   0,   2,   0,   1,   0,
      5,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    205,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    200,   0,   0,   0,   3,   0,   1,   0,
    212,   0,   0,   0,   2,   0,   1,   0,
      6,   0,   0,   0,   6,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    209,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    204,   0,   0,   0,   3,   0,   1,   0,
    216,   0,   0,   0,   2,   0,   1,   0,
     99, 101, 108, 108,  67, 111, 100, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 117, 110, 116,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 111, 116,  97, 108, 115,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 101, 114,  99, 101, 110, 116,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,  97, 116,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 111, 110,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 122, 105, 109, 117, 116, 104,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ff5f829257371879 = b_ff5f829257371879.words;
#if !CAPNP_LITE
static const uint16_t m_ff5f829257371879[] = {6, 0, 1, 4, 5, 3, 2};
static const uint16_t i_ff5f829257371879[] = {0, 1, 2, 3, 4, 5, 6};
const ::capnp::_::RawSchema s_ff5f829257371879 = {
  0xff5f829257371879, b_ff5f829257371879.words, 124, nullptr, m_ff5f829257371879,
  0, 7, i_ff5f829257371879, nullptr, nullptr, { &s_ff5f829257371879, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<143> b_e9a3eaaee368bf59 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     89, 191, 104, 227, 174, 234, 163, 233,
     14,   0,   0,   0,   1,   0,   4,   0,
     52, 241, 204,  62, 191,  68,  26, 136,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,   2,   1,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 199,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  77, 105,
    115, 115, 105, 110, 103,  78, 101, 105,
    103, 104,  98, 111, 117, 114, 115,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     32,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    209,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    204,   0,   0,   0,   3,   0,   1,   0,
    216,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    213,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    208,   0,   0,   0,   3,   0,   1,   0,
    236,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    233,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    228,   0,   0,   0,   3,   0,   1,   0,
    240,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    237,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    232,   0,   0,   0,   3,   0,   1,   0,
    244,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   8,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    241,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    236,   0,   0,   0,   3,   0,   1,   0,
    248,   0,   0,   0,   2,   0,   1,   0,
      5,   0,   0,   0,  18,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    245,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    240,   0,   0,   0,   3,   0,   1,   0,
    252,   0,   0,   0,   2,   0,   1,   0,
      6,   0,   0,   0,   5,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    249,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    244,   0,   0,   0,   3,   0,   1,   0,
      0,   1,   0,   0,   2,   0,   1,   0,
      7,   0,   0,   0,   6,   0,   0,   0,
      0,   0,   1,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    253,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    252,   0,   0,   0,   3,   0,   1,   0,
      8,   1,   0,   0,   2,   0,   1,   0,
    115, 101, 114, 118, 105, 110, 103,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 105, 115, 115, 105, 110, 103,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    121,  24,  55,  87, 146, 130,  95, 255,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,  97, 116,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 111, 110,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 122, 105, 109, 117, 116, 104,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 121, 112, 101,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 120,  73,  68,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 112,  78, 117, 109,  80, 111,
    105, 110, 116, 115,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e9a3eaaee368bf59 = b_e9a3eaaee368bf59.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_e9a3eaaee368bf59[] = {
  &s_ff5f829257371879,
};
static const uint16_t m_e9a3eaaee368bf59[] = {4, 2, 3, 7, 6, 1, 0, 5};
static const uint16_t i_e9a3eaaee368bf59[] = {0, 1, 2, 3, 4, 5, 6, 7};
const ::capnp::_::RawSchema s_e9a3eaaee368bf59 = {
  0xe9a3eaaee368bf59, b_e9a3eaaee368bf59.words, 143, d_e9a3eaaee368bf59, m_e9a3eaaee368bf59,
  1, 8, i_e9a3eaaee368bf59, nullptr, nullptr, { &s_e9a3eaaee368bf59, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<49> b_d60b1f58294adb30 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     48, 219,  74,  41,  88,  31,  11, 214,
     14,   0,   0,   0,   1,   0,   1,   0,
     52, 241, 204,  62, 191,  68,  26, 136,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 226,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  79, 118,
    101, 114, 108,  97, 112,  82, 101, 112,
    111, 114, 116,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
    110, 117, 109,  67, 101, 108, 108, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 101, 114,  99, 101, 110, 116,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d60b1f58294adb30 = b_d60b1f58294adb30.words;
#if !CAPNP_LITE
static const uint16_t m_d60b1f58294adb30[] = {0, 1};
static const uint16_t i_d60b1f58294adb30[] = {0, 1};
const ::capnp::_::RawSchema s_d60b1f58294adb30 = {
  0xd60b1f58294adb30, b_d60b1f58294adb30.words, 49, nullptr, m_d60b1f58294adb30,
  0, 2, i_d60b1f58294adb30, nullptr, nullptr, { &s_d60b1f58294adb30, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<99> b_e4315cc04628e715 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     21, 231,  40,  70, 192,  92,  49, 228,
     14,   0,   0,   0,   1,   0,   1,   0,
     52, 241, 204,  62, 191,  68,  26, 136,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  10,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  79, 118,
    101, 114, 108,  97, 112,  70, 105, 110,
     97, 108,  82, 101, 112, 111, 114, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     96,   0,   0,   0,   3,   0,   1,   0,
    140,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    137,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    136,   0,   0,   0,   3,   0,   1,   0,
    180,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    177,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    176,   0,   0,   0,   3,   0,   1,   0,
    188,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    185,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    184,   0,   0,   0,   3,   0,   1,   0,
    196,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 112, 111, 114, 116,  50,  71,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     48, 219,  74,  41,  88,  31,  11, 214,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101, 112, 111, 114, 116,  51,  71,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     48, 219,  74,  41,  88,  31,  11, 214,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  97, 109, 112,  97, 105, 103, 110,
     73,  68,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 111, 118, 105, 110,  99, 101,
     67, 111, 100, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e4315cc04628e715 = b_e4315cc04628e715.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_e4315cc04628e715[] = {
  &s_d60b1f58294adb30,
};
static const uint16_t m_e4315cc04628e715[] = {2, 3, 0, 1};
static const uint16_t i_e4315cc04628e715[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_e4315cc04628e715 = {
  0xe4315cc04628e715, b_e4315cc04628e715.words, 99, d_e4315cc04628e715, m_e4315cc04628e715,
  1, 4, i_e4315cc04628e715, nullptr, nullptr, { &s_e4315cc04628e715, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<49> b_db0f58c2ea8e6040 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     64,  96, 142, 234, 194,  88,  15, 219,
     14,   0,   0,   0,   1,   0,   1,   0,
     52, 241, 204,  62, 191,  68,  26, 136,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  34,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  77, 105,
    115, 115, 105, 110, 103,  78, 101, 105,
    103, 104,  98, 111, 117, 114,  80,  97,
    114,  97, 109,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    114,  83, 101,  97, 114,  99, 104,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 105, 110,  79,  70,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_db0f58c2ea8e6040 = b_db0f58c2ea8e6040.words;
#if !CAPNP_LITE
static const uint16_t m_db0f58c2ea8e6040[] = {1, 0};
static const uint16_t i_db0f58c2ea8e6040[] = {0, 1};
const ::capnp::_::RawSchema s_db0f58c2ea8e6040 = {
  0xdb0f58c2ea8e6040, b_db0f58c2ea8e6040.words, 49, nullptr, m_db0f58c2ea8e6040,
  0, 2, i_db0f58c2ea8e6040, nullptr, nullptr, { &s_db0f58c2ea8e6040, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<95> b_e5f574c1d34a590b = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     11,  89,  74, 211, 193, 116, 245, 229,
     14,   0,   0,   0,   1,   0,   2,   0,
     52, 241, 204,  62, 191,  68,  26, 136,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 218,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  31,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  70, 101,
    101, 100, 101, 114,  80,  97, 114,  97,
    109, 115,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     20,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   0,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    124,   0,   0,   0,   3,   0,   1,   0,
    136,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    133,   0,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    132,   0,   0,   0,   3,   0,   1,   0,
    144,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    141,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    136,   0,   0,   0,   3,   0,   1,   0,
    148,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    145,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    140,   0,   0,   0,   3,   0,   1,   0,
    152,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    149,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    144,   0,   0,   0,   3,   0,   1,   0,
    156,   0,   0,   0,   2,   0,   1,   0,
    109, 105, 110,  83, 116, 114, 101, 110,
    103, 116, 104,  50,  71,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 105, 110,  83, 116, 114, 101, 110,
    103, 116, 104,  51,  71,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 105, 110,  80, 116, 115,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 105, 110,  82,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 105, 110,  80,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e5f574c1d34a590b = b_e5f574c1d34a590b.words;
#if !CAPNP_LITE
static const uint16_t m_e5f574c1d34a590b[] = {4, 2, 3, 0, 1};
static const uint16_t i_e5f574c1d34a590b[] = {0, 1, 2, 3, 4};
const ::capnp::_::RawSchema s_e5f574c1d34a590b = {
  0xe5f574c1d34a590b, b_e5f574c1d34a590b.words, 95, nullptr, m_e5f574c1d34a590b,
  0, 5, i_e5f574c1d34a590b, nullptr, nullptr, { &s_e5f574c1d34a590b, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<267> b_8d0b56555e193d45 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     69,  61,  25,  94,  85,  86,  11, 141,
     14,   0,   0,   0,   1,   0,   9,   0,
     52, 241, 204,  62, 191,  68,  26, 136,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 186,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 135,   3,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  67, 101,
    108, 108,  73, 110, 102, 111,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     64,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    177,   1,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    176,   1,   0,   0,   3,   0,   1,   0,
    204,   1,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    201,   1,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    200,   1,   0,   0,   3,   0,   1,   0,
    212,   1,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    209,   1,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    204,   1,   0,   0,   3,   0,   1,   0,
    216,   1,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    213,   1,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    208,   1,   0,   0,   3,   0,   1,   0,
    220,   1,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   4,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    217,   1,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    212,   1,   0,   0,   3,   0,   1,   0,
    224,   1,   0,   0,   2,   0,   1,   0,
      5,   0,   0,   0,   5,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    221,   1,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    216,   1,   0,   0,   3,   0,   1,   0,
    228,   1,   0,   0,   2,   0,   1,   0,
      6,   0,   0,   0,   6,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    225,   1,   0,   0, 162,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    228,   1,   0,   0,   3,   0,   1,   0,
    240,   1,   0,   0,   2,   0,   1,   0,
      7,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   1,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    237,   1,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    232,   1,   0,   0,   3,   0,   1,   0,
    244,   1,   0,   0,   2,   0,   1,   0,
      8,   0,   0,   0,  16,   0,   0,   0,
      0,   0,   1,   0,   8,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    241,   1,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    236,   1,   0,   0,   3,   0,   1,   0,
    248,   1,   0,   0,   2,   0,   1,   0,
      9,   0,   0,   0,   9,   0,   0,   0,
      0,   0,   1,   0,   9,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    245,   1,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    240,   1,   0,   0,   3,   0,   1,   0,
    252,   1,   0,   0,   2,   0,   1,   0,
     10,   0,   0,   0,  10,   0,   0,   0,
      0,   0,   1,   0,  10,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    249,   1,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    244,   1,   0,   0,   3,   0,   1,   0,
      0,   2,   0,   0,   2,   0,   1,   0,
     11,   0,   0,   0,  11,   0,   0,   0,
      0,   0,   1,   0,  11,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    253,   1,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    248,   1,   0,   0,   3,   0,   1,   0,
      4,   2,   0,   0,   2,   0,   1,   0,
     12,   0,   0,   0,  12,   0,   0,   0,
      0,   0,   1,   0,  12,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   2,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    252,   1,   0,   0,   3,   0,   1,   0,
      8,   2,   0,   0,   2,   0,   1,   0,
     13,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   1,   0,  13,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   2,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   2,   0,   0,   3,   0,   1,   0,
     12,   2,   0,   0,   2,   0,   1,   0,
     14,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   1,   0,  14,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   2,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   2,   0,   0,   3,   0,   1,   0,
     20,   2,   0,   0,   2,   0,   1,   0,
     15,   0,   0,   0,   8,   0,   0,   0,
      0,   0,   1,   0,  15,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   2,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   2,   0,   0,   3,   0,   1,   0,
     28,   2,   0,   0,   2,   0,   1,   0,
    110, 101, 105, 103, 104,  98, 111, 114,
    115,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 101, 108, 108,  67, 111, 100, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,  97, 116,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 110, 103,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 101, 114,  99, 101, 110, 116,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 105, 108, 116,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 110, 116, 101, 110, 110,  97,  72,
    101, 105, 103, 104, 116,  71, 114, 111,
    117, 110, 100,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 111, 116,  97, 108,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 122, 105, 109, 117, 116, 104,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 105,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,  97,  99,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98,  99,  99, 104,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 115,  99,  66, 115, 105,  99,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 121, 112, 101,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118, 111, 105,  99, 101,  84, 114,  97,
    102, 102, 105,  99,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  97, 116,  97,  84, 114,  97, 102,
    102, 105,  99,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_8d0b56555e193d45 = b_8d0b56555e193d45.words;
#if !CAPNP_LITE
static const uint16_t m_8d0b56555e193d45[] = {6, 8, 11, 1, 9, 15, 10, 2, 3, 0, 4, 12, 5, 7, 13, 14};
static const uint16_t i_8d0b56555e193d45[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15};
const ::capnp::_::RawSchema s_8d0b56555e193d45 = {
  0x8d0b56555e193d45, b_8d0b56555e193d45.words, 267, nullptr, m_8d0b56555e193d45,
  0, 16, i_8d0b56555e193d45, nullptr, nullptr, { &s_8d0b56555e193d45, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<208> b_a448d2161985fd79 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    121, 253, 133,  25,  22, 210,  72, 164,
     14,   0,   0,   0,   1,   0,   6,   0,
     52, 241, 204,  62, 191,  68,  26, 136,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 218,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 167,   2,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  67, 101,
    108, 108,  68,  97, 116,  97,  73, 110,
    102, 111,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     48,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     65,   1,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   1,   0,   0,   3,   0,   1,   0,
     92,   1,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     89,   1,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     88,   1,   0,   0,   3,   0,   1,   0,
    100,   1,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   1,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   1,   0,   0,   3,   0,   1,   0,
    104,   1,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,   1,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     96,   1,   0,   0,   3,   0,   1,   0,
    108,   1,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   4,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105,   1,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,   1,   0,   0,   3,   0,   1,   0,
    112,   1,   0,   0,   2,   0,   1,   0,
      5,   0,   0,   0,  10,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,   1,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,   1,   0,   0,   3,   0,   1,   0,
    116,   1,   0,   0,   2,   0,   1,   0,
      6,   0,   0,   0,  22,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    113,   1,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,   1,   0,   0,   3,   0,   1,   0,
    120,   1,   0,   0,   2,   0,   1,   0,
      7,   0,   0,   0,   6,   0,   0,   0,
      0,   0,   1,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117,   1,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,   1,   0,   0,   3,   0,   1,   0,
    124,   1,   0,   0,   2,   0,   1,   0,
      8,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   1,   0,   8,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    121,   1,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,   1,   0,   0,   3,   0,   1,   0,
    132,   1,   0,   0,   2,   0,   1,   0,
      9,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   9,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    129,   1,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    128,   1,   0,   0,   3,   0,   1,   0,
    140,   1,   0,   0,   2,   0,   1,   0,
     10,   0,   0,   0,   4,   0,   0,   0,
      0,   0,   1,   0,  10,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    137,   1,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    136,   1,   0,   0,   3,   0,   1,   0,
    148,   1,   0,   0,   2,   0,   1,   0,
     11,   0,   0,   0,   5,   0,   0,   0,
      0,   0,   1,   0,  11,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    145,   1,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    144,   1,   0,   0,   3,   0,   1,   0,
    156,   1,   0,   0,   2,   0,   1,   0,
    114, 101, 108,  97, 116, 105, 111, 110,
    115,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 101, 108, 108,  78,  97, 109, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,  97, 116,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 110, 103,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 105,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 122, 105, 109, 117, 116, 104,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 121, 112, 101,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 101, 108, 108,  73, 100,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 116,  97, 116, 105, 111, 110,  72,
    111, 117, 115, 101,  73, 100,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 116,  97, 116, 105, 111, 110,  67,
    111, 100, 101,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118, 111, 105,  99, 101,  84, 114,  97,
    102, 102, 105,  99,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  97, 116,  97,  84, 114,  97, 102,
    102, 105,  99,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a448d2161985fd79 = b_a448d2161985fd79.words;
#if !CAPNP_LITE
static const uint16_t m_a448d2161985fd79[] = {5, 7, 1, 4, 11, 2, 3, 0, 9, 8, 6, 10};
static const uint16_t i_a448d2161985fd79[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11};
const ::capnp::_::RawSchema s_a448d2161985fd79 = {
  0xa448d2161985fd79, b_a448d2161985fd79.words, 208, nullptr, m_a448d2161985fd79,
  0, 12, i_a448d2161985fd79, nullptr, nullptr, { &s_a448d2161985fd79, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<252> b_d87bf8710a303f13 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     19,  63,  48,  10, 113, 248, 123, 216,
     14,   0,   0,   0,   1,   0,   7,   0,
     52, 241, 204,  62, 191,  68,  26, 136,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 210,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  79,   3,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  67, 101,
    108, 108,  68,  97, 116,  97,  69, 120,
    116,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     60,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    149,   1,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    148,   1,   0,   0,   3,   0,   1,   0,
    176,   1,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    173,   1,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    172,   1,   0,   0,   3,   0,   1,   0,
    184,   1,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    181,   1,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    176,   1,   0,   0,   3,   0,   1,   0,
    188,   1,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    185,   1,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    180,   1,   0,   0,   3,   0,   1,   0,
    192,   1,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   4,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    189,   1,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    184,   1,   0,   0,   3,   0,   1,   0,
    196,   1,   0,   0,   2,   0,   1,   0,
      5,   0,   0,   0,   5,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    193,   1,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    188,   1,   0,   0,   3,   0,   1,   0,
    200,   1,   0,   0,   2,   0,   1,   0,
      6,   0,   0,   0,   6,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    197,   1,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    196,   1,   0,   0,   3,   0,   1,   0,
    208,   1,   0,   0,   2,   0,   1,   0,
      7,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   1,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    205,   1,   0,   0, 162,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    208,   1,   0,   0,   3,   0,   1,   0,
    220,   1,   0,   0,   2,   0,   1,   0,
      8,   0,   0,   0,   8,   0,   0,   0,
      0,   0,   1,   0,   8,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    217,   1,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    212,   1,   0,   0,   3,   0,   1,   0,
    224,   1,   0,   0,   2,   0,   1,   0,
      9,   0,   0,   0,   9,   0,   0,   0,
      0,   0,   1,   0,   9,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    221,   1,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    216,   1,   0,   0,   3,   0,   1,   0,
    228,   1,   0,   0,   2,   0,   1,   0,
     10,   0,   0,   0,  10,   0,   0,   0,
      0,   0,   1,   0,  10,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    225,   1,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    220,   1,   0,   0,   3,   0,   1,   0,
    232,   1,   0,   0,   2,   0,   1,   0,
     11,   0,   0,   0,  11,   0,   0,   0,
      0,   0,   1,   0,  11,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    229,   1,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    224,   1,   0,   0,   3,   0,   1,   0,
    236,   1,   0,   0,   2,   0,   1,   0,
     12,   0,   0,   0,  24,   0,   0,   0,
      0,   0,   1,   0,  12,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    233,   1,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    228,   1,   0,   0,   3,   0,   1,   0,
    240,   1,   0,   0,   2,   0,   1,   0,
     13,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   1,   0,  13,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    237,   1,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    232,   1,   0,   0,   3,   0,   1,   0,
    244,   1,   0,   0,   2,   0,   1,   0,
     14,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,  14,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    241,   1,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    236,   1,   0,   0,   3,   0,   1,   0,
    248,   1,   0,   0,   2,   0,   1,   0,
    109, 121,  82, 101, 108,  97, 116, 105,
    111, 110, 115,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 116,  97, 116, 105, 111, 110,  67,
    111, 100, 101,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,  97, 116,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 110, 103,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 105,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 101, 108, 108,  73, 100,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 116,  97, 116, 105, 111, 110,  72,
    111, 117, 115, 101,  73, 100,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 110, 116, 101, 110, 110,  97,  72,
    101, 105, 103, 104, 116,  71, 114, 111,
    117, 110, 100,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 105, 108, 116,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98,  99,  99, 104,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,  97,  99,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 115,  99,  66, 115, 105,  99,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 122, 105, 109, 117, 116, 104,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 121, 112, 101,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 100, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d87bf8710a303f13 = b_d87bf8710a303f13.words;
#if !CAPNP_LITE
static const uint16_t m_d87bf8710a303f13[] = {7, 12, 9, 5, 4, 14, 10, 2, 3, 0, 11, 1, 6, 8, 13};
static const uint16_t i_d87bf8710a303f13[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14};
const ::capnp::_::RawSchema s_d87bf8710a303f13 = {
  0xd87bf8710a303f13, b_d87bf8710a303f13.words, 252, nullptr, m_d87bf8710a303f13,
  0, 15, i_d87bf8710a303f13, nullptr, nullptr, { &s_d87bf8710a303f13, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<84> b_bc5518654d5cc3c6 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    198, 195,  92,  77, 101,  24,  85, 188,
     14,   0,   0,   0,   1,   0,   1,   0,
     52, 241, 204,  62, 191,  68,  26, 136,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 226,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  65, 100,
    100,  83, 105, 103, 110,  97, 108,  77,
    115, 103,  50,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     96,   0,   0,   0,   3,   0,   1,   0,
    108,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,   0,   0,   0,   3,   0,   1,   0,
    116,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    113,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,   0,   0,   0,   3,   0,   1,   0,
    120,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,   0,   0,   0,   3,   0,   1,   0,
    140,   0,   0,   0,   2,   0,   1,   0,
     99,  97, 109, 112,  97, 105, 103, 110,
     73,  68,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 111, 118, 105, 110,  99, 101,
     67, 111, 100, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 116,  97, 114, 116,  73, 100,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 111, 119, 115,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     50, 188,  57,  59,  74, 186,  39, 179,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_bc5518654d5cc3c6 = b_bc5518654d5cc3c6.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_bc5518654d5cc3c6[] = {
  &s_b327ba4a3b39bc32,
};
static const uint16_t m_bc5518654d5cc3c6[] = {0, 1, 3, 2};
static const uint16_t i_bc5518654d5cc3c6[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_bc5518654d5cc3c6 = {
  0xbc5518654d5cc3c6, b_bc5518654d5cc3c6.words, 84, d_bc5518654d5cc3c6, m_bc5518654d5cc3c6,
  1, 4, i_bc5518654d5cc3c6, nullptr, nullptr, { &s_bc5518654d5cc3c6, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<57> b_a348d3e03e3f4093 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    147,  64,  63,  62, 224, 211,  72, 163,
     14,   0,   0,   0,   1,   0,   0,   0,
     52, 241, 204,  62, 191,  68,  26, 136,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 250,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  68, 101,
    108, 101, 116, 101,  83, 105, 103, 110,
     97, 108,  77, 115, 103,  50,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     64,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     61,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     60,   0,   0,   0,   3,   0,   1,   0,
     88,   0,   0,   0,   2,   0,   1,   0,
    112, 111, 108, 121,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     41,  63, 237, 238, 254,  77,  79, 203,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118,  68, 101, 108, 101, 116, 101, 100,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a348d3e03e3f4093 = b_a348d3e03e3f4093.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_a348d3e03e3f4093[] = {
  &s_cb4f4dfeeeed3f29,
};
static const uint16_t m_a348d3e03e3f4093[] = {0, 1};
static const uint16_t i_a348d3e03e3f4093[] = {0, 1};
const ::capnp::_::RawSchema s_a348d3e03e3f4093 = {
  0xa348d3e03e3f4093, b_a348d3e03e3f4093.words, 57, d_a348d3e03e3f4093, m_a348d3e03e3f4093,
  1, 2, i_a348d3e03e3f4093, nullptr, nullptr, { &s_a348d3e03e3f4093, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<78> b_82ffc0f86a8138d4 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    212,  56, 129, 106, 248, 192, 255, 130,
     14,   0,   0,   0,   1,   0,   2,   0,
     52, 241, 204,  62, 191,  68,  26, 136,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 242,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  83, 105,
    103, 110,  97, 108,  67, 101, 108, 108,
     69, 120, 116, 114,  97,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    104,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     96,   0,   0,   0,   3,   0,   1,   0,
    108,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,   0,   0,   0,   3,   0,   1,   0,
    112,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,   0,   0,   0,   3,   0,   1,   0,
    116,   0,   0,   0,   2,   0,   1,   0,
     98, 115, 105,  99,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,  97,  99,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 114, 102,  99, 110,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 105, 114, 110,  99,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_82ffc0f86a8138d4 = b_82ffc0f86a8138d4.words;
#if !CAPNP_LITE
static const uint16_t m_82ffc0f86a8138d4[] = {2, 0, 3, 1};
static const uint16_t i_82ffc0f86a8138d4[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_82ffc0f86a8138d4 = {
  0x82ffc0f86a8138d4, b_82ffc0f86a8138d4.words, 78, nullptr, m_82ffc0f86a8138d4,
  0, 4, i_82ffc0f86a8138d4, nullptr, nullptr, { &s_82ffc0f86a8138d4, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<157> b_8269bdf6b9bc4bd9 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    217,  75, 188, 185, 246, 189, 105, 130,
     14,   0,   0,   0,   1,   0,   5,   0,
     52, 241, 204,  62, 191,  68,  26, 136,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 202,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 255,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  83, 105,
    103, 110,  97, 108,  67, 101, 108, 108,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     36,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    237,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    232,   0,   0,   0,   3,   0,   1,   0,
    244,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    241,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    236,   0,   0,   0,   3,   0,   1,   0,
    248,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    245,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    240,   0,   0,   0,   3,   0,   1,   0,
    252,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    249,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    244,   0,   0,   0,   3,   0,   1,   0,
      0,   1,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   6,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    253,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    248,   0,   0,   0,   3,   0,   1,   0,
      4,   1,   0,   0,   2,   0,   1,   0,
      5,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   1,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    252,   0,   0,   0,   3,   0,   1,   0,
      8,   1,   0,   0,   2,   0,   1,   0,
      6,   0,   0,   0,   8,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   1,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   1,   0,   0,   3,   0,   1,   0,
     12,   1,   0,   0,   2,   0,   1,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   1,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   1,   0,   0,   3,   0,   1,   0,
     32,   1,   0,   0,   2,   0,   1,   0,
      8,   0,   0,   0,  36,   0,   0,   0,
      0,   0,   1,   0,   8,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   1,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     24,   1,   0,   0,   3,   0,   1,   0,
     36,   1,   0,   0,   2,   0,   1,   0,
    105, 100,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,  97, 116,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 110, 103,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  99,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,  97,  99,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 105, 114, 110,  99,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 102,  99, 110,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110,  98,  68,  97, 116,  97,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    212,  56, 129, 106, 248, 192, 255, 130,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 121, 112, 101,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_8269bdf6b9bc4bd9 = b_8269bdf6b9bc4bd9.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_8269bdf6b9bc4bd9[] = {
  &s_82ffc0f86a8138d4,
};
static const uint16_t m_8269bdf6b9bc4bd9[] = {5, 0, 4, 1, 2, 7, 6, 3, 8};
static const uint16_t i_8269bdf6b9bc4bd9[] = {0, 1, 2, 3, 4, 5, 6, 7, 8};
const ::capnp::_::RawSchema s_8269bdf6b9bc4bd9 = {
  0x8269bdf6b9bc4bd9, b_8269bdf6b9bc4bd9.words, 157, d_8269bdf6b9bc4bd9, m_8269bdf6b9bc4bd9,
  1, 9, i_8269bdf6b9bc4bd9, nullptr, nullptr, { &s_8269bdf6b9bc4bd9, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<68> b_9ce1f70941a60179 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    121,   1, 166,  65,   9, 247, 225, 156,
     14,   0,   0,   0,   1,   0,   1,   0,
     52, 241, 204,  62, 191,  68,  26, 136,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 210,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  83, 105,
    103, 110,  97, 108,  67, 101, 108, 108,
    115,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     81,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     76,   0,   0,   0,   3,   0,   1,   0,
    104,   0,   0,   0,   2,   0,   1,   0,
    110, 117, 109,  80, 111, 105, 110, 116,
    115,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 120,  73, 100,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  97, 116,  97,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    217,  75, 188, 185, 246, 189, 105, 130,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9ce1f70941a60179 = b_9ce1f70941a60179.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_9ce1f70941a60179[] = {
  &s_8269bdf6b9bc4bd9,
};
static const uint16_t m_9ce1f70941a60179[] = {2, 1, 0};
static const uint16_t i_9ce1f70941a60179[] = {0, 1, 2};
const ::capnp::_::RawSchema s_9ce1f70941a60179 = {
  0x9ce1f70941a60179, b_9ce1f70941a60179.words, 68, d_9ce1f70941a60179, m_9ce1f70941a60179,
  1, 3, i_9ce1f70941a60179, nullptr, nullptr, { &s_9ce1f70941a60179, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<112> b_c993b262bb115a8b = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    139,  90,  17, 187,  98, 178, 147, 201,
     14,   0,   0,   0,   1,   0,   5,   0,
     52, 241, 204,  62, 191,  68,  26, 136,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 226,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  87,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  77, 101,
    116,  97,  68,  97, 116,  97,  69, 110,
    116, 114, 121,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     24,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    153,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    148,   0,   0,   0,   3,   0,   1,   0,
    160,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    157,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    156,   0,   0,   0,   3,   0,   1,   0,
    168,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    165,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    160,   0,   0,   0,   3,   0,   1,   0,
    172,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    169,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    168,   0,   0,   0,   3,   0,   1,   0,
    180,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   8,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    177,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    176,   0,   0,   0,   3,   0,   1,   0,
    188,   0,   0,   0,   2,   0,   1,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    185,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    184,   0,   0,   0,   3,   0,   1,   0,
    196,   0,   0,   0,   2,   0,   1,   0,
    116, 111, 112,  76,  97, 116,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98, 111, 116, 116, 111, 109,  76,  97,
    116,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 111, 112,  76, 110, 103,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98, 111, 116, 116, 111, 109,  76, 110,
    103,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110, 117, 109,  80, 111, 105, 110, 116,
    115,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 105, 108, 101, 110,  97, 109, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c993b262bb115a8b = b_c993b262bb115a8b.words;
#if !CAPNP_LITE
static const uint16_t m_c993b262bb115a8b[] = {1, 3, 5, 4, 0, 2};
static const uint16_t i_c993b262bb115a8b[] = {0, 1, 2, 3, 4, 5};
const ::capnp::_::RawSchema s_c993b262bb115a8b = {
  0xc993b262bb115a8b, b_c993b262bb115a8b.words, 112, nullptr, m_c993b262bb115a8b,
  0, 6, i_c993b262bb115a8b, nullptr, nullptr, { &s_c993b262bb115a8b, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<51> b_8859977fa04788fc = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    252, 136,  71, 160, 127, 151,  89, 136,
     14,   0,   0,   0,   1,   0,   0,   0,
     52, 241, 204,  62, 191,  68,  26, 136,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 186,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  77, 101,
    116,  97,  68,  97, 116,  97,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     68,   0,   0,   0,   2,   0,   1,   0,
     98, 111, 120,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    204, 141, 171, 181,  95, 184,  73, 162,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  97, 116,  97,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    139,  90,  17, 187,  98, 178, 147, 201,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_8859977fa04788fc = b_8859977fa04788fc.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_8859977fa04788fc[] = {
  &s_a249b85fb5ab8dcc,
  &s_c993b262bb115a8b,
};
static const uint16_t m_8859977fa04788fc[] = {0, 1};
static const uint16_t i_8859977fa04788fc[] = {0, 1};
const ::capnp::_::RawSchema s_8859977fa04788fc = {
  0x8859977fa04788fc, b_8859977fa04788fc.words, 51, d_8859977fa04788fc, m_8859977fa04788fc,
  2, 2, i_8859977fa04788fc, nullptr, nullptr, { &s_8859977fa04788fc, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<414> b_baf55ed4f5ecb7a1 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    161, 183, 236, 245, 212,  94, 245, 186,
     14,   0,   0,   0,   3,   0,   0,   0,
     52, 241, 204,  62, 191,  68,  26, 136,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 194,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,   7,   9,   0,   0,
     73,   6,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    112,  83, 116, 114, 117,  99, 116,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
    144,   0,   0,   0,   3,   0,   5,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12, 206,  48, 127,  83,   8,  82, 201,
    128, 145, 114,  11,  14, 242, 176, 195,
    113,   4,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105,   4,   0,   0,   7,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     77, 166, 138, 157, 100, 109, 133, 197,
    193,  26,  83,  82, 242,  89,  35, 216,
     93,   4,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     85,   4,   0,   0,   7,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
     99, 125, 168, 236,  49, 211,  55, 217,
    211, 133,  21,  22, 210, 234,  55, 128,
     73,   4,   0,   0, 178,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   4,   0,   0,   7,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
    152, 170, 117,  31, 133, 131,  74, 249,
    177,  24, 207,  81,  56, 204,  25, 137,
     57,   4,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   4,   0,   0,   7,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
     51, 235, 176,  91, 223, 141,   8, 194,
     12,  70,  76, 101, 231,  25, 174, 148,
     33,   4,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   4,   0,   0,   7,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
    236, 188, 123, 184, 208, 109,  63, 135,
    173, 152, 116,  57, 169, 134, 109, 164,
      9,   4,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   4,   0,   0,   7,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
     98, 241, 251,   5,  46, 102, 168, 169,
    176, 208,  34, 237, 127,  64, 134, 140,
    245,   3,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    237,   3,   0,   0,   7,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
     23, 127,  84,  33, 208, 214,  50, 222,
    214, 122,  71, 242,  98, 107,   6, 212,
    225,   3,   0,   0, 130,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    217,   3,   0,   0,   7,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
    156, 137,  76,  68,  10, 164,  88, 241,
    163,  49, 226,  23, 169, 100, 142, 155,
    205,   3,   0,   0, 178,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    201,   3,   0,   0,   7,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
    227, 234,  77, 222, 205, 161, 220, 159,
    139, 201,  55, 225, 122, 216, 141, 218,
    189,   3,   0,   0, 154,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    185,   3,   0,   0,   7,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
     95,  14, 243, 233, 164, 212,  83, 225,
    124,  79,  12, 110,  27, 159, 189, 160,
    173,   3,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    161,   3,   0,   0,   7,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
    174, 202, 101,  95, 195, 201, 110, 206,
     84, 239,  83, 221,  57,  16,  34, 148,
    149,   3,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    141,   3,   0,   0,   7,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
    238, 110,  81, 238, 144,  79, 108, 149,
    238, 142, 112,  70, 242,  94,  27, 215,
    129,   3,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    121,   3,   0,   0,   7,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
     14, 130, 219, 120,  11, 177, 143, 203,
    145, 223,  85, 212,   3, 186,  89, 186,
    109,   3,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,   3,   0,   0,   7,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
    230, 205,  39, 234,  87, 156,  83, 193,
     37, 118,  95, 202,  96, 201, 114, 176,
     89,   3,   0,   0, 154,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     85,   3,   0,   0,   7,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    163,  62,  47,  91, 136, 199, 206, 197,
     11, 144,  62, 139, 175, 181,  12, 238,
     73,   3,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     65,   3,   0,   0,   7,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    192, 173,  76,  51,  92, 223, 254, 226,
    211, 255, 175, 196, 130,  51, 243, 207,
     53,   3,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   3,   0,   0,   7,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
     59,  61, 239,  60,  99, 118,  67, 136,
    250,  38,  22, 220, 199,  99,  25, 206,
     29,   3,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   3,   0,   0,   7,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
    151,  83,  98,  67,  81, 104, 214, 228,
    242,  99,  16, 240,  94, 203, 160, 205,
      5,   3,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    253,   2,   0,   0,   7,   0,   0,   0,
     19,   0,   0,   0,   0,   0,   0,   0,
    184, 136, 135,  87,  54, 136, 183, 194,
     45, 103, 236, 134, 173, 201, 154, 210,
    241,   2,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    233,   2,   0,   0,   7,   0,   0,   0,
     20,   0,   0,   0,   0,   0,   0,   0,
     87,  29, 247, 135, 150, 203, 114, 219,
    171,  48, 223, 117, 112, 192, 125, 137,
    221,   2,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    213,   2,   0,   0,   7,   0,   0,   0,
     21,   0,   0,   0,   0,   0,   0,   0,
    178, 186, 155, 118, 108,  69,  34, 160,
    100,  45,  61,  47, 171, 189, 158, 186,
    201,   2,   0,   0, 186,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    197,   2,   0,   0,   7,   0,   0,   0,
     22,   0,   0,   0,   0,   0,   0,   0,
    144, 136, 141, 192, 133, 131, 204, 132,
    237, 126,  46, 134, 159,  15,  15, 219,
    185,   2,   0,   0, 162,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    181,   2,   0,   0,   7,   0,   0,   0,
     23,   0,   0,   0,   0,   0,   0,   0,
    200,  22,  82, 230,  52, 244, 147, 172,
    154,   2, 181,  80, 219, 126, 236, 246,
    169,   2,   0,   0, 138,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    165,   2,   0,   0,   7,   0,   0,   0,
     24,   0,   0,   0,   0,   0,   0,   0,
    142, 142,  37, 147, 116, 179,   7, 189,
     58, 237,  53,  64,  69, 120, 120, 218,
    153,   2,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    145,   2,   0,   0,   7,   0,   0,   0,
     25,   0,   0,   0,   0,   0,   0,   0,
    118,  28, 192,  68,  87,  83, 247, 159,
    255,  81,  33, 129, 136,  60,  29, 199,
    133,   2,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   2,   0,   0,   7,   0,   0,   0,
     26,   0,   0,   0,   0,   0,   0,   0,
    225, 193, 131,  89, 158,  80, 228, 188,
     91, 142,  93, 235, 221, 174,  49, 213,
    113,   2,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105,   2,   0,   0,   7,   0,   0,   0,
     27,   0,   0,   0,   0,   0,   0,   0,
    139, 127, 201, 241, 216, 138, 141, 155,
    208, 167, 188,  15, 220, 105, 234, 227,
     93,   2,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     85,   2,   0,   0,   7,   0,   0,   0,
     28,   0,   0,   0,   0,   0,   0,   0,
    234,  33,  57, 230,  96, 129, 146, 201,
      3,  58,  82,  15,  47,  82,  35, 163,
     73,   2,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     65,   2,   0,   0,   7,   0,   0,   0,
     29,   0,   0,   0,   0,   0,   0,   0,
    116, 243, 118, 145, 234, 255, 235, 192,
     72, 244, 138, 224, 216, 167, 150, 147,
     53,   2,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   2,   0,   0,   7,   0,   0,   0,
     30,   0,   0,   0,   0,   0,   0,   0,
    107,  92, 184, 159, 223,  97,  59, 237,
     91, 146, 185,  21, 113, 151,  78, 207,
     33,   2,   0,   0, 138,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   2,   0,   0,   7,   0,   0,   0,
     31,   0,   0,   0,   0,   0,   0,   0,
    155, 137, 148, 142,  25, 179, 255, 242,
    146,  91,  73,  66, 197, 176, 110, 162,
     17,   2,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   2,   0,   0,   7,   0,   0,   0,
     32,   0,   0,   0,   0,   0,   0,   0,
    185,  95,  54,  89,  84,  94, 170, 196,
    105,  29, 117,  15,  46,  18, 243, 158,
    249,   1,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    237,   1,   0,   0,   7,   0,   0,   0,
     33,   0,   0,   0,   0,   0,   0,   0,
    231, 141, 130, 163,  29, 194,  92, 192,
     84,  10, 113,  52,   3, 155,  73, 248,
    225,   1,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    217,   1,   0,   0,   7,   0,   0,   0,
     34,   0,   0,   0,   0,   0,   0,   0,
     16, 236,  97, 216, 205, 184, 250, 230,
    247,  76, 162,  26, 164,  87,  45, 208,
    205,   1,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    197,   1,   0,   0,   7,   0,   0,   0,
     35,   0,   0,   0,   0,   0,   0,   0,
     62, 180, 147, 223,  48,  93, 110, 169,
     20,  46, 170, 244, 237, 225,  54, 133,
    185,   1,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    173,   1,   0,   0,   7,   0,   0,   0,
    105, 110, 115, 101, 114, 116,  84, 111,
     77,  97, 112,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    103, 101, 116,  80, 111, 105, 110, 116,
    115,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    105, 110, 115, 101, 114, 116,  80, 111,
    105, 110, 116, 115,  73, 110,  80, 111,
    108, 121, 103, 111, 110,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
     97, 110,  97, 108, 121, 122, 101,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    114, 101, 112, 111, 114, 116,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    114, 101, 112, 111, 114, 116,  68, 111,
    110, 101,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    113, 117, 101, 114, 121,  80, 111, 108,
    121, 103, 111, 110,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    109, 105, 115, 115, 105, 110, 103,  78,
    101, 105,  98, 111, 117, 114, 115,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    102, 105, 110, 100,  77, 105, 115, 115,
    105, 110, 103,  78, 101, 105, 103, 104,
     98, 111, 117, 114, 115,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    102, 105, 110, 100,  83, 119,  97, 112,
    112, 101, 100,  70, 101, 101, 100, 101,
    114, 115,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    110, 111, 116, 105, 102, 121,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
     99,  97,  99, 104, 101,  77,  97, 112,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    103, 101, 116,  80, 111, 105, 110, 116,
    115,  50,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    113, 117, 101, 114, 121,  80, 111, 108,
    121, 103, 111, 110,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    103, 101, 116,  67, 108, 117, 115, 116,
    101, 114, 101, 100,  80, 111, 105, 110,
    116, 115,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
     97, 110,  97, 108, 121, 122, 101,  50,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    114, 101, 112, 111, 114, 116,  50,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    110, 111, 116, 105, 102, 121,  50,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
     99,  97,  99, 104, 101,  77,  97, 112,
     50,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    114, 101, 112, 111, 114, 116,  80, 111,
    108, 121,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    114, 101, 112, 111, 114, 116,  80, 111,
    108, 121,  50,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    102, 105, 110, 100,  77, 105, 115, 115,
    105, 110, 103,  78, 101, 105, 103, 104,
     98, 111, 117, 114, 115,  50,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    102, 105, 110, 100,  83, 119,  97, 112,
    112, 101, 100,  70, 101, 101, 100, 101,
    114, 115,  50,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    114, 101, 109, 111, 118, 101,  70, 114,
    111, 109,  67,  97,  99, 104, 101,  50,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    114, 101, 108, 111,  97, 100,  67, 101,
    108, 108, 115,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    113, 117, 101, 114, 121,  67, 101, 108,
    108, 115,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    105, 110, 115, 101, 114, 116,  83, 105,
    103, 110,  97, 108,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    114, 101, 109, 111, 118, 101,  83, 105,
    103, 110,  97, 108,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    111, 110,  67, 101, 108, 108,  67, 104,
     97, 110, 103, 101,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    117, 112, 100,  97, 116, 101,  67, 101,
    108, 108,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    102, 105, 110, 105, 115, 104,  85, 112,
    100,  97, 116, 101,  67, 101, 108, 108,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    112, 105, 110, 103,  82,  80,  67,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    116, 111,  67,  83,  86,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    101, 120, 112, 111, 114, 116,  67, 101,
    108, 108,  67,  83,  86,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    103, 101, 110, 101, 114,  97, 116, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    103, 101, 116,  66, 111, 120,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_baf55ed4f5ecb7a1 = b_baf55ed4f5ecb7a1.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_baf55ed4f5ecb7a1[] = {
  &s_8037ead2161585d3,
  &s_84cc8385c08d8890,
  &s_8536e1edf4aa2e14,
  &s_873f6dd0b87bbcec,
  &s_884376633cef3d3b,
  &s_8919cc3851cf18b1,
  &s_897dc07075df30ab,
  &s_8c86407fed22d0b0,
  &s_9396a7d8e08af448,
  &s_94221039dd53ef54,
  &s_94ae19e7654c460c,
  &s_956c4f90ee516eee,
  &s_9b8d8ad8f1c97f8b,
  &s_9b8e64a917e231a3,
  &s_9ef3122e0f751d69,
  &s_9fdca1cdde4deae3,
  &s_9ff7535744c01c76,
  &s_a022456c769bbab2,
  &s_a0bd9f1b6e0c4f7c,
  &s_a26eb0c542495b92,
  &s_a323522f0f523a03,
  &s_a46d86a9397498ad,
  &s_a96e5d30df93b43e,
  &s_a9a8662e05fbf162,
  &s_ac93f434e65216c8,
  &s_b072c960ca5f7625,
  &s_ba59ba03d455df91,
  &s_ba9ebdab2f3d2d64,
  &s_bce4509e5983c1e1,
  &s_bd07b37493258e8e,
  &s_c05cc21da3828de7,
  &s_c0ebffea9176f374,
  &s_c1539c57ea27cde6,
  &s_c2088ddf5bb0eb33,
  &s_c2b78836578788b8,
  &s_c3b0f20e0b729180,
  &s_c4aa5e5459365fb9,
  &s_c5856d649d8aa64d,
  &s_c5cec7885b2f3ea3,
  &s_c71d3c88812151ff,
  &s_c95208537f30ce0c,
  &s_c9928160e63921ea,
  &s_cb8fb10b78db820e,
  &s_cda0cb5ef01063f2,
  &s_ce1963c7dc1626fa,
  &s_ce6ec9c35f65caae,
  &s_cf4e977115b9925b,
  &s_cff33382c4afffd3,
  &s_d02d57a41aa24cf7,
  &s_d29ac9ad86ec672d,
  &s_d4066b62f2477ad6,
  &s_d531aeddeb5d8e5b,
  &s_d71b5ef246708eee,
  &s_d82359f252531ac1,
  &s_d937d331eca87d63,
  &s_da7878454035ed3a,
  &s_da8dd87ae137c98b,
  &s_db0f0f9f862e7eed,
  &s_db72cb9687f71d57,
  &s_de32d6d021547f17,
  &s_e153d4a4e9f30e5f,
  &s_e2fedf5c334cadc0,
  &s_e3ea69dc0fbca7d0,
  &s_e4d6685143625397,
  &s_e6fab8cdd861ec10,
  &s_ed3b61df9fb85c6b,
  &s_ee0cb5af8b3e900b,
  &s_f158a40a444c899c,
  &s_f2ffb3198e94899b,
  &s_f6ec7edb50b5029a,
  &s_f8499b0334710a54,
  &s_f94a83851f75aa98,
};
static const uint16_t m_baf55ed4f5ecb7a1[] = {3, 15, 11, 18, 33, 8, 21, 9, 22, 30, 34, 35, 14, 1, 12, 2, 26, 0, 7, 10, 17, 28, 31, 25, 6, 13, 24, 23, 27, 4, 16, 5, 19, 20, 32, 29};
const ::capnp::_::RawSchema s_baf55ed4f5ecb7a1 = {
  0xbaf55ed4f5ecb7a1, b_baf55ed4f5ecb7a1.words, 414, d_baf55ed4f5ecb7a1, m_baf55ed4f5ecb7a1,
  72, 36, nullptr, nullptr, nullptr, { &s_baf55ed4f5ecb7a1, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<68> b_c95208537f30ce0c = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     12, 206,  48, 127,  83,   8,  82, 201,
     24,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  90,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    112,  83, 116, 114, 117,  99, 116,  46,
    105, 110, 115, 101, 114, 116,  84, 111,
     77,  97, 112,  36,  80,  97, 114,  97,
    109, 115,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
    100,   0,   0,   0,   2,   0,   1,   0,
    109,  97, 112,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      9, 125, 167, 253, 143, 210, 191, 153,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101,  99, 116,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      7,  53,  66,  54, 134, 149,  67, 133,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  97, 116,  97,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    215, 160, 230,  56,  30,  74,  55, 240,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c95208537f30ce0c = b_c95208537f30ce0c.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_c95208537f30ce0c[] = {
  &s_8543958636423507,
  &s_99bfd28ffda77d09,
  &s_f0374a1e38e6a0d7,
};
static const uint16_t m_c95208537f30ce0c[] = {2, 0, 1};
static const uint16_t i_c95208537f30ce0c[] = {0, 1, 2};
const ::capnp::_::RawSchema s_c95208537f30ce0c = {
  0xc95208537f30ce0c, b_c95208537f30ce0c.words, 68, d_c95208537f30ce0c, m_c95208537f30ce0c,
  3, 3, i_c95208537f30ce0c, nullptr, nullptr, { &s_c95208537f30ce0c, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_c3b0f20e0b729180 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    128, 145, 114,  11,  14, 242, 176, 195,
     24,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  98,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    112,  83, 116, 114, 117,  99, 116,  46,
    105, 110, 115, 101, 114, 116,  84, 111,
     77,  97, 112,  36,  82, 101, 115, 117,
    108, 116, 115,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 115, 117, 108, 116,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c3b0f20e0b729180 = b_c3b0f20e0b729180.words;
#if !CAPNP_LITE
static const uint16_t m_c3b0f20e0b729180[] = {0};
static const uint16_t i_c3b0f20e0b729180[] = {0};
const ::capnp::_::RawSchema s_c3b0f20e0b729180 = {
  0xc3b0f20e0b729180, b_c3b0f20e0b729180.words, 34, nullptr, m_c3b0f20e0b729180,
  0, 1, i_c3b0f20e0b729180, nullptr, nullptr, { &s_c3b0f20e0b729180, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<64> b_c5856d649d8aa64d = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     77, 166, 138, 157, 100, 109, 133, 197,
     24,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  74,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    112,  83, 116, 114, 117,  99, 116,  46,
    103, 101, 116,  80, 111, 105, 110, 116,
    115,  36,  80,  97, 114,  97, 109, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
    109,  97, 112,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      9, 125, 167, 253, 143, 210, 191, 153,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101,  99, 116,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      7,  53,  66,  54, 134, 149,  67, 133,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 120, 116, 114,  97,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     70, 237, 255,  93, 206, 239,  38, 206,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c5856d649d8aa64d = b_c5856d649d8aa64d.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_c5856d649d8aa64d[] = {
  &s_8543958636423507,
  &s_99bfd28ffda77d09,
  &s_ce26efce5dffed46,
};
static const uint16_t m_c5856d649d8aa64d[] = {2, 0, 1};
static const uint16_t i_c5856d649d8aa64d[] = {0, 1, 2};
const ::capnp::_::RawSchema s_c5856d649d8aa64d = {
  0xc5856d649d8aa64d, b_c5856d649d8aa64d.words, 64, d_c5856d649d8aa64d, m_c5856d649d8aa64d,
  3, 3, i_c5856d649d8aa64d, nullptr, nullptr, { &s_c5856d649d8aa64d, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_d82359f252531ac1 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    193,  26,  83,  82, 242,  89,  35, 216,
     24,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  82,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    112,  83, 116, 114, 117,  99, 116,  46,
    103, 101, 116,  80, 111, 105, 110, 116,
    115,  36,  82, 101, 115, 117, 108, 116,
    115,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 115, 117, 108, 116,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     58, 185,  58, 255,  42,  80, 101, 184,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d82359f252531ac1 = b_d82359f252531ac1.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_d82359f252531ac1[] = {
  &s_b865502aff3ab93a,
};
static const uint16_t m_d82359f252531ac1[] = {0};
static const uint16_t i_d82359f252531ac1[] = {0};
const ::capnp::_::RawSchema s_d82359f252531ac1 = {
  0xd82359f252531ac1, b_d82359f252531ac1.words, 34, d_d82359f252531ac1, m_d82359f252531ac1,
  1, 1, i_d82359f252531ac1, nullptr, nullptr, { &s_d82359f252531ac1, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<94> b_d937d331eca87d63 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     99, 125, 168, 236,  49, 211,  55, 217,
     24,   0,   0,   0,   1,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 170,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    112,  83, 116, 114, 117,  99, 116,  46,
    105, 110, 115, 101, 114, 116,  80, 111,
    105, 110, 116, 115,  73, 110,  80, 111,
    108, 121, 103, 111, 110,  36,  80,  97,
    114,  97, 109, 115,   0,   0,   0,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    104,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,   0,   0,   0,   3,   0,   1,   0,
    144,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    141,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    136,   0,   0,   0,   3,   0,   1,   0,
    164,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    161,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    160,   0,   0,   0,   3,   0,   1,   0,
    172,   0,   0,   0,   2,   0,   1,   0,
    109,  97, 112,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      9, 125, 167, 253, 143, 210, 191, 153,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 111, 108, 121, 103, 111, 110, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    121, 152, 176, 114, 220, 118, 170, 216,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  97, 116,  97,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    215, 160, 230,  56,  30,  74,  55, 240,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 116, 114, 105,  99, 116,  87, 105,
    116, 104, 105, 110,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d937d331eca87d63 = b_d937d331eca87d63.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_d937d331eca87d63[] = {
  &s_99bfd28ffda77d09,
  &s_d8aa76dc72b09879,
  &s_f0374a1e38e6a0d7,
};
static const uint16_t m_d937d331eca87d63[] = {2, 0, 1, 3};
static const uint16_t i_d937d331eca87d63[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_d937d331eca87d63 = {
  0xd937d331eca87d63, b_d937d331eca87d63.words, 94, d_d937d331eca87d63, m_d937d331eca87d63,
  3, 4, i_d937d331eca87d63, nullptr, nullptr, { &s_d937d331eca87d63, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<35> b_8037ead2161585d3 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    211, 133,  21,  22, 210, 234,  55, 128,
     24,   0,   0,   0,   1,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 178,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    112,  83, 116, 114, 117,  99, 116,  46,
    105, 110, 115, 101, 114, 116,  80, 111,
    105, 110, 116, 115,  73, 110,  80, 111,
    108, 121, 103, 111, 110,  36,  82, 101,
    115, 117, 108, 116, 115,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 115, 117, 108, 116,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_8037ead2161585d3 = b_8037ead2161585d3.words;
#if !CAPNP_LITE
static const uint16_t m_8037ead2161585d3[] = {0};
static const uint16_t i_8037ead2161585d3[] = {0};
const ::capnp::_::RawSchema s_8037ead2161585d3 = {
  0x8037ead2161585d3, b_8037ead2161585d3.words, 35, nullptr, m_8037ead2161585d3,
  0, 1, i_8037ead2161585d3, nullptr, nullptr, { &s_8037ead2161585d3, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<63> b_f94a83851f75aa98 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    152, 170, 117,  31, 133, 131,  74, 249,
     24,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  58,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    112,  83, 116, 114, 117,  99, 116,  46,
     97, 110,  97, 108, 121, 122, 101,  36,
     80,  97, 114,  97, 109, 115,   0,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
    109,  97, 112,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      9, 125, 167, 253, 143, 210, 191, 153,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101,  99, 116,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      7,  53,  66,  54, 134, 149,  67, 133,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    111, 112, 116, 105, 111, 110, 115,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      8, 177, 235,  99,  12,  76, 147, 135,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f94a83851f75aa98 = b_f94a83851f75aa98.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_f94a83851f75aa98[] = {
  &s_8543958636423507,
  &s_87934c0c63ebb108,
  &s_99bfd28ffda77d09,
};
static const uint16_t m_f94a83851f75aa98[] = {0, 2, 1};
static const uint16_t i_f94a83851f75aa98[] = {0, 1, 2};
const ::capnp::_::RawSchema s_f94a83851f75aa98 = {
  0xf94a83851f75aa98, b_f94a83851f75aa98.words, 63, d_f94a83851f75aa98, m_f94a83851f75aa98,
  3, 3, i_f94a83851f75aa98, nullptr, nullptr, { &s_f94a83851f75aa98, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<37> b_8919cc3851cf18b1 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    177,  24, 207,  81,  56, 204,  25, 137,
     24,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  66,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    112,  83, 116, 114, 117,  99, 116,  46,
     97, 110,  97, 108, 121, 122, 101,  36,
     82, 101, 115, 117, 108, 116, 115,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     36,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 115, 117, 108, 116,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    175, 101, 109, 132, 182, 154, 144, 223,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_8919cc3851cf18b1 = b_8919cc3851cf18b1.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_8919cc3851cf18b1[] = {
  &s_df909ab6846d65af,
};
static const uint16_t m_8919cc3851cf18b1[] = {0};
static const uint16_t i_8919cc3851cf18b1[] = {0};
const ::capnp::_::RawSchema s_8919cc3851cf18b1 = {
  0x8919cc3851cf18b1, b_8919cc3851cf18b1.words, 37, d_8919cc3851cf18b1, m_8919cc3851cf18b1,
  1, 1, i_8919cc3851cf18b1, nullptr, nullptr, { &s_8919cc3851cf18b1, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<48> b_c2088ddf5bb0eb33 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     51, 235, 176,  91, 223, 141,   8, 194,
     24,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  50,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    112,  83, 116, 114, 117,  99, 116,  46,
    114, 101, 112, 111, 114, 116,  36,  80,
     97, 114,  97, 109, 115,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    109,  97, 112,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      9, 125, 167, 253, 143, 210, 191, 153,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    111, 112, 116, 105, 111, 110, 115,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      8, 177, 235,  99,  12,  76, 147, 135,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c2088ddf5bb0eb33 = b_c2088ddf5bb0eb33.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_c2088ddf5bb0eb33[] = {
  &s_87934c0c63ebb108,
  &s_99bfd28ffda77d09,
};
static const uint16_t m_c2088ddf5bb0eb33[] = {0, 1};
static const uint16_t i_c2088ddf5bb0eb33[] = {0, 1};
const ::capnp::_::RawSchema s_c2088ddf5bb0eb33 = {
  0xc2088ddf5bb0eb33, b_c2088ddf5bb0eb33.words, 48, d_c2088ddf5bb0eb33, m_c2088ddf5bb0eb33,
  2, 2, i_c2088ddf5bb0eb33, nullptr, nullptr, { &s_c2088ddf5bb0eb33, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<33> b_94ae19e7654c460c = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     12,  70,  76, 101, 231,  25, 174, 148,
     24,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  58,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    112,  83, 116, 114, 117,  99, 116,  46,
    114, 101, 112, 111, 114, 116,  36,  82,
    101, 115, 117, 108, 116, 115,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 115, 117, 108, 116,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     21, 231,  40,  70, 192,  92,  49, 228,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_94ae19e7654c460c = b_94ae19e7654c460c.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_94ae19e7654c460c[] = {
  &s_e4315cc04628e715,
};
static const uint16_t m_94ae19e7654c460c[] = {0};
static const uint16_t i_94ae19e7654c460c[] = {0};
const ::capnp::_::RawSchema s_94ae19e7654c460c = {
  0x94ae19e7654c460c, b_94ae19e7654c460c.words, 33, d_94ae19e7654c460c, m_94ae19e7654c460c,
  1, 1, i_94ae19e7654c460c, nullptr, nullptr, { &s_94ae19e7654c460c, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_873f6dd0b87bbcec = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    236, 188, 123, 184, 208, 109,  63, 135,
     24,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  82,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    112,  83, 116, 114, 117,  99, 116,  46,
    114, 101, 112, 111, 114, 116,  68, 111,
    110, 101,  36,  80,  97, 114,  97, 109,
    115,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    109,  97, 112,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      9, 125, 167, 253, 143, 210, 191, 153,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_873f6dd0b87bbcec = b_873f6dd0b87bbcec.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_873f6dd0b87bbcec[] = {
  &s_99bfd28ffda77d09,
};
static const uint16_t m_873f6dd0b87bbcec[] = {0};
static const uint16_t i_873f6dd0b87bbcec[] = {0};
const ::capnp::_::RawSchema s_873f6dd0b87bbcec = {
  0x873f6dd0b87bbcec, b_873f6dd0b87bbcec.words, 34, d_873f6dd0b87bbcec, m_873f6dd0b87bbcec,
  1, 1, i_873f6dd0b87bbcec, nullptr, nullptr, { &s_873f6dd0b87bbcec, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_a46d86a9397498ad = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    173, 152, 116,  57, 169, 134, 109, 164,
     24,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  90,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    112,  83, 116, 114, 117,  99, 116,  46,
    114, 101, 112, 111, 114, 116,  68, 111,
    110, 101,  36,  82, 101, 115, 117, 108,
    116, 115,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 115, 117, 108, 116,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a46d86a9397498ad = b_a46d86a9397498ad.words;
#if !CAPNP_LITE
static const uint16_t m_a46d86a9397498ad[] = {0};
static const uint16_t i_a46d86a9397498ad[] = {0};
const ::capnp::_::RawSchema s_a46d86a9397498ad = {
  0xa46d86a9397498ad, b_a46d86a9397498ad.words, 34, nullptr, m_a46d86a9397498ad,
  0, 1, i_a46d86a9397498ad, nullptr, nullptr, { &s_a46d86a9397498ad, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<53> b_a9a8662e05fbf162 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     98, 241, 251,   5,  46, 102, 168, 169,
     24,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  98,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    112,  83, 116, 114, 117,  99, 116,  46,
    113, 117, 101, 114, 121,  80, 111, 108,
    121, 103, 111, 110,  36,  80,  97, 114,
     97, 109, 115,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     68,   0,   0,   0,   2,   0,   1,   0,
    109,  97, 112,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      9, 125, 167, 253, 143, 210, 191, 153,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 111, 108, 121,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    121, 152, 176, 114, 220, 118, 170, 216,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a9a8662e05fbf162 = b_a9a8662e05fbf162.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_a9a8662e05fbf162[] = {
  &s_99bfd28ffda77d09,
  &s_d8aa76dc72b09879,
};
static const uint16_t m_a9a8662e05fbf162[] = {0, 1};
static const uint16_t i_a9a8662e05fbf162[] = {0, 1};
const ::capnp::_::RawSchema s_a9a8662e05fbf162 = {
  0xa9a8662e05fbf162, b_a9a8662e05fbf162.words, 53, d_a9a8662e05fbf162, m_a9a8662e05fbf162,
  2, 2, i_a9a8662e05fbf162, nullptr, nullptr, { &s_a9a8662e05fbf162, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<38> b_8c86407fed22d0b0 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    176, 208,  34, 237, 127,  64, 134, 140,
     24,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 106,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    112,  83, 116, 114, 117,  99, 116,  46,
    113, 117, 101, 114, 121,  80, 111, 108,
    121, 103, 111, 110,  36,  82, 101, 115,
    117, 108, 116, 115,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     36,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 115, 117, 108, 116,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    215, 160, 230,  56,  30,  74,  55, 240,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_8c86407fed22d0b0 = b_8c86407fed22d0b0.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_8c86407fed22d0b0[] = {
  &s_f0374a1e38e6a0d7,
};
static const uint16_t m_8c86407fed22d0b0[] = {0};
static const uint16_t i_8c86407fed22d0b0[] = {0};
const ::capnp::_::RawSchema s_8c86407fed22d0b0 = {
  0x8c86407fed22d0b0, b_8c86407fed22d0b0.words, 38, d_8c86407fed22d0b0, m_8c86407fed22d0b0,
  1, 1, i_8c86407fed22d0b0, nullptr, nullptr, { &s_8c86407fed22d0b0, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<79> b_de32d6d021547f17 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     23, 127,  84,  33, 208, 214,  50, 222,
     24,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 122,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    112,  83, 116, 114, 117,  99, 116,  46,
    109, 105, 115, 115, 105, 110, 103,  78,
    101, 105,  98, 111, 117, 114, 115,  36,
     80,  97, 114,  97, 109, 115,   0,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    104,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     96,   0,   0,   0,   3,   0,   1,   0,
    108,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,   0,   0,   0,   3,   0,   1,   0,
    112,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,   0,   0,   0,   3,   0,   1,   0,
    116,   0,   0,   0,   2,   0,   1,   0,
    109,  97, 112,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      9, 125, 167, 253, 143, 210, 191, 153,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101,  99, 116,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      7,  53,  66,  54, 134, 149,  67, 133,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    111, 112, 116, 105, 111, 110, 115,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      8, 177, 235,  99,  12,  76, 147, 135,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97, 114,  97, 109,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     64,  96, 142, 234, 194,  88,  15, 219,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_de32d6d021547f17 = b_de32d6d021547f17.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_de32d6d021547f17[] = {
  &s_8543958636423507,
  &s_87934c0c63ebb108,
  &s_99bfd28ffda77d09,
  &s_db0f58c2ea8e6040,
};
static const uint16_t m_de32d6d021547f17[] = {0, 2, 3, 1};
static const uint16_t i_de32d6d021547f17[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_de32d6d021547f17 = {
  0xde32d6d021547f17, b_de32d6d021547f17.words, 79, d_de32d6d021547f17, m_de32d6d021547f17,
  4, 4, i_de32d6d021547f17, nullptr, nullptr, { &s_de32d6d021547f17, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<38> b_d4066b62f2477ad6 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    214, 122,  71, 242,  98, 107,   6, 212,
     24,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 130,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    112,  83, 116, 114, 117,  99, 116,  46,
    109, 105, 115, 115, 105, 110, 103,  78,
    101, 105,  98, 111, 117, 114, 115,  36,
     82, 101, 115, 117, 108, 116, 115,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     36,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 115, 117, 108, 116,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     89, 191, 104, 227, 174, 234, 163, 233,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d4066b62f2477ad6 = b_d4066b62f2477ad6.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_d4066b62f2477ad6[] = {
  &s_e9a3eaaee368bf59,
};
static const uint16_t m_d4066b62f2477ad6[] = {0};
static const uint16_t i_d4066b62f2477ad6[] = {0};
const ::capnp::_::RawSchema s_d4066b62f2477ad6 = {
  0xd4066b62f2477ad6, b_d4066b62f2477ad6.words, 38, d_d4066b62f2477ad6, m_d4066b62f2477ad6,
  1, 1, i_d4066b62f2477ad6, nullptr, nullptr, { &s_d4066b62f2477ad6, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<80> b_f158a40a444c899c = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    156, 137,  76,  68,  10, 164,  88, 241,
     24,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 170,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    112,  83, 116, 114, 117,  99, 116,  46,
    102, 105, 110, 100,  77, 105, 115, 115,
    105, 110, 103,  78, 101, 105, 103, 104,
     98, 111, 117, 114, 115,  36,  80,  97,
    114,  97, 109, 115,   0,   0,   0,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    104,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     96,   0,   0,   0,   3,   0,   1,   0,
    108,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,   0,   0,   0,   3,   0,   1,   0,
    112,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,   0,   0,   0,   3,   0,   1,   0,
    116,   0,   0,   0,   2,   0,   1,   0,
    109,  97, 112,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      9, 125, 167, 253, 143, 210, 191, 153,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    111, 112, 116, 105, 111, 110, 115,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      8, 177, 235,  99,  12,  76, 147, 135,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97, 114,  97, 109,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     64,  96, 142, 234, 194,  88,  15, 219,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 114, 101,  97,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    175, 101, 109, 132, 182, 154, 144, 223,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f158a40a444c899c = b_f158a40a444c899c.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_f158a40a444c899c[] = {
  &s_87934c0c63ebb108,
  &s_99bfd28ffda77d09,
  &s_db0f58c2ea8e6040,
  &s_df909ab6846d65af,
};
static const uint16_t m_f158a40a444c899c[] = {3, 0, 1, 2};
static const uint16_t i_f158a40a444c899c[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_f158a40a444c899c = {
  0xf158a40a444c899c, b_f158a40a444c899c.words, 80, d_f158a40a444c899c, m_f158a40a444c899c,
  4, 4, i_f158a40a444c899c, nullptr, nullptr, { &s_f158a40a444c899c, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<39> b_9b8e64a917e231a3 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    163,  49, 226,  23, 169, 100, 142, 155,
     24,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 178,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    112,  83, 116, 114, 117,  99, 116,  46,
    102, 105, 110, 100,  77, 105, 115, 115,
    105, 110, 103,  78, 101, 105, 103, 104,
     98, 111, 117, 114, 115,  36,  82, 101,
    115, 117, 108, 116, 115,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     36,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 115, 117, 108, 116,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     89, 191, 104, 227, 174, 234, 163, 233,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9b8e64a917e231a3 = b_9b8e64a917e231a3.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_9b8e64a917e231a3[] = {
  &s_e9a3eaaee368bf59,
};
static const uint16_t m_9b8e64a917e231a3[] = {0};
static const uint16_t i_9b8e64a917e231a3[] = {0};
const ::capnp::_::RawSchema s_9b8e64a917e231a3 = {
  0x9b8e64a917e231a3, b_9b8e64a917e231a3.words, 39, d_9b8e64a917e231a3, m_9b8e64a917e231a3,
  1, 1, i_9b8e64a917e231a3, nullptr, nullptr, { &s_9b8e64a917e231a3, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<80> b_9fdca1cdde4deae3 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    227, 234,  77, 222, 205, 161, 220, 159,
     24,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 146,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    112,  83, 116, 114, 117,  99, 116,  46,
    102, 105, 110, 100,  83, 119,  97, 112,
    112, 101, 100,  70, 101, 101, 100, 101,
    114, 115,  36,  80,  97, 114,  97, 109,
    115,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    104,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     96,   0,   0,   0,   3,   0,   1,   0,
    108,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,   0,   0,   0,   3,   0,   1,   0,
    112,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,   0,   0,   0,   3,   0,   1,   0,
    116,   0,   0,   0,   2,   0,   1,   0,
    109,  97, 112,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      9, 125, 167, 253, 143, 210, 191, 153,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    111, 112, 116, 105, 111, 110, 115,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      8, 177, 235,  99,  12,  76, 147, 135,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97, 114,  97, 109,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     11,  89,  74, 211, 193, 116, 245, 229,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 114, 101,  97,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    175, 101, 109, 132, 182, 154, 144, 223,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9fdca1cdde4deae3 = b_9fdca1cdde4deae3.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_9fdca1cdde4deae3[] = {
  &s_87934c0c63ebb108,
  &s_99bfd28ffda77d09,
  &s_df909ab6846d65af,
  &s_e5f574c1d34a590b,
};
static const uint16_t m_9fdca1cdde4deae3[] = {3, 0, 1, 2};
static const uint16_t i_9fdca1cdde4deae3[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_9fdca1cdde4deae3 = {
  0x9fdca1cdde4deae3, b_9fdca1cdde4deae3.words, 80, d_9fdca1cdde4deae3, m_9fdca1cdde4deae3,
  4, 4, i_9fdca1cdde4deae3, nullptr, nullptr, { &s_9fdca1cdde4deae3, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<39> b_da8dd87ae137c98b = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    139, 201,  55, 225, 122, 216, 141, 218,
     24,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 154,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    112,  83, 116, 114, 117,  99, 116,  46,
    102, 105, 110, 100,  83, 119,  97, 112,
    112, 101, 100,  70, 101, 101, 100, 101,
    114, 115,  36,  82, 101, 115, 117, 108,
    116, 115,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     36,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 115, 117, 108, 116,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     69,  61,  25,  94,  85,  86,  11, 141,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_da8dd87ae137c98b = b_da8dd87ae137c98b.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_da8dd87ae137c98b[] = {
  &s_8d0b56555e193d45,
};
static const uint16_t m_da8dd87ae137c98b[] = {0};
static const uint16_t i_da8dd87ae137c98b[] = {0};
const ::capnp::_::RawSchema s_da8dd87ae137c98b = {
  0xda8dd87ae137c98b, b_da8dd87ae137c98b.words, 39, d_da8dd87ae137c98b, m_da8dd87ae137c98b,
  1, 1, i_da8dd87ae137c98b, nullptr, nullptr, { &s_da8dd87ae137c98b, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<33> b_e153d4a4e9f30e5f = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     95,  14, 243, 233, 164, 212,  83, 225,
     24,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  50,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    112,  83, 116, 114, 117,  99, 116,  46,
    110, 111, 116, 105, 102, 121,  36,  80,
     97, 114,  97, 109, 115,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    116, 101, 120, 116,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e153d4a4e9f30e5f = b_e153d4a4e9f30e5f.words;
#if !CAPNP_LITE
static const uint16_t m_e153d4a4e9f30e5f[] = {0};
static const uint16_t i_e153d4a4e9f30e5f[] = {0};
const ::capnp::_::RawSchema s_e153d4a4e9f30e5f = {
  0xe153d4a4e9f30e5f, b_e153d4a4e9f30e5f.words, 33, nullptr, m_e153d4a4e9f30e5f,
  0, 1, i_e153d4a4e9f30e5f, nullptr, nullptr, { &s_e153d4a4e9f30e5f, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<33> b_a0bd9f1b6e0c4f7c = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    124,  79,  12, 110,  27, 159, 189, 160,
     24,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  58,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    112,  83, 116, 114, 117,  99, 116,  46,
    110, 111, 116, 105, 102, 121,  36,  82,
    101, 115, 117, 108, 116, 115,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 115, 117, 108, 116,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a0bd9f1b6e0c4f7c = b_a0bd9f1b6e0c4f7c.words;
#if !CAPNP_LITE
static const uint16_t m_a0bd9f1b6e0c4f7c[] = {0};
static const uint16_t i_a0bd9f1b6e0c4f7c[] = {0};
const ::capnp::_::RawSchema s_a0bd9f1b6e0c4f7c = {
  0xa0bd9f1b6e0c4f7c, b_a0bd9f1b6e0c4f7c.words, 33, nullptr, m_a0bd9f1b6e0c4f7c,
  0, 1, i_a0bd9f1b6e0c4f7c, nullptr, nullptr, { &s_a0bd9f1b6e0c4f7c, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<33> b_ce6ec9c35f65caae = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    174, 202, 101,  95, 195, 201, 110, 206,
     24,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  66,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    112,  83, 116, 114, 117,  99, 116,  46,
     99,  97,  99, 104, 101,  77,  97, 112,
     36,  80,  97, 114,  97, 109, 115,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    109,  97, 112,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      9, 125, 167, 253, 143, 210, 191, 153,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ce6ec9c35f65caae = b_ce6ec9c35f65caae.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_ce6ec9c35f65caae[] = {
  &s_99bfd28ffda77d09,
};
static const uint16_t m_ce6ec9c35f65caae[] = {0};
static const uint16_t i_ce6ec9c35f65caae[] = {0};
const ::capnp::_::RawSchema s_ce6ec9c35f65caae = {
  0xce6ec9c35f65caae, b_ce6ec9c35f65caae.words, 33, d_ce6ec9c35f65caae, m_ce6ec9c35f65caae,
  1, 1, i_ce6ec9c35f65caae, nullptr, nullptr, { &s_ce6ec9c35f65caae, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_94221039dd53ef54 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     84, 239,  83, 221,  57,  16,  34, 148,
     24,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  74,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    112,  83, 116, 114, 117,  99, 116,  46,
     99,  97,  99, 104, 101,  77,  97, 112,
     36,  82, 101, 115, 117, 108, 116, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 115, 117, 108, 116,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_94221039dd53ef54 = b_94221039dd53ef54.words;
#if !CAPNP_LITE
static const uint16_t m_94221039dd53ef54[] = {0};
static const uint16_t i_94221039dd53ef54[] = {0};
const ::capnp::_::RawSchema s_94221039dd53ef54 = {
  0x94221039dd53ef54, b_94221039dd53ef54.words, 34, nullptr, m_94221039dd53ef54,
  0, 1, i_94221039dd53ef54, nullptr, nullptr, { &s_94221039dd53ef54, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<64> b_956c4f90ee516eee = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    238, 110,  81, 238, 144,  79, 108, 149,
     24,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  82,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    112,  83, 116, 114, 117,  99, 116,  46,
    103, 101, 116,  80, 111, 105, 110, 116,
    115,  50,  36,  80,  97, 114,  97, 109,
    115,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
    109,  97, 112,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      9, 125, 167, 253, 143, 210, 191, 153,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101,  99, 116,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      7,  53,  66,  54, 134, 149,  67, 133,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 120, 116, 114,  97,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     70, 237, 255,  93, 206, 239,  38, 206,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_956c4f90ee516eee = b_956c4f90ee516eee.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_956c4f90ee516eee[] = {
  &s_8543958636423507,
  &s_99bfd28ffda77d09,
  &s_ce26efce5dffed46,
};
static const uint16_t m_956c4f90ee516eee[] = {2, 0, 1};
static const uint16_t i_956c4f90ee516eee[] = {0, 1, 2};
const ::capnp::_::RawSchema s_956c4f90ee516eee = {
  0x956c4f90ee516eee, b_956c4f90ee516eee.words, 64, d_956c4f90ee516eee, m_956c4f90ee516eee,
  3, 3, i_956c4f90ee516eee, nullptr, nullptr, { &s_956c4f90ee516eee, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<38> b_d71b5ef246708eee = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    238, 142, 112,  70, 242,  94,  27, 215,
     24,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  90,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    112,  83, 116, 114, 117,  99, 116,  46,
    103, 101, 116,  80, 111, 105, 110, 116,
    115,  50,  36,  82, 101, 115, 117, 108,
    116, 115,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     36,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 115, 117, 108, 116,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    215, 160, 230,  56,  30,  74,  55, 240,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d71b5ef246708eee = b_d71b5ef246708eee.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_d71b5ef246708eee[] = {
  &s_f0374a1e38e6a0d7,
};
static const uint16_t m_d71b5ef246708eee[] = {0};
static const uint16_t i_d71b5ef246708eee[] = {0};
const ::capnp::_::RawSchema s_d71b5ef246708eee = {
  0xd71b5ef246708eee, b_d71b5ef246708eee.words, 38, d_d71b5ef246708eee, m_d71b5ef246708eee,
  1, 1, i_d71b5ef246708eee, nullptr, nullptr, { &s_d71b5ef246708eee, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<53> b_cb8fb10b78db820e = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     14, 130, 219, 120,  11, 177, 143, 203,
     24,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 106,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    112,  83, 116, 114, 117,  99, 116,  46,
    113, 117, 101, 114, 121,  80, 111, 108,
    121, 103, 111, 110,  50,  36,  80,  97,
    114,  97, 109, 115,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     68,   0,   0,   0,   2,   0,   1,   0,
    109,  97, 112,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      9, 125, 167, 253, 143, 210, 191, 153,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 111, 108, 121,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    121, 152, 176, 114, 220, 118, 170, 216,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_cb8fb10b78db820e = b_cb8fb10b78db820e.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_cb8fb10b78db820e[] = {
  &s_99bfd28ffda77d09,
  &s_d8aa76dc72b09879,
};
static const uint16_t m_cb8fb10b78db820e[] = {0, 1};
static const uint16_t i_cb8fb10b78db820e[] = {0, 1};
const ::capnp::_::RawSchema s_cb8fb10b78db820e = {
  0xcb8fb10b78db820e, b_cb8fb10b78db820e.words, 53, d_cb8fb10b78db820e, m_cb8fb10b78db820e,
  2, 2, i_cb8fb10b78db820e, nullptr, nullptr, { &s_cb8fb10b78db820e, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<38> b_ba59ba03d455df91 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    145, 223,  85, 212,   3, 186,  89, 186,
     24,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 114,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    112,  83, 116, 114, 117,  99, 116,  46,
    113, 117, 101, 114, 121,  80, 111, 108,
    121, 103, 111, 110,  50,  36,  82, 101,
    115, 117, 108, 116, 115,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     36,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 115, 117, 108, 116,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    215, 160, 230,  56,  30,  74,  55, 240,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ba59ba03d455df91 = b_ba59ba03d455df91.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_ba59ba03d455df91[] = {
  &s_f0374a1e38e6a0d7,
};
static const uint16_t m_ba59ba03d455df91[] = {0};
static const uint16_t i_ba59ba03d455df91[] = {0};
const ::capnp::_::RawSchema s_ba59ba03d455df91 = {
  0xba59ba03d455df91, b_ba59ba03d455df91.words, 38, d_ba59ba03d455df91, m_ba59ba03d455df91,
  1, 1, i_ba59ba03d455df91, nullptr, nullptr, { &s_ba59ba03d455df91, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<65> b_c1539c57ea27cde6 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    230, 205,  39, 234,  87, 156,  83, 193,
     24,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 146,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    112,  83, 116, 114, 117,  99, 116,  46,
    103, 101, 116,  67, 108, 117, 115, 116,
    101, 114, 101, 100,  80, 111, 105, 110,
    116, 115,  36,  80,  97, 114,  97, 109,
    115,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
    109,  97, 112,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      9, 125, 167, 253, 143, 210, 191, 153,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98, 111, 120,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    204, 141, 171, 181,  95, 184,  73, 162,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 120, 116, 114,  97,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     70, 237, 255,  93, 206, 239,  38, 206,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c1539c57ea27cde6 = b_c1539c57ea27cde6.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_c1539c57ea27cde6[] = {
  &s_99bfd28ffda77d09,
  &s_a249b85fb5ab8dcc,
  &s_ce26efce5dffed46,
};
static const uint16_t m_c1539c57ea27cde6[] = {1, 2, 0};
static const uint16_t i_c1539c57ea27cde6[] = {0, 1, 2};
const ::capnp::_::RawSchema s_c1539c57ea27cde6 = {
  0xc1539c57ea27cde6, b_c1539c57ea27cde6.words, 65, d_c1539c57ea27cde6, m_c1539c57ea27cde6,
  3, 3, i_c1539c57ea27cde6, nullptr, nullptr, { &s_c1539c57ea27cde6, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<35> b_b072c960ca5f7625 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     37, 118,  95, 202,  96, 201, 114, 176,
     24,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 154,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    112,  83, 116, 114, 117,  99, 116,  46,
    103, 101, 116,  67, 108, 117, 115, 116,
    101, 114, 101, 100,  80, 111, 105, 110,
    116, 115,  36,  82, 101, 115, 117, 108,
    116, 115,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 115, 117, 108, 116,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     85, 184,  26, 159, 251, 165, 113, 232,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b072c960ca5f7625 = b_b072c960ca5f7625.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_b072c960ca5f7625[] = {
  &s_e871a5fb9f1ab855,
};
static const uint16_t m_b072c960ca5f7625[] = {0};
static const uint16_t i_b072c960ca5f7625[] = {0};
const ::capnp::_::RawSchema s_b072c960ca5f7625 = {
  0xb072c960ca5f7625, b_b072c960ca5f7625.words, 35, d_b072c960ca5f7625, m_b072c960ca5f7625,
  1, 1, i_b072c960ca5f7625, nullptr, nullptr, { &s_b072c960ca5f7625, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<48> b_c5cec7885b2f3ea3 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    163,  62,  47,  91, 136, 199, 206, 197,
     24,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  66,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    112,  83, 116, 114, 117,  99, 116,  46,
     97, 110,  97, 108, 121, 122, 101,  50,
     36,  80,  97, 114,  97, 109, 115,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    109,  97, 112,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      9, 125, 167, 253, 143, 210, 191, 153,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    111, 112, 116, 105, 111, 110, 115,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      8, 177, 235,  99,  12,  76, 147, 135,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c5cec7885b2f3ea3 = b_c5cec7885b2f3ea3.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_c5cec7885b2f3ea3[] = {
  &s_87934c0c63ebb108,
  &s_99bfd28ffda77d09,
};
static const uint16_t m_c5cec7885b2f3ea3[] = {0, 1};
static const uint16_t i_c5cec7885b2f3ea3[] = {0, 1};
const ::capnp::_::RawSchema s_c5cec7885b2f3ea3 = {
  0xc5cec7885b2f3ea3, b_c5cec7885b2f3ea3.words, 48, d_c5cec7885b2f3ea3, m_c5cec7885b2f3ea3,
  2, 2, i_c5cec7885b2f3ea3, nullptr, nullptr, { &s_c5cec7885b2f3ea3, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<38> b_ee0cb5af8b3e900b = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     11, 144,  62, 139, 175, 181,  12, 238,
     24,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  74,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    112,  83, 116, 114, 117,  99, 116,  46,
     97, 110,  97, 108, 121, 122, 101,  50,
     36,  82, 101, 115, 117, 108, 116, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     36,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 115, 117, 108, 116,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    175, 101, 109, 132, 182, 154, 144, 223,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ee0cb5af8b3e900b = b_ee0cb5af8b3e900b.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_ee0cb5af8b3e900b[] = {
  &s_df909ab6846d65af,
};
static const uint16_t m_ee0cb5af8b3e900b[] = {0};
static const uint16_t i_ee0cb5af8b3e900b[] = {0};
const ::capnp::_::RawSchema s_ee0cb5af8b3e900b = {
  0xee0cb5af8b3e900b, b_ee0cb5af8b3e900b.words, 38, d_ee0cb5af8b3e900b, m_ee0cb5af8b3e900b,
  1, 1, i_ee0cb5af8b3e900b, nullptr, nullptr, { &s_ee0cb5af8b3e900b, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<48> b_e2fedf5c334cadc0 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    192, 173,  76,  51,  92, 223, 254, 226,
     24,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  58,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    112,  83, 116, 114, 117,  99, 116,  46,
    114, 101, 112, 111, 114, 116,  50,  36,
     80,  97, 114,  97, 109, 115,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    109,  97, 112,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      9, 125, 167, 253, 143, 210, 191, 153,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    111, 112, 116, 105, 111, 110, 115,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      8, 177, 235,  99,  12,  76, 147, 135,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e2fedf5c334cadc0 = b_e2fedf5c334cadc0.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_e2fedf5c334cadc0[] = {
  &s_87934c0c63ebb108,
  &s_99bfd28ffda77d09,
};
static const uint16_t m_e2fedf5c334cadc0[] = {0, 1};
static const uint16_t i_e2fedf5c334cadc0[] = {0, 1};
const ::capnp::_::RawSchema s_e2fedf5c334cadc0 = {
  0xe2fedf5c334cadc0, b_e2fedf5c334cadc0.words, 48, d_e2fedf5c334cadc0, m_e2fedf5c334cadc0,
  2, 2, i_e2fedf5c334cadc0, nullptr, nullptr, { &s_e2fedf5c334cadc0, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<33> b_cff33382c4afffd3 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    211, 255, 175, 196, 130,  51, 243, 207,
     24,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  66,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    112,  83, 116, 114, 117,  99, 116,  46,
    114, 101, 112, 111, 114, 116,  50,  36,
     82, 101, 115, 117, 108, 116, 115,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 115, 117, 108, 116,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     21, 231,  40,  70, 192,  92,  49, 228,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_cff33382c4afffd3 = b_cff33382c4afffd3.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_cff33382c4afffd3[] = {
  &s_e4315cc04628e715,
};
static const uint16_t m_cff33382c4afffd3[] = {0};
static const uint16_t i_cff33382c4afffd3[] = {0};
const ::capnp::_::RawSchema s_cff33382c4afffd3 = {
  0xcff33382c4afffd3, b_cff33382c4afffd3.words, 33, d_cff33382c4afffd3, m_cff33382c4afffd3,
  1, 1, i_cff33382c4afffd3, nullptr, nullptr, { &s_cff33382c4afffd3, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<33> b_884376633cef3d3b = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     59,  61, 239,  60,  99, 118,  67, 136,
     24,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  58,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    112,  83, 116, 114, 117,  99, 116,  46,
    110, 111, 116, 105, 102, 121,  50,  36,
     80,  97, 114,  97, 109, 115,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    116, 101, 120, 116,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_884376633cef3d3b = b_884376633cef3d3b.words;
#if !CAPNP_LITE
static const uint16_t m_884376633cef3d3b[] = {0};
static const uint16_t i_884376633cef3d3b[] = {0};
const ::capnp::_::RawSchema s_884376633cef3d3b = {
  0x884376633cef3d3b, b_884376633cef3d3b.words, 33, nullptr, m_884376633cef3d3b,
  0, 1, i_884376633cef3d3b, nullptr, nullptr, { &s_884376633cef3d3b, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<33> b_ce1963c7dc1626fa = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    250,  38,  22, 220, 199,  99,  25, 206,
     24,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  66,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    112,  83, 116, 114, 117,  99, 116,  46,
    110, 111, 116, 105, 102, 121,  50,  36,
     82, 101, 115, 117, 108, 116, 115,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 115, 117, 108, 116,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ce1963c7dc1626fa = b_ce1963c7dc1626fa.words;
#if !CAPNP_LITE
static const uint16_t m_ce1963c7dc1626fa[] = {0};
static const uint16_t i_ce1963c7dc1626fa[] = {0};
const ::capnp::_::RawSchema s_ce1963c7dc1626fa = {
  0xce1963c7dc1626fa, b_ce1963c7dc1626fa.words, 33, nullptr, m_ce1963c7dc1626fa,
  0, 1, i_ce1963c7dc1626fa, nullptr, nullptr, { &s_ce1963c7dc1626fa, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_e4d6685143625397 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    151,  83,  98,  67,  81, 104, 214, 228,
     24,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  74,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    112,  83, 116, 114, 117,  99, 116,  46,
     99,  97,  99, 104, 101,  77,  97, 112,
     50,  36,  80,  97, 114,  97, 109, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    109,  97, 112,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      9, 125, 167, 253, 143, 210, 191, 153,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e4d6685143625397 = b_e4d6685143625397.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_e4d6685143625397[] = {
  &s_99bfd28ffda77d09,
};
static const uint16_t m_e4d6685143625397[] = {0};
static const uint16_t i_e4d6685143625397[] = {0};
const ::capnp::_::RawSchema s_e4d6685143625397 = {
  0xe4d6685143625397, b_e4d6685143625397.words, 34, d_e4d6685143625397, m_e4d6685143625397,
  1, 1, i_e4d6685143625397, nullptr, nullptr, { &s_e4d6685143625397, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_cda0cb5ef01063f2 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    242,  99,  16, 240,  94, 203, 160, 205,
     24,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  82,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    112,  83, 116, 114, 117,  99, 116,  46,
     99,  97,  99, 104, 101,  77,  97, 112,
     50,  36,  82, 101, 115, 117, 108, 116,
    115,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 115, 117, 108, 116,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_cda0cb5ef01063f2 = b_cda0cb5ef01063f2.words;
#if !CAPNP_LITE
static const uint16_t m_cda0cb5ef01063f2[] = {0};
static const uint16_t i_cda0cb5ef01063f2[] = {0};
const ::capnp::_::RawSchema s_cda0cb5ef01063f2 = {
  0xcda0cb5ef01063f2, b_cda0cb5ef01063f2.words, 34, nullptr, m_cda0cb5ef01063f2,
  0, 1, i_cda0cb5ef01063f2, nullptr, nullptr, { &s_cda0cb5ef01063f2, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<68> b_c2b78836578788b8 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    184, 136, 135,  87,  54, 136, 183, 194,
     24,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  82,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    112,  83, 116, 114, 117,  99, 116,  46,
    114, 101, 112, 111, 114, 116,  80, 111,
    108, 121,  36,  80,  97, 114,  97, 109,
    115,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     96,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     93,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     88,   0,   0,   0,   3,   0,   1,   0,
    100,   0,   0,   0,   2,   0,   1,   0,
    109,  97, 112,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      9, 125, 167, 253, 143, 210, 191, 153,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 111, 108, 121,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    121, 152, 176, 114, 220, 118, 170, 216,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    111, 112, 116, 105, 111, 110, 115,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      8, 177, 235,  99,  12,  76, 147, 135,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c2b78836578788b8 = b_c2b78836578788b8.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_c2b78836578788b8[] = {
  &s_87934c0c63ebb108,
  &s_99bfd28ffda77d09,
  &s_d8aa76dc72b09879,
};
static const uint16_t m_c2b78836578788b8[] = {0, 2, 1};
static const uint16_t i_c2b78836578788b8[] = {0, 1, 2};
const ::capnp::_::RawSchema s_c2b78836578788b8 = {
  0xc2b78836578788b8, b_c2b78836578788b8.words, 68, d_c2b78836578788b8, m_c2b78836578788b8,
  3, 3, i_c2b78836578788b8, nullptr, nullptr, { &s_c2b78836578788b8, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_d29ac9ad86ec672d = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     45, 103, 236, 134, 173, 201, 154, 210,
     24,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  90,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    112,  83, 116, 114, 117,  99, 116,  46,
    114, 101, 112, 111, 114, 116,  80, 111,
    108, 121,  36,  82, 101, 115, 117, 108,
    116, 115,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 115, 117, 108, 116,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     21, 231,  40,  70, 192,  92,  49, 228,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d29ac9ad86ec672d = b_d29ac9ad86ec672d.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_d29ac9ad86ec672d[] = {
  &s_e4315cc04628e715,
};
static const uint16_t m_d29ac9ad86ec672d[] = {0};
static const uint16_t i_d29ac9ad86ec672d[] = {0};
const ::capnp::_::RawSchema s_d29ac9ad86ec672d = {
  0xd29ac9ad86ec672d, b_d29ac9ad86ec672d.words, 34, d_d29ac9ad86ec672d, m_d29ac9ad86ec672d,
  1, 1, i_d29ac9ad86ec672d, nullptr, nullptr, { &s_d29ac9ad86ec672d, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<68> b_db72cb9687f71d57 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     87,  29, 247, 135, 150, 203, 114, 219,
     24,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  90,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    112,  83, 116, 114, 117,  99, 116,  46,
    114, 101, 112, 111, 114, 116,  80, 111,
    108, 121,  50,  36,  80,  97, 114,  97,
    109, 115,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     96,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     93,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     88,   0,   0,   0,   3,   0,   1,   0,
    100,   0,   0,   0,   2,   0,   1,   0,
    109,  97, 112,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      9, 125, 167, 253, 143, 210, 191, 153,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 111, 108, 121,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     41,  63, 237, 238, 254,  77,  79, 203,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    111, 112, 116, 105, 111, 110, 115,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      8, 177, 235,  99,  12,  76, 147, 135,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_db72cb9687f71d57 = b_db72cb9687f71d57.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_db72cb9687f71d57[] = {
  &s_87934c0c63ebb108,
  &s_99bfd28ffda77d09,
  &s_cb4f4dfeeeed3f29,
};
static const uint16_t m_db72cb9687f71d57[] = {0, 2, 1};
static const uint16_t i_db72cb9687f71d57[] = {0, 1, 2};
const ::capnp::_::RawSchema s_db72cb9687f71d57 = {
  0xdb72cb9687f71d57, b_db72cb9687f71d57.words, 68, d_db72cb9687f71d57, m_db72cb9687f71d57,
  3, 3, i_db72cb9687f71d57, nullptr, nullptr, { &s_db72cb9687f71d57, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_897dc07075df30ab = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    171,  48, 223, 117, 112, 192, 125, 137,
     24,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  98,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    112,  83, 116, 114, 117,  99, 116,  46,
    114, 101, 112, 111, 114, 116,  80, 111,
    108, 121,  50,  36,  82, 101, 115, 117,
    108, 116, 115,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 115, 117, 108, 116,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     21, 231,  40,  70, 192,  92,  49, 228,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_897dc07075df30ab = b_897dc07075df30ab.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_897dc07075df30ab[] = {
  &s_e4315cc04628e715,
};
static const uint16_t m_897dc07075df30ab[] = {0};
static const uint16_t i_897dc07075df30ab[] = {0};
const ::capnp::_::RawSchema s_897dc07075df30ab = {
  0x897dc07075df30ab, b_897dc07075df30ab.words, 34, d_897dc07075df30ab, m_897dc07075df30ab,
  1, 1, i_897dc07075df30ab, nullptr, nullptr, { &s_897dc07075df30ab, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<80> b_a022456c769bbab2 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    178, 186, 155, 118, 108,  69,  34, 160,
     24,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 178,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    112,  83, 116, 114, 117,  99, 116,  46,
    102, 105, 110, 100,  77, 105, 115, 115,
    105, 110, 103,  78, 101, 105, 103, 104,
     98, 111, 117, 114, 115,  50,  36,  80,
     97, 114,  97, 109, 115,   0,   0,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    104,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     96,   0,   0,   0,   3,   0,   1,   0,
    108,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,   0,   0,   0,   3,   0,   1,   0,
    112,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,   0,   0,   0,   3,   0,   1,   0,
    116,   0,   0,   0,   2,   0,   1,   0,
    109,  97, 112,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      9, 125, 167, 253, 143, 210, 191, 153,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    111, 112, 116, 105, 111, 110, 115,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      8, 177, 235,  99,  12,  76, 147, 135,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97, 114,  97, 109,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     64,  96, 142, 234, 194,  88,  15, 219,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 114, 101,  97,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    175, 101, 109, 132, 182, 154, 144, 223,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a022456c769bbab2 = b_a022456c769bbab2.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_a022456c769bbab2[] = {
  &s_87934c0c63ebb108,
  &s_99bfd28ffda77d09,
  &s_db0f58c2ea8e6040,
  &s_df909ab6846d65af,
};
static const uint16_t m_a022456c769bbab2[] = {3, 0, 1, 2};
static const uint16_t i_a022456c769bbab2[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_a022456c769bbab2 = {
  0xa022456c769bbab2, b_a022456c769bbab2.words, 80, d_a022456c769bbab2, m_a022456c769bbab2,
  4, 4, i_a022456c769bbab2, nullptr, nullptr, { &s_a022456c769bbab2, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<39> b_ba9ebdab2f3d2d64 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    100,  45,  61,  47, 171, 189, 158, 186,
     24,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 186,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    112,  83, 116, 114, 117,  99, 116,  46,
    102, 105, 110, 100,  77, 105, 115, 115,
    105, 110, 103,  78, 101, 105, 103, 104,
     98, 111, 117, 114, 115,  50,  36,  82,
    101, 115, 117, 108, 116, 115,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     36,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 115, 117, 108, 116,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     89, 191, 104, 227, 174, 234, 163, 233,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ba9ebdab2f3d2d64 = b_ba9ebdab2f3d2d64.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_ba9ebdab2f3d2d64[] = {
  &s_e9a3eaaee368bf59,
};
static const uint16_t m_ba9ebdab2f3d2d64[] = {0};
static const uint16_t i_ba9ebdab2f3d2d64[] = {0};
const ::capnp::_::RawSchema s_ba9ebdab2f3d2d64 = {
  0xba9ebdab2f3d2d64, b_ba9ebdab2f3d2d64.words, 39, d_ba9ebdab2f3d2d64, m_ba9ebdab2f3d2d64,
  1, 1, i_ba9ebdab2f3d2d64, nullptr, nullptr, { &s_ba9ebdab2f3d2d64, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<80> b_84cc8385c08d8890 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    144, 136, 141, 192, 133, 131, 204, 132,
     24,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 154,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    112,  83, 116, 114, 117,  99, 116,  46,
    102, 105, 110, 100,  83, 119,  97, 112,
    112, 101, 100,  70, 101, 101, 100, 101,
    114, 115,  50,  36,  80,  97, 114,  97,
    109, 115,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    104,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     96,   0,   0,   0,   3,   0,   1,   0,
    108,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,   0,   0,   0,   3,   0,   1,   0,
    112,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,   0,   0,   0,   3,   0,   1,   0,
    116,   0,   0,   0,   2,   0,   1,   0,
    109,  97, 112,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      9, 125, 167, 253, 143, 210, 191, 153,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    111, 112, 116, 105, 111, 110, 115,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      8, 177, 235,  99,  12,  76, 147, 135,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97, 114,  97, 109,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     11,  89,  74, 211, 193, 116, 245, 229,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 114, 101,  97,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    175, 101, 109, 132, 182, 154, 144, 223,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_84cc8385c08d8890 = b_84cc8385c08d8890.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_84cc8385c08d8890[] = {
  &s_87934c0c63ebb108,
  &s_99bfd28ffda77d09,
  &s_df909ab6846d65af,
  &s_e5f574c1d34a590b,
};
static const uint16_t m_84cc8385c08d8890[] = {3, 0, 1, 2};
static const uint16_t i_84cc8385c08d8890[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_84cc8385c08d8890 = {
  0x84cc8385c08d8890, b_84cc8385c08d8890.words, 80, d_84cc8385c08d8890, m_84cc8385c08d8890,
  4, 4, i_84cc8385c08d8890, nullptr, nullptr, { &s_84cc8385c08d8890, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<39> b_db0f0f9f862e7eed = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    237, 126,  46, 134, 159,  15,  15, 219,
     24,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 162,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    112,  83, 116, 114, 117,  99, 116,  46,
    102, 105, 110, 100,  83, 119,  97, 112,
    112, 101, 100,  70, 101, 101, 100, 101,
    114, 115,  50,  36,  82, 101, 115, 117,
    108, 116, 115,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     36,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 115, 117, 108, 116,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     69,  61,  25,  94,  85,  86,  11, 141,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_db0f0f9f862e7eed = b_db0f0f9f862e7eed.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_db0f0f9f862e7eed[] = {
  &s_8d0b56555e193d45,
};
static const uint16_t m_db0f0f9f862e7eed[] = {0};
static const uint16_t i_db0f0f9f862e7eed[] = {0};
const ::capnp::_::RawSchema s_db0f0f9f862e7eed = {
  0xdb0f0f9f862e7eed, b_db0f0f9f862e7eed.words, 39, d_db0f0f9f862e7eed, m_db0f0f9f862e7eed,
  1, 1, i_db0f0f9f862e7eed, nullptr, nullptr, { &s_db0f0f9f862e7eed, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_ac93f434e65216c8 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    200,  22,  82, 230,  52, 244, 147, 172,
     24,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 130,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    112,  83, 116, 114, 117,  99, 116,  46,
    114, 101, 109, 111, 118, 101,  70, 114,
    111, 109,  67,  97,  99, 104, 101,  50,
     36,  80,  97, 114,  97, 109, 115,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    109,  97, 112,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      9, 125, 167, 253, 143, 210, 191, 153,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ac93f434e65216c8 = b_ac93f434e65216c8.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_ac93f434e65216c8[] = {
  &s_99bfd28ffda77d09,
};
static const uint16_t m_ac93f434e65216c8[] = {0};
static const uint16_t i_ac93f434e65216c8[] = {0};
const ::capnp::_::RawSchema s_ac93f434e65216c8 = {
  0xac93f434e65216c8, b_ac93f434e65216c8.words, 34, d_ac93f434e65216c8, m_ac93f434e65216c8,
  1, 1, i_ac93f434e65216c8, nullptr, nullptr, { &s_ac93f434e65216c8, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<35> b_f6ec7edb50b5029a = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    154,   2, 181,  80, 219, 126, 236, 246,
     24,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 138,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    112,  83, 116, 114, 117,  99, 116,  46,
    114, 101, 109, 111, 118, 101,  70, 114,
    111, 109,  67,  97,  99, 104, 101,  50,
     36,  82, 101, 115, 117, 108, 116, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 115, 117, 108, 116,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f6ec7edb50b5029a = b_f6ec7edb50b5029a.words;
#if !CAPNP_LITE
static const uint16_t m_f6ec7edb50b5029a[] = {0};
static const uint16_t i_f6ec7edb50b5029a[] = {0};
const ::capnp::_::RawSchema s_f6ec7edb50b5029a = {
  0xf6ec7edb50b5029a, b_f6ec7edb50b5029a.words, 35, nullptr, m_f6ec7edb50b5029a,
  0, 1, i_f6ec7edb50b5029a, nullptr, nullptr, { &s_f6ec7edb50b5029a, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<18> b_bd07b37493258e8e = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    142, 142,  37, 147, 116, 179,   7, 189,
     24,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  90,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    112,  83, 116, 114, 117,  99, 116,  46,
    114, 101, 108, 111,  97, 100,  67, 101,
    108, 108, 115,  36,  80,  97, 114,  97,
    109, 115,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_bd07b37493258e8e = b_bd07b37493258e8e.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_bd07b37493258e8e = {
  0xbd07b37493258e8e, b_bd07b37493258e8e.words, 18, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_bd07b37493258e8e, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_da7878454035ed3a = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     58, 237,  53,  64,  69, 120, 120, 218,
     24,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  98,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    112,  83, 116, 114, 117,  99, 116,  46,
    114, 101, 108, 111,  97, 100,  67, 101,
    108, 108, 115,  36,  82, 101, 115, 117,
    108, 116, 115,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 115, 117, 108, 116,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_da7878454035ed3a = b_da7878454035ed3a.words;
#if !CAPNP_LITE
static const uint16_t m_da7878454035ed3a[] = {0};
static const uint16_t i_da7878454035ed3a[] = {0};
const ::capnp::_::RawSchema s_da7878454035ed3a = {
  0xda7878454035ed3a, b_da7878454035ed3a.words, 34, nullptr, m_da7878454035ed3a,
  0, 1, i_da7878454035ed3a, nullptr, nullptr, { &s_da7878454035ed3a, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_9ff7535744c01c76 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    118,  28, 192,  68,  87,  83, 247, 159,
     24,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  82,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    112,  83, 116, 114, 117,  99, 116,  46,
    113, 117, 101, 114, 121,  67, 101, 108,
    108, 115,  36,  80,  97, 114,  97, 109,
    115,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
     98, 111, 120,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    204, 141, 171, 181,  95, 184,  73, 162,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9ff7535744c01c76 = b_9ff7535744c01c76.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_9ff7535744c01c76[] = {
  &s_a249b85fb5ab8dcc,
};
static const uint16_t m_9ff7535744c01c76[] = {0};
static const uint16_t i_9ff7535744c01c76[] = {0};
const ::capnp::_::RawSchema s_9ff7535744c01c76 = {
  0x9ff7535744c01c76, b_9ff7535744c01c76.words, 34, d_9ff7535744c01c76, m_9ff7535744c01c76,
  1, 1, i_9ff7535744c01c76, nullptr, nullptr, { &s_9ff7535744c01c76, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<38> b_c71d3c88812151ff = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    255,  81,  33, 129, 136,  60,  29, 199,
     24,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  90,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    112,  83, 116, 114, 117,  99, 116,  46,
    113, 117, 101, 114, 121,  67, 101, 108,
    108, 115,  36,  82, 101, 115, 117, 108,
    116, 115,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     36,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 115, 117, 108, 116,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    121, 253, 133,  25,  22, 210,  72, 164,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c71d3c88812151ff = b_c71d3c88812151ff.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_c71d3c88812151ff[] = {
  &s_a448d2161985fd79,
};
static const uint16_t m_c71d3c88812151ff[] = {0};
static const uint16_t i_c71d3c88812151ff[] = {0};
const ::capnp::_::RawSchema s_c71d3c88812151ff = {
  0xc71d3c88812151ff, b_c71d3c88812151ff.words, 38, d_c71d3c88812151ff, m_c71d3c88812151ff,
  1, 1, i_c71d3c88812151ff, nullptr, nullptr, { &s_c71d3c88812151ff, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_bce4509e5983c1e1 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    225, 193, 131,  89, 158,  80, 228, 188,
     24,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  98,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    112,  83, 116, 114, 117,  99, 116,  46,
    105, 110, 115, 101, 114, 116,  83, 105,
    103, 110,  97, 108,  36,  80,  97, 114,
     97, 109, 115,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    109, 115, 103,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    198, 195,  92,  77, 101,  24,  85, 188,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_bce4509e5983c1e1 = b_bce4509e5983c1e1.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_bce4509e5983c1e1[] = {
  &s_bc5518654d5cc3c6,
};
static const uint16_t m_bce4509e5983c1e1[] = {0};
static const uint16_t i_bce4509e5983c1e1[] = {0};
const ::capnp::_::RawSchema s_bce4509e5983c1e1 = {
  0xbce4509e5983c1e1, b_bce4509e5983c1e1.words, 34, d_bce4509e5983c1e1, m_bce4509e5983c1e1,
  1, 1, i_bce4509e5983c1e1, nullptr, nullptr, { &s_bce4509e5983c1e1, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_d531aeddeb5d8e5b = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     91, 142,  93, 235, 221, 174,  49, 213,
     24,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 106,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    112,  83, 116, 114, 117,  99, 116,  46,
    105, 110, 115, 101, 114, 116,  83, 105,
    103, 110,  97, 108,  36,  82, 101, 115,
    117, 108, 116, 115,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 115, 117, 108, 116,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d531aeddeb5d8e5b = b_d531aeddeb5d8e5b.words;
#if !CAPNP_LITE
static const uint16_t m_d531aeddeb5d8e5b[] = {0};
static const uint16_t i_d531aeddeb5d8e5b[] = {0};
const ::capnp::_::RawSchema s_d531aeddeb5d8e5b = {
  0xd531aeddeb5d8e5b, b_d531aeddeb5d8e5b.words, 34, nullptr, m_d531aeddeb5d8e5b,
  0, 1, i_d531aeddeb5d8e5b, nullptr, nullptr, { &s_d531aeddeb5d8e5b, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<49> b_9b8d8ad8f1c97f8b = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    139, 127, 201, 241, 216, 138, 141, 155,
     24,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  98,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    112,  83, 116, 114, 117,  99, 116,  46,
    114, 101, 109, 111, 118, 101,  83, 105,
    103, 110,  97, 108,  36,  80,  97, 114,
     97, 109, 115,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    109,  97, 112,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      9, 125, 167, 253, 143, 210, 191, 153,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 115, 103,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    147,  64,  63,  62, 224, 211,  72, 163,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9b8d8ad8f1c97f8b = b_9b8d8ad8f1c97f8b.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_9b8d8ad8f1c97f8b[] = {
  &s_99bfd28ffda77d09,
  &s_a348d3e03e3f4093,
};
static const uint16_t m_9b8d8ad8f1c97f8b[] = {0, 1};
static const uint16_t i_9b8d8ad8f1c97f8b[] = {0, 1};
const ::capnp::_::RawSchema s_9b8d8ad8f1c97f8b = {
  0x9b8d8ad8f1c97f8b, b_9b8d8ad8f1c97f8b.words, 49, d_9b8d8ad8f1c97f8b, m_9b8d8ad8f1c97f8b,
  2, 2, i_9b8d8ad8f1c97f8b, nullptr, nullptr, { &s_9b8d8ad8f1c97f8b, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_e3ea69dc0fbca7d0 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    208, 167, 188,  15, 220, 105, 234, 227,
     24,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 106,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    112,  83, 116, 114, 117,  99, 116,  46,
    114, 101, 109, 111, 118, 101,  83, 105,
    103, 110,  97, 108,  36,  82, 101, 115,
    117, 108, 116, 115,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 115, 117, 108, 116,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e3ea69dc0fbca7d0 = b_e3ea69dc0fbca7d0.words;
#if !CAPNP_LITE
static const uint16_t m_e3ea69dc0fbca7d0[] = {0};
static const uint16_t i_e3ea69dc0fbca7d0[] = {0};
const ::capnp::_::RawSchema s_e3ea69dc0fbca7d0 = {
  0xe3ea69dc0fbca7d0, b_e3ea69dc0fbca7d0.words, 34, nullptr, m_e3ea69dc0fbca7d0,
  0, 1, i_e3ea69dc0fbca7d0, nullptr, nullptr, { &s_e3ea69dc0fbca7d0, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<59> b_c9928160e63921ea = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    234,  33,  57, 230,  96, 129, 146, 201,
     24,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  98,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    112,  83, 116, 114, 117,  99, 116,  46,
    111, 110,  67, 101, 108, 108,  67, 104,
     97, 110, 103, 101,  36,  80,  97, 114,
     97, 109, 115,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     68,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     65,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     92,   0,   0,   0,   2,   0,   1,   0,
    105, 110, 115, 101, 114, 116,  73, 100,
    115,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 112, 100,  97, 116, 101,  73, 100,
    115,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c9928160e63921ea = b_c9928160e63921ea.words;
#if !CAPNP_LITE
static const uint16_t m_c9928160e63921ea[] = {0, 1};
static const uint16_t i_c9928160e63921ea[] = {0, 1};
const ::capnp::_::RawSchema s_c9928160e63921ea = {
  0xc9928160e63921ea, b_c9928160e63921ea.words, 59, nullptr, m_c9928160e63921ea,
  0, 2, i_c9928160e63921ea, nullptr, nullptr, { &s_c9928160e63921ea, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_a323522f0f523a03 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
      3,  58,  82,  15,  47,  82,  35, 163,
     24,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 106,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    112,  83, 116, 114, 117,  99, 116,  46,
    111, 110,  67, 101, 108, 108,  67, 104,
     97, 110, 103, 101,  36,  82, 101, 115,
    117, 108, 116, 115,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 115, 117, 108, 116,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a323522f0f523a03 = b_a323522f0f523a03.words;
#if !CAPNP_LITE
static const uint16_t m_a323522f0f523a03[] = {0};
static const uint16_t i_a323522f0f523a03[] = {0};
const ::capnp::_::RawSchema s_a323522f0f523a03 = {
  0xa323522f0f523a03, b_a323522f0f523a03.words, 34, nullptr, m_a323522f0f523a03,
  0, 1, i_a323522f0f523a03, nullptr, nullptr, { &s_a323522f0f523a03, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<58> b_c0ebffea9176f374 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    116, 243, 118, 145, 234, 255, 235, 192,
     24,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  82,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    112,  83, 116, 114, 117,  99, 116,  46,
    117, 112, 100,  97, 116, 101,  67, 101,
    108, 108,  36,  80,  97, 114,  97, 109,
    115,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     68,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     65,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     60,   0,   0,   0,   3,   0,   1,   0,
     88,   0,   0,   0,   2,   0,   1,   0,
    105, 110, 115, 101, 114, 116, 101, 100,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     19,  63,  48,  10, 113, 248, 123, 216,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 112, 100,  97, 116, 101, 100,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     19,  63,  48,  10, 113, 248, 123, 216,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c0ebffea9176f374 = b_c0ebffea9176f374.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_c0ebffea9176f374[] = {
  &s_d87bf8710a303f13,
};
static const uint16_t m_c0ebffea9176f374[] = {0, 1};
static const uint16_t i_c0ebffea9176f374[] = {0, 1};
const ::capnp::_::RawSchema s_c0ebffea9176f374 = {
  0xc0ebffea9176f374, b_c0ebffea9176f374.words, 58, d_c0ebffea9176f374, m_c0ebffea9176f374,
  1, 2, i_c0ebffea9176f374, nullptr, nullptr, { &s_c0ebffea9176f374, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_9396a7d8e08af448 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     72, 244, 138, 224, 216, 167, 150, 147,
     24,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  90,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    112,  83, 116, 114, 117,  99, 116,  46,
    117, 112, 100,  97, 116, 101,  67, 101,
    108, 108,  36,  82, 101, 115, 117, 108,
    116, 115,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 115, 117, 108, 116,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9396a7d8e08af448 = b_9396a7d8e08af448.words;
#if !CAPNP_LITE
static const uint16_t m_9396a7d8e08af448[] = {0};
static const uint16_t i_9396a7d8e08af448[] = {0};
const ::capnp::_::RawSchema s_9396a7d8e08af448 = {
  0x9396a7d8e08af448, b_9396a7d8e08af448.words, 34, nullptr, m_9396a7d8e08af448,
  0, 1, i_9396a7d8e08af448, nullptr, nullptr, { &s_9396a7d8e08af448, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<18> b_ed3b61df9fb85c6b = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    107,  92, 184, 159, 223,  97,  59, 237,
     24,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 130,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    112,  83, 116, 114, 117,  99, 116,  46,
    102, 105, 110, 105, 115, 104,  85, 112,
    100,  97, 116, 101,  67, 101, 108, 108,
     36,  80,  97, 114,  97, 109, 115,   0, }
};
::capnp::word const* const bp_ed3b61df9fb85c6b = b_ed3b61df9fb85c6b.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_ed3b61df9fb85c6b = {
  0xed3b61df9fb85c6b, b_ed3b61df9fb85c6b.words, 18, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_ed3b61df9fb85c6b, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<35> b_cf4e977115b9925b = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     91, 146, 185,  21, 113, 151,  78, 207,
     24,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 138,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    112,  83, 116, 114, 117,  99, 116,  46,
    102, 105, 110, 105, 115, 104,  85, 112,
    100,  97, 116, 101,  67, 101, 108, 108,
     36,  82, 101, 115, 117, 108, 116, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 115, 117, 108, 116,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_cf4e977115b9925b = b_cf4e977115b9925b.words;
#if !CAPNP_LITE
static const uint16_t m_cf4e977115b9925b[] = {0};
static const uint16_t i_cf4e977115b9925b[] = {0};
const ::capnp::_::RawSchema s_cf4e977115b9925b = {
  0xcf4e977115b9925b, b_cf4e977115b9925b.words, 35, nullptr, m_cf4e977115b9925b,
  0, 1, i_cf4e977115b9925b, nullptr, nullptr, { &s_cf4e977115b9925b, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<17> b_f2ffb3198e94899b = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    155, 137, 148, 142,  25, 179, 255, 242,
     24,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  58,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    112,  83, 116, 114, 117,  99, 116,  46,
    112, 105, 110, 103,  82,  80,  67,  36,
     80,  97, 114,  97, 109, 115,   0,   0, }
};
::capnp::word const* const bp_f2ffb3198e94899b = b_f2ffb3198e94899b.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_f2ffb3198e94899b = {
  0xf2ffb3198e94899b, b_f2ffb3198e94899b.words, 17, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_f2ffb3198e94899b, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<33> b_a26eb0c542495b92 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    146,  91,  73,  66, 197, 176, 110, 162,
     24,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  66,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    112,  83, 116, 114, 117,  99, 116,  46,
    112, 105, 110, 103,  82,  80,  67,  36,
     82, 101, 115, 117, 108, 116, 115,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 115, 117, 108, 116,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a26eb0c542495b92 = b_a26eb0c542495b92.words;
#if !CAPNP_LITE
static const uint16_t m_a26eb0c542495b92[] = {0};
static const uint16_t i_a26eb0c542495b92[] = {0};
const ::capnp::_::RawSchema s_a26eb0c542495b92 = {
  0xa26eb0c542495b92, b_a26eb0c542495b92.words, 33, nullptr, m_a26eb0c542495b92,
  0, 1, i_a26eb0c542495b92, nullptr, nullptr, { &s_a26eb0c542495b92, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<49> b_c4aa5e5459365fb9 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    185,  95,  54,  89,  84,  94, 170, 196,
     24,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  42,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    112,  83, 116, 114, 117,  99, 116,  46,
    116, 111,  67,  83,  86,  36,  80,  97,
    114,  97, 109, 115,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
    109,  97, 112,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      9, 125, 167, 253, 143, 210, 191, 153,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 105, 108, 101, 110,  97, 109, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c4aa5e5459365fb9 = b_c4aa5e5459365fb9.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_c4aa5e5459365fb9[] = {
  &s_99bfd28ffda77d09,
};
static const uint16_t m_c4aa5e5459365fb9[] = {1, 0};
static const uint16_t i_c4aa5e5459365fb9[] = {0, 1};
const ::capnp::_::RawSchema s_c4aa5e5459365fb9 = {
  0xc4aa5e5459365fb9, b_c4aa5e5459365fb9.words, 49, d_c4aa5e5459365fb9, m_c4aa5e5459365fb9,
  1, 2, i_c4aa5e5459365fb9, nullptr, nullptr, { &s_c4aa5e5459365fb9, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<33> b_9ef3122e0f751d69 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    105,  29, 117,  15,  46,  18, 243, 158,
     24,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  50,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    112,  83, 116, 114, 117,  99, 116,  46,
    116, 111,  67,  83,  86,  36,  82, 101,
    115, 117, 108, 116, 115,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 115, 117, 108, 116,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9ef3122e0f751d69 = b_9ef3122e0f751d69.words;
#if !CAPNP_LITE
static const uint16_t m_9ef3122e0f751d69[] = {0};
static const uint16_t i_9ef3122e0f751d69[] = {0};
const ::capnp::_::RawSchema s_9ef3122e0f751d69 = {
  0x9ef3122e0f751d69, b_9ef3122e0f751d69.words, 33, nullptr, m_9ef3122e0f751d69,
  0, 1, i_9ef3122e0f751d69, nullptr, nullptr, { &s_9ef3122e0f751d69, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<50> b_c05cc21da3828de7 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    231, 141, 130, 163,  29, 194,  92, 192,
     24,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 106,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    112,  83, 116, 114, 117,  99, 116,  46,
    101, 120, 112, 111, 114, 116,  67, 101,
    108, 108,  67,  83,  86,  36,  80,  97,
    114,  97, 109, 115,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
    109,  97, 112,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      9, 125, 167, 253, 143, 210, 191, 153,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 105, 108, 101, 110,  97, 109, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c05cc21da3828de7 = b_c05cc21da3828de7.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_c05cc21da3828de7[] = {
  &s_99bfd28ffda77d09,
};
static const uint16_t m_c05cc21da3828de7[] = {1, 0};
static const uint16_t i_c05cc21da3828de7[] = {0, 1};
const ::capnp::_::RawSchema s_c05cc21da3828de7 = {
  0xc05cc21da3828de7, b_c05cc21da3828de7.words, 50, d_c05cc21da3828de7, m_c05cc21da3828de7,
  1, 2, i_c05cc21da3828de7, nullptr, nullptr, { &s_c05cc21da3828de7, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_f8499b0334710a54 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     84,  10, 113,  52,   3, 155,  73, 248,
     24,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 114,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    112,  83, 116, 114, 117,  99, 116,  46,
    101, 120, 112, 111, 114, 116,  67, 101,
    108, 108,  67,  83,  86,  36,  82, 101,
    115, 117, 108, 116, 115,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 115, 117, 108, 116,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f8499b0334710a54 = b_f8499b0334710a54.words;
#if !CAPNP_LITE
static const uint16_t m_f8499b0334710a54[] = {0};
static const uint16_t i_f8499b0334710a54[] = {0};
const ::capnp::_::RawSchema s_f8499b0334710a54 = {
  0xf8499b0334710a54, b_f8499b0334710a54.words, 34, nullptr, m_f8499b0334710a54,
  0, 1, i_f8499b0334710a54, nullptr, nullptr, { &s_f8499b0334710a54, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<17> b_e6fab8cdd861ec10 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     16, 236,  97, 216, 205, 184, 250, 230,
     24,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  66,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    112,  83, 116, 114, 117,  99, 116,  46,
    103, 101, 110, 101, 114,  97, 116, 101,
     36,  80,  97, 114,  97, 109, 115,   0, }
};
::capnp::word const* const bp_e6fab8cdd861ec10 = b_e6fab8cdd861ec10.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_e6fab8cdd861ec10 = {
  0xe6fab8cdd861ec10, b_e6fab8cdd861ec10.words, 17, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_e6fab8cdd861ec10, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_d02d57a41aa24cf7 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    247,  76, 162,  26, 164,  87,  45, 208,
     24,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  74,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    112,  83, 116, 114, 117,  99, 116,  46,
    103, 101, 110, 101, 114,  97, 116, 101,
     36,  82, 101, 115, 117, 108, 116, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 115, 117, 108, 116,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    204, 141, 171, 181,  95, 184,  73, 162,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d02d57a41aa24cf7 = b_d02d57a41aa24cf7.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_d02d57a41aa24cf7[] = {
  &s_a249b85fb5ab8dcc,
};
static const uint16_t m_d02d57a41aa24cf7[] = {0};
static const uint16_t i_d02d57a41aa24cf7[] = {0};
const ::capnp::_::RawSchema s_d02d57a41aa24cf7 = {
  0xd02d57a41aa24cf7, b_d02d57a41aa24cf7.words, 34, d_d02d57a41aa24cf7, m_d02d57a41aa24cf7,
  1, 1, i_d02d57a41aa24cf7, nullptr, nullptr, { &s_d02d57a41aa24cf7, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<33> b_a96e5d30df93b43e = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     62, 180, 147, 223,  48,  93, 110, 169,
     24,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  50,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    112,  83, 116, 114, 117,  99, 116,  46,
    103, 101, 116,  66, 111, 120,  36,  80,
     97, 114,  97, 109, 115,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
     98, 111, 120,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    204, 141, 171, 181,  95, 184,  73, 162,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a96e5d30df93b43e = b_a96e5d30df93b43e.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_a96e5d30df93b43e[] = {
  &s_a249b85fb5ab8dcc,
};
static const uint16_t m_a96e5d30df93b43e[] = {0};
static const uint16_t i_a96e5d30df93b43e[] = {0};
const ::capnp::_::RawSchema s_a96e5d30df93b43e = {
  0xa96e5d30df93b43e, b_a96e5d30df93b43e.words, 33, d_a96e5d30df93b43e, m_a96e5d30df93b43e,
  1, 1, i_a96e5d30df93b43e, nullptr, nullptr, { &s_a96e5d30df93b43e, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<37> b_8536e1edf4aa2e14 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     20,  46, 170, 244, 237, 225,  54, 133,
     24,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  58,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    112,  83, 116, 114, 117,  99, 116,  46,
    103, 101, 116,  66, 111, 120,  36,  82,
    101, 115, 117, 108, 116, 115,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     36,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 115, 117, 108, 116,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     50, 188,  57,  59,  74, 186,  39, 179,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_8536e1edf4aa2e14 = b_8536e1edf4aa2e14.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_8536e1edf4aa2e14[] = {
  &s_b327ba4a3b39bc32,
};
static const uint16_t m_8536e1edf4aa2e14[] = {0};
static const uint16_t i_8536e1edf4aa2e14[] = {0};
const ::capnp::_::RawSchema s_8536e1edf4aa2e14 = {
  0x8536e1edf4aa2e14, b_8536e1edf4aa2e14.words, 37, d_8536e1edf4aa2e14, m_8536e1edf4aa2e14,
  1, 1, i_8536e1edf4aa2e14, nullptr, nullptr, { &s_8536e1edf4aa2e14, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace vmtsmap {

// Map
#ifndef _MSC_VER
constexpr uint16_t Map::_capnpPrivate::dataWordSize;
constexpr uint16_t Map::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Map::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Map::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Map::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// PtLatLon
#ifndef _MSC_VER
constexpr uint16_t PtLatLon::_capnpPrivate::dataWordSize;
constexpr uint16_t PtLatLon::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind PtLatLon::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* PtLatLon::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* PtLatLon::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// PointType
#ifndef _MSC_VER
constexpr uint16_t PointType::_capnpPrivate::dataWordSize;
constexpr uint16_t PointType::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind PointType::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* PointType::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* PointType::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// BoxType
#ifndef _MSC_VER
constexpr uint16_t BoxType::_capnpPrivate::dataWordSize;
constexpr uint16_t BoxType::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind BoxType::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* BoxType::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* BoxType::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// PointDataNew
#ifndef _MSC_VER
constexpr uint16_t PointDataNew::_capnpPrivate::dataWordSize;
constexpr uint16_t PointDataNew::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind PointDataNew::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* PointDataNew::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* PointDataNew::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// PointDataVector
#ifndef _MSC_VER
constexpr uint16_t PointDataVector::_capnpPrivate::dataWordSize;
constexpr uint16_t PointDataVector::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind PointDataVector::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* PointDataVector::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* PointDataVector::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// Rect
#ifndef _MSC_VER
constexpr uint16_t Rect::_capnpPrivate::dataWordSize;
constexpr uint16_t Rect::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Rect::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Rect::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Rect::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// ClusterParam
#ifndef _MSC_VER
constexpr uint16_t ClusterParam::_capnpPrivate::dataWordSize;
constexpr uint16_t ClusterParam::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind ClusterParam::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ClusterParam::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* ClusterParam::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// Point
#ifndef _MSC_VER
constexpr uint16_t Point::_capnpPrivate::dataWordSize;
constexpr uint16_t Point::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Point::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Point::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Point::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// PointFull
#ifndef _MSC_VER
constexpr uint16_t PointFull::_capnpPrivate::dataWordSize;
constexpr uint16_t PointFull::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind PointFull::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* PointFull::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* PointFull::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// TileData
#ifndef _MSC_VER
constexpr uint16_t TileData::_capnpPrivate::dataWordSize;
constexpr uint16_t TileData::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind TileData::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* TileData::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* TileData::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// MapDetailData
#ifndef _MSC_VER
constexpr uint16_t MapDetailData::_capnpPrivate::dataWordSize;
constexpr uint16_t MapDetailData::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind MapDetailData::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MapDetailData::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MapDetailData::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// Results
#ifndef _MSC_VER
constexpr uint16_t Results::_capnpPrivate::dataWordSize;
constexpr uint16_t Results::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Results::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Results::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Results::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// AnalysisOptions
#ifndef _MSC_VER
constexpr uint16_t AnalysisOptions::_capnpPrivate::dataWordSize;
constexpr uint16_t AnalysisOptions::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind AnalysisOptions::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* AnalysisOptions::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* AnalysisOptions::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// ResultType
#ifndef _MSC_VER
constexpr uint16_t ResultType::_capnpPrivate::dataWordSize;
constexpr uint16_t ResultType::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind ResultType::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ResultType::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* ResultType::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// NeighboursData
#ifndef _MSC_VER
constexpr uint16_t NeighboursData::_capnpPrivate::dataWordSize;
constexpr uint16_t NeighboursData::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind NeighboursData::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* NeighboursData::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* NeighboursData::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// MissingNeighbours
#ifndef _MSC_VER
constexpr uint16_t MissingNeighbours::_capnpPrivate::dataWordSize;
constexpr uint16_t MissingNeighbours::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind MissingNeighbours::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MissingNeighbours::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MissingNeighbours::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// OverlapReport
#ifndef _MSC_VER
constexpr uint16_t OverlapReport::_capnpPrivate::dataWordSize;
constexpr uint16_t OverlapReport::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind OverlapReport::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* OverlapReport::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* OverlapReport::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// OverlapFinalReport
#ifndef _MSC_VER
constexpr uint16_t OverlapFinalReport::_capnpPrivate::dataWordSize;
constexpr uint16_t OverlapFinalReport::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind OverlapFinalReport::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* OverlapFinalReport::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* OverlapFinalReport::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// MissingNeighbourParam
#ifndef _MSC_VER
constexpr uint16_t MissingNeighbourParam::_capnpPrivate::dataWordSize;
constexpr uint16_t MissingNeighbourParam::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind MissingNeighbourParam::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MissingNeighbourParam::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MissingNeighbourParam::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// FeederParams
#ifndef _MSC_VER
constexpr uint16_t FeederParams::_capnpPrivate::dataWordSize;
constexpr uint16_t FeederParams::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind FeederParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* FeederParams::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* FeederParams::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// CellInfo
#ifndef _MSC_VER
constexpr uint16_t CellInfo::_capnpPrivate::dataWordSize;
constexpr uint16_t CellInfo::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind CellInfo::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CellInfo::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* CellInfo::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// CellDataInfo
#ifndef _MSC_VER
constexpr uint16_t CellDataInfo::_capnpPrivate::dataWordSize;
constexpr uint16_t CellDataInfo::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind CellDataInfo::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CellDataInfo::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* CellDataInfo::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// CellDataExt
#ifndef _MSC_VER
constexpr uint16_t CellDataExt::_capnpPrivate::dataWordSize;
constexpr uint16_t CellDataExt::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind CellDataExt::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CellDataExt::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* CellDataExt::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// AddSignalMsg2
#ifndef _MSC_VER
constexpr uint16_t AddSignalMsg2::_capnpPrivate::dataWordSize;
constexpr uint16_t AddSignalMsg2::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind AddSignalMsg2::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* AddSignalMsg2::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* AddSignalMsg2::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// DeleteSignalMsg2
#ifndef _MSC_VER
constexpr uint16_t DeleteSignalMsg2::_capnpPrivate::dataWordSize;
constexpr uint16_t DeleteSignalMsg2::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind DeleteSignalMsg2::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* DeleteSignalMsg2::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* DeleteSignalMsg2::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// SignalCellExtra
#ifndef _MSC_VER
constexpr uint16_t SignalCellExtra::_capnpPrivate::dataWordSize;
constexpr uint16_t SignalCellExtra::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind SignalCellExtra::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SignalCellExtra::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* SignalCellExtra::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// SignalCell
#ifndef _MSC_VER
constexpr uint16_t SignalCell::_capnpPrivate::dataWordSize;
constexpr uint16_t SignalCell::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind SignalCell::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SignalCell::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* SignalCell::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// SignalCells
#ifndef _MSC_VER
constexpr uint16_t SignalCells::_capnpPrivate::dataWordSize;
constexpr uint16_t SignalCells::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind SignalCells::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SignalCells::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* SignalCells::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// MetaDataEntry
#ifndef _MSC_VER
constexpr uint16_t MetaDataEntry::_capnpPrivate::dataWordSize;
constexpr uint16_t MetaDataEntry::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind MetaDataEntry::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MetaDataEntry::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MetaDataEntry::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// MetaData
#ifndef _MSC_VER
constexpr uint16_t MetaData::_capnpPrivate::dataWordSize;
constexpr uint16_t MetaData::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind MetaData::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MetaData::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MetaData::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

#if !CAPNP_LITE
::capnp::Request< ::vmtsmap::MapStruct::InsertToMapParams,  ::vmtsmap::MapStruct::InsertToMapResults>
MapStruct::Client::insertToMapRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::vmtsmap::MapStruct::InsertToMapParams,  ::vmtsmap::MapStruct::InsertToMapResults>(
      0xbaf55ed4f5ecb7a1ull, 0, sizeHint);
}
::kj::Promise<void> MapStruct::Server::insertToMap(InsertToMapContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "message.capnp:MapStruct", "insertToMap",
      0xbaf55ed4f5ecb7a1ull, 0);
}
::capnp::Request< ::vmtsmap::MapStruct::GetPointsParams,  ::vmtsmap::MapStruct::GetPointsResults>
MapStruct::Client::getPointsRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::vmtsmap::MapStruct::GetPointsParams,  ::vmtsmap::MapStruct::GetPointsResults>(
      0xbaf55ed4f5ecb7a1ull, 1, sizeHint);
}
::kj::Promise<void> MapStruct::Server::getPoints(GetPointsContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "message.capnp:MapStruct", "getPoints",
      0xbaf55ed4f5ecb7a1ull, 1);
}
::capnp::Request< ::vmtsmap::MapStruct::InsertPointsInPolygonParams,  ::vmtsmap::MapStruct::InsertPointsInPolygonResults>
MapStruct::Client::insertPointsInPolygonRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::vmtsmap::MapStruct::InsertPointsInPolygonParams,  ::vmtsmap::MapStruct::InsertPointsInPolygonResults>(
      0xbaf55ed4f5ecb7a1ull, 2, sizeHint);
}
::kj::Promise<void> MapStruct::Server::insertPointsInPolygon(InsertPointsInPolygonContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "message.capnp:MapStruct", "insertPointsInPolygon",
      0xbaf55ed4f5ecb7a1ull, 2);
}
::capnp::Request< ::vmtsmap::MapStruct::AnalyzeParams,  ::vmtsmap::MapStruct::AnalyzeResults>
MapStruct::Client::analyzeRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::vmtsmap::MapStruct::AnalyzeParams,  ::vmtsmap::MapStruct::AnalyzeResults>(
      0xbaf55ed4f5ecb7a1ull, 3, sizeHint);
}
::kj::Promise<void> MapStruct::Server::analyze(AnalyzeContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "message.capnp:MapStruct", "analyze",
      0xbaf55ed4f5ecb7a1ull, 3);
}
::capnp::Request< ::vmtsmap::MapStruct::ReportParams,  ::vmtsmap::MapStruct::ReportResults>
MapStruct::Client::reportRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::vmtsmap::MapStruct::ReportParams,  ::vmtsmap::MapStruct::ReportResults>(
      0xbaf55ed4f5ecb7a1ull, 4, sizeHint);
}
::kj::Promise<void> MapStruct::Server::report(ReportContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "message.capnp:MapStruct", "report",
      0xbaf55ed4f5ecb7a1ull, 4);
}
::capnp::Request< ::vmtsmap::MapStruct::ReportDoneParams,  ::vmtsmap::MapStruct::ReportDoneResults>
MapStruct::Client::reportDoneRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::vmtsmap::MapStruct::ReportDoneParams,  ::vmtsmap::MapStruct::ReportDoneResults>(
      0xbaf55ed4f5ecb7a1ull, 5, sizeHint);
}
::kj::Promise<void> MapStruct::Server::reportDone(ReportDoneContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "message.capnp:MapStruct", "reportDone",
      0xbaf55ed4f5ecb7a1ull, 5);
}
::capnp::Request< ::vmtsmap::MapStruct::QueryPolygonParams,  ::vmtsmap::MapStruct::QueryPolygonResults>
MapStruct::Client::queryPolygonRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::vmtsmap::MapStruct::QueryPolygonParams,  ::vmtsmap::MapStruct::QueryPolygonResults>(
      0xbaf55ed4f5ecb7a1ull, 6, sizeHint);
}
::kj::Promise<void> MapStruct::Server::queryPolygon(QueryPolygonContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "message.capnp:MapStruct", "queryPolygon",
      0xbaf55ed4f5ecb7a1ull, 6);
}
::capnp::Request< ::vmtsmap::MapStruct::MissingNeiboursParams,  ::vmtsmap::MapStruct::MissingNeiboursResults>
MapStruct::Client::missingNeiboursRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::vmtsmap::MapStruct::MissingNeiboursParams,  ::vmtsmap::MapStruct::MissingNeiboursResults>(
      0xbaf55ed4f5ecb7a1ull, 7, sizeHint);
}
::kj::Promise<void> MapStruct::Server::missingNeibours(MissingNeiboursContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "message.capnp:MapStruct", "missingNeibours",
      0xbaf55ed4f5ecb7a1ull, 7);
}
::capnp::Request< ::vmtsmap::MapStruct::FindMissingNeighboursParams,  ::vmtsmap::MapStruct::FindMissingNeighboursResults>
MapStruct::Client::findMissingNeighboursRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::vmtsmap::MapStruct::FindMissingNeighboursParams,  ::vmtsmap::MapStruct::FindMissingNeighboursResults>(
      0xbaf55ed4f5ecb7a1ull, 8, sizeHint);
}
::kj::Promise<void> MapStruct::Server::findMissingNeighbours(FindMissingNeighboursContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "message.capnp:MapStruct", "findMissingNeighbours",
      0xbaf55ed4f5ecb7a1ull, 8);
}
::capnp::Request< ::vmtsmap::MapStruct::FindSwappedFeedersParams,  ::vmtsmap::MapStruct::FindSwappedFeedersResults>
MapStruct::Client::findSwappedFeedersRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::vmtsmap::MapStruct::FindSwappedFeedersParams,  ::vmtsmap::MapStruct::FindSwappedFeedersResults>(
      0xbaf55ed4f5ecb7a1ull, 9, sizeHint);
}
::kj::Promise<void> MapStruct::Server::findSwappedFeeders(FindSwappedFeedersContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "message.capnp:MapStruct", "findSwappedFeeders",
      0xbaf55ed4f5ecb7a1ull, 9);
}
::capnp::Request< ::vmtsmap::MapStruct::NotifyParams,  ::vmtsmap::MapStruct::NotifyResults>
MapStruct::Client::notifyRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::vmtsmap::MapStruct::NotifyParams,  ::vmtsmap::MapStruct::NotifyResults>(
      0xbaf55ed4f5ecb7a1ull, 10, sizeHint);
}
::kj::Promise<void> MapStruct::Server::notify(NotifyContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "message.capnp:MapStruct", "notify",
      0xbaf55ed4f5ecb7a1ull, 10);
}
::capnp::Request< ::vmtsmap::MapStruct::CacheMapParams,  ::vmtsmap::MapStruct::CacheMapResults>
MapStruct::Client::cacheMapRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::vmtsmap::MapStruct::CacheMapParams,  ::vmtsmap::MapStruct::CacheMapResults>(
      0xbaf55ed4f5ecb7a1ull, 11, sizeHint);
}
::kj::Promise<void> MapStruct::Server::cacheMap(CacheMapContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "message.capnp:MapStruct", "cacheMap",
      0xbaf55ed4f5ecb7a1ull, 11);
}
::capnp::Request< ::vmtsmap::MapStruct::GetPoints2Params,  ::vmtsmap::MapStruct::GetPoints2Results>
MapStruct::Client::getPoints2Request(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::vmtsmap::MapStruct::GetPoints2Params,  ::vmtsmap::MapStruct::GetPoints2Results>(
      0xbaf55ed4f5ecb7a1ull, 12, sizeHint);
}
::kj::Promise<void> MapStruct::Server::getPoints2(GetPoints2Context) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "message.capnp:MapStruct", "getPoints2",
      0xbaf55ed4f5ecb7a1ull, 12);
}
::capnp::Request< ::vmtsmap::MapStruct::QueryPolygon2Params,  ::vmtsmap::MapStruct::QueryPolygon2Results>
MapStruct::Client::queryPolygon2Request(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::vmtsmap::MapStruct::QueryPolygon2Params,  ::vmtsmap::MapStruct::QueryPolygon2Results>(
      0xbaf55ed4f5ecb7a1ull, 13, sizeHint);
}
::kj::Promise<void> MapStruct::Server::queryPolygon2(QueryPolygon2Context) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "message.capnp:MapStruct", "queryPolygon2",
      0xbaf55ed4f5ecb7a1ull, 13);
}
::capnp::Request< ::vmtsmap::MapStruct::GetClusteredPointsParams,  ::vmtsmap::MapStruct::GetClusteredPointsResults>
MapStruct::Client::getClusteredPointsRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::vmtsmap::MapStruct::GetClusteredPointsParams,  ::vmtsmap::MapStruct::GetClusteredPointsResults>(
      0xbaf55ed4f5ecb7a1ull, 14, sizeHint);
}
::kj::Promise<void> MapStruct::Server::getClusteredPoints(GetClusteredPointsContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "message.capnp:MapStruct", "getClusteredPoints",
      0xbaf55ed4f5ecb7a1ull, 14);
}
::capnp::Request< ::vmtsmap::MapStruct::Analyze2Params,  ::vmtsmap::MapStruct::Analyze2Results>
MapStruct::Client::analyze2Request(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::vmtsmap::MapStruct::Analyze2Params,  ::vmtsmap::MapStruct::Analyze2Results>(
      0xbaf55ed4f5ecb7a1ull, 15, sizeHint);
}
::kj::Promise<void> MapStruct::Server::analyze2(Analyze2Context) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "message.capnp:MapStruct", "analyze2",
      0xbaf55ed4f5ecb7a1ull, 15);
}
::capnp::Request< ::vmtsmap::MapStruct::Report2Params,  ::vmtsmap::MapStruct::Report2Results>
MapStruct::Client::report2Request(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::vmtsmap::MapStruct::Report2Params,  ::vmtsmap::MapStruct::Report2Results>(
      0xbaf55ed4f5ecb7a1ull, 16, sizeHint);
}
::kj::Promise<void> MapStruct::Server::report2(Report2Context) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "message.capnp:MapStruct", "report2",
      0xbaf55ed4f5ecb7a1ull, 16);
}
::capnp::Request< ::vmtsmap::MapStruct::Notify2Params,  ::vmtsmap::MapStruct::Notify2Results>
MapStruct::Client::notify2Request(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::vmtsmap::MapStruct::Notify2Params,  ::vmtsmap::MapStruct::Notify2Results>(
      0xbaf55ed4f5ecb7a1ull, 17, sizeHint);
}
::kj::Promise<void> MapStruct::Server::notify2(Notify2Context) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "message.capnp:MapStruct", "notify2",
      0xbaf55ed4f5ecb7a1ull, 17);
}
::capnp::Request< ::vmtsmap::MapStruct::CacheMap2Params,  ::vmtsmap::MapStruct::CacheMap2Results>
MapStruct::Client::cacheMap2Request(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::vmtsmap::MapStruct::CacheMap2Params,  ::vmtsmap::MapStruct::CacheMap2Results>(
      0xbaf55ed4f5ecb7a1ull, 18, sizeHint);
}
::kj::Promise<void> MapStruct::Server::cacheMap2(CacheMap2Context) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "message.capnp:MapStruct", "cacheMap2",
      0xbaf55ed4f5ecb7a1ull, 18);
}
::capnp::Request< ::vmtsmap::MapStruct::ReportPolyParams,  ::vmtsmap::MapStruct::ReportPolyResults>
MapStruct::Client::reportPolyRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::vmtsmap::MapStruct::ReportPolyParams,  ::vmtsmap::MapStruct::ReportPolyResults>(
      0xbaf55ed4f5ecb7a1ull, 19, sizeHint);
}
::kj::Promise<void> MapStruct::Server::reportPoly(ReportPolyContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "message.capnp:MapStruct", "reportPoly",
      0xbaf55ed4f5ecb7a1ull, 19);
}
::capnp::Request< ::vmtsmap::MapStruct::ReportPoly2Params,  ::vmtsmap::MapStruct::ReportPoly2Results>
MapStruct::Client::reportPoly2Request(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::vmtsmap::MapStruct::ReportPoly2Params,  ::vmtsmap::MapStruct::ReportPoly2Results>(
      0xbaf55ed4f5ecb7a1ull, 20, sizeHint);
}
::kj::Promise<void> MapStruct::Server::reportPoly2(ReportPoly2Context) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "message.capnp:MapStruct", "reportPoly2",
      0xbaf55ed4f5ecb7a1ull, 20);
}
::capnp::Request< ::vmtsmap::MapStruct::FindMissingNeighbours2Params,  ::vmtsmap::MapStruct::FindMissingNeighbours2Results>
MapStruct::Client::findMissingNeighbours2Request(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::vmtsmap::MapStruct::FindMissingNeighbours2Params,  ::vmtsmap::MapStruct::FindMissingNeighbours2Results>(
      0xbaf55ed4f5ecb7a1ull, 21, sizeHint);
}
::kj::Promise<void> MapStruct::Server::findMissingNeighbours2(FindMissingNeighbours2Context) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "message.capnp:MapStruct", "findMissingNeighbours2",
      0xbaf55ed4f5ecb7a1ull, 21);
}
::capnp::Request< ::vmtsmap::MapStruct::FindSwappedFeeders2Params,  ::vmtsmap::MapStruct::FindSwappedFeeders2Results>
MapStruct::Client::findSwappedFeeders2Request(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::vmtsmap::MapStruct::FindSwappedFeeders2Params,  ::vmtsmap::MapStruct::FindSwappedFeeders2Results>(
      0xbaf55ed4f5ecb7a1ull, 22, sizeHint);
}
::kj::Promise<void> MapStruct::Server::findSwappedFeeders2(FindSwappedFeeders2Context) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "message.capnp:MapStruct", "findSwappedFeeders2",
      0xbaf55ed4f5ecb7a1ull, 22);
}
::capnp::Request< ::vmtsmap::MapStruct::RemoveFromCache2Params,  ::vmtsmap::MapStruct::RemoveFromCache2Results>
MapStruct::Client::removeFromCache2Request(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::vmtsmap::MapStruct::RemoveFromCache2Params,  ::vmtsmap::MapStruct::RemoveFromCache2Results>(
      0xbaf55ed4f5ecb7a1ull, 23, sizeHint);
}
::kj::Promise<void> MapStruct::Server::removeFromCache2(RemoveFromCache2Context) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "message.capnp:MapStruct", "removeFromCache2",
      0xbaf55ed4f5ecb7a1ull, 23);
}
::capnp::Request< ::vmtsmap::MapStruct::ReloadCellsParams,  ::vmtsmap::MapStruct::ReloadCellsResults>
MapStruct::Client::reloadCellsRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::vmtsmap::MapStruct::ReloadCellsParams,  ::vmtsmap::MapStruct::ReloadCellsResults>(
      0xbaf55ed4f5ecb7a1ull, 24, sizeHint);
}
::kj::Promise<void> MapStruct::Server::reloadCells(ReloadCellsContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "message.capnp:MapStruct", "reloadCells",
      0xbaf55ed4f5ecb7a1ull, 24);
}
::capnp::Request< ::vmtsmap::MapStruct::QueryCellsParams,  ::vmtsmap::MapStruct::QueryCellsResults>
MapStruct::Client::queryCellsRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::vmtsmap::MapStruct::QueryCellsParams,  ::vmtsmap::MapStruct::QueryCellsResults>(
      0xbaf55ed4f5ecb7a1ull, 25, sizeHint);
}
::kj::Promise<void> MapStruct::Server::queryCells(QueryCellsContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "message.capnp:MapStruct", "queryCells",
      0xbaf55ed4f5ecb7a1ull, 25);
}
::capnp::Request< ::vmtsmap::MapStruct::InsertSignalParams,  ::vmtsmap::MapStruct::InsertSignalResults>
MapStruct::Client::insertSignalRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::vmtsmap::MapStruct::InsertSignalParams,  ::vmtsmap::MapStruct::InsertSignalResults>(
      0xbaf55ed4f5ecb7a1ull, 26, sizeHint);
}
::kj::Promise<void> MapStruct::Server::insertSignal(InsertSignalContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "message.capnp:MapStruct", "insertSignal",
      0xbaf55ed4f5ecb7a1ull, 26);
}
::capnp::Request< ::vmtsmap::MapStruct::RemoveSignalParams,  ::vmtsmap::MapStruct::RemoveSignalResults>
MapStruct::Client::removeSignalRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::vmtsmap::MapStruct::RemoveSignalParams,  ::vmtsmap::MapStruct::RemoveSignalResults>(
      0xbaf55ed4f5ecb7a1ull, 27, sizeHint);
}
::kj::Promise<void> MapStruct::Server::removeSignal(RemoveSignalContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "message.capnp:MapStruct", "removeSignal",
      0xbaf55ed4f5ecb7a1ull, 27);
}
::capnp::Request< ::vmtsmap::MapStruct::OnCellChangeParams,  ::vmtsmap::MapStruct::OnCellChangeResults>
MapStruct::Client::onCellChangeRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::vmtsmap::MapStruct::OnCellChangeParams,  ::vmtsmap::MapStruct::OnCellChangeResults>(
      0xbaf55ed4f5ecb7a1ull, 28, sizeHint);
}
::kj::Promise<void> MapStruct::Server::onCellChange(OnCellChangeContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "message.capnp:MapStruct", "onCellChange",
      0xbaf55ed4f5ecb7a1ull, 28);
}
::capnp::Request< ::vmtsmap::MapStruct::UpdateCellParams,  ::vmtsmap::MapStruct::UpdateCellResults>
MapStruct::Client::updateCellRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::vmtsmap::MapStruct::UpdateCellParams,  ::vmtsmap::MapStruct::UpdateCellResults>(
      0xbaf55ed4f5ecb7a1ull, 29, sizeHint);
}
::kj::Promise<void> MapStruct::Server::updateCell(UpdateCellContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "message.capnp:MapStruct", "updateCell",
      0xbaf55ed4f5ecb7a1ull, 29);
}
::capnp::Request< ::vmtsmap::MapStruct::FinishUpdateCellParams,  ::vmtsmap::MapStruct::FinishUpdateCellResults>
MapStruct::Client::finishUpdateCellRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::vmtsmap::MapStruct::FinishUpdateCellParams,  ::vmtsmap::MapStruct::FinishUpdateCellResults>(
      0xbaf55ed4f5ecb7a1ull, 30, sizeHint);
}
::kj::Promise<void> MapStruct::Server::finishUpdateCell(FinishUpdateCellContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "message.capnp:MapStruct", "finishUpdateCell",
      0xbaf55ed4f5ecb7a1ull, 30);
}
::capnp::Request< ::vmtsmap::MapStruct::PingRPCParams,  ::vmtsmap::MapStruct::PingRPCResults>
MapStruct::Client::pingRPCRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::vmtsmap::MapStruct::PingRPCParams,  ::vmtsmap::MapStruct::PingRPCResults>(
      0xbaf55ed4f5ecb7a1ull, 31, sizeHint);
}
::kj::Promise<void> MapStruct::Server::pingRPC(PingRPCContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "message.capnp:MapStruct", "pingRPC",
      0xbaf55ed4f5ecb7a1ull, 31);
}
::capnp::Request< ::vmtsmap::MapStruct::ToCSVParams,  ::vmtsmap::MapStruct::ToCSVResults>
MapStruct::Client::toCSVRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::vmtsmap::MapStruct::ToCSVParams,  ::vmtsmap::MapStruct::ToCSVResults>(
      0xbaf55ed4f5ecb7a1ull, 32, sizeHint);
}
::kj::Promise<void> MapStruct::Server::toCSV(ToCSVContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "message.capnp:MapStruct", "toCSV",
      0xbaf55ed4f5ecb7a1ull, 32);
}
::capnp::Request< ::vmtsmap::MapStruct::ExportCellCSVParams,  ::vmtsmap::MapStruct::ExportCellCSVResults>
MapStruct::Client::exportCellCSVRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::vmtsmap::MapStruct::ExportCellCSVParams,  ::vmtsmap::MapStruct::ExportCellCSVResults>(
      0xbaf55ed4f5ecb7a1ull, 33, sizeHint);
}
::kj::Promise<void> MapStruct::Server::exportCellCSV(ExportCellCSVContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "message.capnp:MapStruct", "exportCellCSV",
      0xbaf55ed4f5ecb7a1ull, 33);
}
::capnp::Request< ::vmtsmap::MapStruct::GenerateParams,  ::vmtsmap::MapStruct::GenerateResults>
MapStruct::Client::generateRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::vmtsmap::MapStruct::GenerateParams,  ::vmtsmap::MapStruct::GenerateResults>(
      0xbaf55ed4f5ecb7a1ull, 34, sizeHint);
}
::kj::Promise<void> MapStruct::Server::generate(GenerateContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "message.capnp:MapStruct", "generate",
      0xbaf55ed4f5ecb7a1ull, 34);
}
::capnp::Request< ::vmtsmap::MapStruct::GetBoxParams,  ::vmtsmap::MapStruct::GetBoxResults>
MapStruct::Client::getBoxRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::vmtsmap::MapStruct::GetBoxParams,  ::vmtsmap::MapStruct::GetBoxResults>(
      0xbaf55ed4f5ecb7a1ull, 35, sizeHint);
}
::kj::Promise<void> MapStruct::Server::getBox(GetBoxContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "message.capnp:MapStruct", "getBox",
      0xbaf55ed4f5ecb7a1ull, 35);
}
::kj::Promise<void> MapStruct::Server::dispatchCall(
    uint64_t interfaceId, uint16_t methodId,
    ::capnp::CallContext< ::capnp::AnyPointer, ::capnp::AnyPointer> context) {
  switch (interfaceId) {
    case 0xbaf55ed4f5ecb7a1ull:
      return dispatchCallInternal(methodId, context);
    default:
      return internalUnimplemented("message.capnp:MapStruct", interfaceId);
  }
}
::kj::Promise<void> MapStruct::Server::dispatchCallInternal(
    uint16_t methodId,
    ::capnp::CallContext< ::capnp::AnyPointer, ::capnp::AnyPointer> context) {
  switch (methodId) {
    case 0:
      return insertToMap(::capnp::Capability::Server::internalGetTypedContext<
           ::vmtsmap::MapStruct::InsertToMapParams,  ::vmtsmap::MapStruct::InsertToMapResults>(context));
    case 1:
      return getPoints(::capnp::Capability::Server::internalGetTypedContext<
           ::vmtsmap::MapStruct::GetPointsParams,  ::vmtsmap::MapStruct::GetPointsResults>(context));
    case 2:
      return insertPointsInPolygon(::capnp::Capability::Server::internalGetTypedContext<
           ::vmtsmap::MapStruct::InsertPointsInPolygonParams,  ::vmtsmap::MapStruct::InsertPointsInPolygonResults>(context));
    case 3:
      return analyze(::capnp::Capability::Server::internalGetTypedContext<
           ::vmtsmap::MapStruct::AnalyzeParams,  ::vmtsmap::MapStruct::AnalyzeResults>(context));
    case 4:
      return report(::capnp::Capability::Server::internalGetTypedContext<
           ::vmtsmap::MapStruct::ReportParams,  ::vmtsmap::MapStruct::ReportResults>(context));
    case 5:
      return reportDone(::capnp::Capability::Server::internalGetTypedContext<
           ::vmtsmap::MapStruct::ReportDoneParams,  ::vmtsmap::MapStruct::ReportDoneResults>(context));
    case 6:
      return queryPolygon(::capnp::Capability::Server::internalGetTypedContext<
           ::vmtsmap::MapStruct::QueryPolygonParams,  ::vmtsmap::MapStruct::QueryPolygonResults>(context));
    case 7:
      return missingNeibours(::capnp::Capability::Server::internalGetTypedContext<
           ::vmtsmap::MapStruct::MissingNeiboursParams,  ::vmtsmap::MapStruct::MissingNeiboursResults>(context));
    case 8:
      return findMissingNeighbours(::capnp::Capability::Server::internalGetTypedContext<
           ::vmtsmap::MapStruct::FindMissingNeighboursParams,  ::vmtsmap::MapStruct::FindMissingNeighboursResults>(context));
    case 9:
      return findSwappedFeeders(::capnp::Capability::Server::internalGetTypedContext<
           ::vmtsmap::MapStruct::FindSwappedFeedersParams,  ::vmtsmap::MapStruct::FindSwappedFeedersResults>(context));
    case 10:
      return notify(::capnp::Capability::Server::internalGetTypedContext<
           ::vmtsmap::MapStruct::NotifyParams,  ::vmtsmap::MapStruct::NotifyResults>(context));
    case 11:
      return cacheMap(::capnp::Capability::Server::internalGetTypedContext<
           ::vmtsmap::MapStruct::CacheMapParams,  ::vmtsmap::MapStruct::CacheMapResults>(context));
    case 12:
      return getPoints2(::capnp::Capability::Server::internalGetTypedContext<
           ::vmtsmap::MapStruct::GetPoints2Params,  ::vmtsmap::MapStruct::GetPoints2Results>(context));
    case 13:
      return queryPolygon2(::capnp::Capability::Server::internalGetTypedContext<
           ::vmtsmap::MapStruct::QueryPolygon2Params,  ::vmtsmap::MapStruct::QueryPolygon2Results>(context));
    case 14:
      return getClusteredPoints(::capnp::Capability::Server::internalGetTypedContext<
           ::vmtsmap::MapStruct::GetClusteredPointsParams,  ::vmtsmap::MapStruct::GetClusteredPointsResults>(context));
    case 15:
      return analyze2(::capnp::Capability::Server::internalGetTypedContext<
           ::vmtsmap::MapStruct::Analyze2Params,  ::vmtsmap::MapStruct::Analyze2Results>(context));
    case 16:
      return report2(::capnp::Capability::Server::internalGetTypedContext<
           ::vmtsmap::MapStruct::Report2Params,  ::vmtsmap::MapStruct::Report2Results>(context));
    case 17:
      return notify2(::capnp::Capability::Server::internalGetTypedContext<
           ::vmtsmap::MapStruct::Notify2Params,  ::vmtsmap::MapStruct::Notify2Results>(context));
    case 18:
      return cacheMap2(::capnp::Capability::Server::internalGetTypedContext<
           ::vmtsmap::MapStruct::CacheMap2Params,  ::vmtsmap::MapStruct::CacheMap2Results>(context));
    case 19:
      return reportPoly(::capnp::Capability::Server::internalGetTypedContext<
           ::vmtsmap::MapStruct::ReportPolyParams,  ::vmtsmap::MapStruct::ReportPolyResults>(context));
    case 20:
      return reportPoly2(::capnp::Capability::Server::internalGetTypedContext<
           ::vmtsmap::MapStruct::ReportPoly2Params,  ::vmtsmap::MapStruct::ReportPoly2Results>(context));
    case 21:
      return findMissingNeighbours2(::capnp::Capability::Server::internalGetTypedContext<
           ::vmtsmap::MapStruct::FindMissingNeighbours2Params,  ::vmtsmap::MapStruct::FindMissingNeighbours2Results>(context));
    case 22:
      return findSwappedFeeders2(::capnp::Capability::Server::internalGetTypedContext<
           ::vmtsmap::MapStruct::FindSwappedFeeders2Params,  ::vmtsmap::MapStruct::FindSwappedFeeders2Results>(context));
    case 23:
      return removeFromCache2(::capnp::Capability::Server::internalGetTypedContext<
           ::vmtsmap::MapStruct::RemoveFromCache2Params,  ::vmtsmap::MapStruct::RemoveFromCache2Results>(context));
    case 24:
      return reloadCells(::capnp::Capability::Server::internalGetTypedContext<
           ::vmtsmap::MapStruct::ReloadCellsParams,  ::vmtsmap::MapStruct::ReloadCellsResults>(context));
    case 25:
      return queryCells(::capnp::Capability::Server::internalGetTypedContext<
           ::vmtsmap::MapStruct::QueryCellsParams,  ::vmtsmap::MapStruct::QueryCellsResults>(context));
    case 26:
      return insertSignal(::capnp::Capability::Server::internalGetTypedContext<
           ::vmtsmap::MapStruct::InsertSignalParams,  ::vmtsmap::MapStruct::InsertSignalResults>(context));
    case 27:
      return removeSignal(::capnp::Capability::Server::internalGetTypedContext<
           ::vmtsmap::MapStruct::RemoveSignalParams,  ::vmtsmap::MapStruct::RemoveSignalResults>(context));
    case 28:
      return onCellChange(::capnp::Capability::Server::internalGetTypedContext<
           ::vmtsmap::MapStruct::OnCellChangeParams,  ::vmtsmap::MapStruct::OnCellChangeResults>(context));
    case 29:
      return updateCell(::capnp::Capability::Server::internalGetTypedContext<
           ::vmtsmap::MapStruct::UpdateCellParams,  ::vmtsmap::MapStruct::UpdateCellResults>(context));
    case 30:
      return finishUpdateCell(::capnp::Capability::Server::internalGetTypedContext<
           ::vmtsmap::MapStruct::FinishUpdateCellParams,  ::vmtsmap::MapStruct::FinishUpdateCellResults>(context));
    case 31:
      return pingRPC(::capnp::Capability::Server::internalGetTypedContext<
           ::vmtsmap::MapStruct::PingRPCParams,  ::vmtsmap::MapStruct::PingRPCResults>(context));
    case 32:
      return toCSV(::capnp::Capability::Server::internalGetTypedContext<
           ::vmtsmap::MapStruct::ToCSVParams,  ::vmtsmap::MapStruct::ToCSVResults>(context));
    case 33:
      return exportCellCSV(::capnp::Capability::Server::internalGetTypedContext<
           ::vmtsmap::MapStruct::ExportCellCSVParams,  ::vmtsmap::MapStruct::ExportCellCSVResults>(context));
    case 34:
      return generate(::capnp::Capability::Server::internalGetTypedContext<
           ::vmtsmap::MapStruct::GenerateParams,  ::vmtsmap::MapStruct::GenerateResults>(context));
    case 35:
      return getBox(::capnp::Capability::Server::internalGetTypedContext<
           ::vmtsmap::MapStruct::GetBoxParams,  ::vmtsmap::MapStruct::GetBoxResults>(context));
    default:
      (void)context;
      return ::capnp::Capability::Server::internalUnimplemented(
          "message.capnp:MapStruct",
          0xbaf55ed4f5ecb7a1ull, methodId);
  }
}
#endif  // !CAPNP_LITE

// MapStruct
#if !CAPNP_LITE
constexpr ::capnp::Kind MapStruct::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MapStruct::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MapStruct::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// MapStruct::InsertToMapParams
#ifndef _MSC_VER
constexpr uint16_t MapStruct::InsertToMapParams::_capnpPrivate::dataWordSize;
constexpr uint16_t MapStruct::InsertToMapParams::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind MapStruct::InsertToMapParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MapStruct::InsertToMapParams::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MapStruct::InsertToMapParams::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// MapStruct::InsertToMapResults
#ifndef _MSC_VER
constexpr uint16_t MapStruct::InsertToMapResults::_capnpPrivate::dataWordSize;
constexpr uint16_t MapStruct::InsertToMapResults::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind MapStruct::InsertToMapResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MapStruct::InsertToMapResults::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MapStruct::InsertToMapResults::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// MapStruct::GetPointsParams
#ifndef _MSC_VER
constexpr uint16_t MapStruct::GetPointsParams::_capnpPrivate::dataWordSize;
constexpr uint16_t MapStruct::GetPointsParams::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind MapStruct::GetPointsParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MapStruct::GetPointsParams::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MapStruct::GetPointsParams::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// MapStruct::GetPointsResults
#ifndef _MSC_VER
constexpr uint16_t MapStruct::GetPointsResults::_capnpPrivate::dataWordSize;
constexpr uint16_t MapStruct::GetPointsResults::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind MapStruct::GetPointsResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MapStruct::GetPointsResults::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MapStruct::GetPointsResults::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// MapStruct::InsertPointsInPolygonParams
#ifndef _MSC_VER
constexpr uint16_t MapStruct::InsertPointsInPolygonParams::_capnpPrivate::dataWordSize;
constexpr uint16_t MapStruct::InsertPointsInPolygonParams::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind MapStruct::InsertPointsInPolygonParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MapStruct::InsertPointsInPolygonParams::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MapStruct::InsertPointsInPolygonParams::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// MapStruct::InsertPointsInPolygonResults
#ifndef _MSC_VER
constexpr uint16_t MapStruct::InsertPointsInPolygonResults::_capnpPrivate::dataWordSize;
constexpr uint16_t MapStruct::InsertPointsInPolygonResults::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind MapStruct::InsertPointsInPolygonResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MapStruct::InsertPointsInPolygonResults::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MapStruct::InsertPointsInPolygonResults::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// MapStruct::AnalyzeParams
#ifndef _MSC_VER
constexpr uint16_t MapStruct::AnalyzeParams::_capnpPrivate::dataWordSize;
constexpr uint16_t MapStruct::AnalyzeParams::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind MapStruct::AnalyzeParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MapStruct::AnalyzeParams::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MapStruct::AnalyzeParams::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// MapStruct::AnalyzeResults
#ifndef _MSC_VER
constexpr uint16_t MapStruct::AnalyzeResults::_capnpPrivate::dataWordSize;
constexpr uint16_t MapStruct::AnalyzeResults::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind MapStruct::AnalyzeResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MapStruct::AnalyzeResults::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MapStruct::AnalyzeResults::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// MapStruct::ReportParams
#ifndef _MSC_VER
constexpr uint16_t MapStruct::ReportParams::_capnpPrivate::dataWordSize;
constexpr uint16_t MapStruct::ReportParams::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind MapStruct::ReportParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MapStruct::ReportParams::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MapStruct::ReportParams::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// MapStruct::ReportResults
#ifndef _MSC_VER
constexpr uint16_t MapStruct::ReportResults::_capnpPrivate::dataWordSize;
constexpr uint16_t MapStruct::ReportResults::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind MapStruct::ReportResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MapStruct::ReportResults::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MapStruct::ReportResults::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// MapStruct::ReportDoneParams
#ifndef _MSC_VER
constexpr uint16_t MapStruct::ReportDoneParams::_capnpPrivate::dataWordSize;
constexpr uint16_t MapStruct::ReportDoneParams::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind MapStruct::ReportDoneParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MapStruct::ReportDoneParams::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MapStruct::ReportDoneParams::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// MapStruct::ReportDoneResults
#ifndef _MSC_VER
constexpr uint16_t MapStruct::ReportDoneResults::_capnpPrivate::dataWordSize;
constexpr uint16_t MapStruct::ReportDoneResults::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind MapStruct::ReportDoneResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MapStruct::ReportDoneResults::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MapStruct::ReportDoneResults::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// MapStruct::QueryPolygonParams
#ifndef _MSC_VER
constexpr uint16_t MapStruct::QueryPolygonParams::_capnpPrivate::dataWordSize;
constexpr uint16_t MapStruct::QueryPolygonParams::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind MapStruct::QueryPolygonParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MapStruct::QueryPolygonParams::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MapStruct::QueryPolygonParams::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// MapStruct::QueryPolygonResults
#ifndef _MSC_VER
constexpr uint16_t MapStruct::QueryPolygonResults::_capnpPrivate::dataWordSize;
constexpr uint16_t MapStruct::QueryPolygonResults::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind MapStruct::QueryPolygonResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MapStruct::QueryPolygonResults::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MapStruct::QueryPolygonResults::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// MapStruct::MissingNeiboursParams
#ifndef _MSC_VER
constexpr uint16_t MapStruct::MissingNeiboursParams::_capnpPrivate::dataWordSize;
constexpr uint16_t MapStruct::MissingNeiboursParams::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind MapStruct::MissingNeiboursParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MapStruct::MissingNeiboursParams::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MapStruct::MissingNeiboursParams::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// MapStruct::MissingNeiboursResults
#ifndef _MSC_VER
constexpr uint16_t MapStruct::MissingNeiboursResults::_capnpPrivate::dataWordSize;
constexpr uint16_t MapStruct::MissingNeiboursResults::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind MapStruct::MissingNeiboursResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MapStruct::MissingNeiboursResults::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MapStruct::MissingNeiboursResults::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// MapStruct::FindMissingNeighboursParams
#ifndef _MSC_VER
constexpr uint16_t MapStruct::FindMissingNeighboursParams::_capnpPrivate::dataWordSize;
constexpr uint16_t MapStruct::FindMissingNeighboursParams::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind MapStruct::FindMissingNeighboursParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MapStruct::FindMissingNeighboursParams::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MapStruct::FindMissingNeighboursParams::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// MapStruct::FindMissingNeighboursResults
#ifndef _MSC_VER
constexpr uint16_t MapStruct::FindMissingNeighboursResults::_capnpPrivate::dataWordSize;
constexpr uint16_t MapStruct::FindMissingNeighboursResults::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind MapStruct::FindMissingNeighboursResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MapStruct::FindMissingNeighboursResults::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MapStruct::FindMissingNeighboursResults::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// MapStruct::FindSwappedFeedersParams
#ifndef _MSC_VER
constexpr uint16_t MapStruct::FindSwappedFeedersParams::_capnpPrivate::dataWordSize;
constexpr uint16_t MapStruct::FindSwappedFeedersParams::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind MapStruct::FindSwappedFeedersParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MapStruct::FindSwappedFeedersParams::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MapStruct::FindSwappedFeedersParams::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// MapStruct::FindSwappedFeedersResults
#ifndef _MSC_VER
constexpr uint16_t MapStruct::FindSwappedFeedersResults::_capnpPrivate::dataWordSize;
constexpr uint16_t MapStruct::FindSwappedFeedersResults::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind MapStruct::FindSwappedFeedersResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MapStruct::FindSwappedFeedersResults::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MapStruct::FindSwappedFeedersResults::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// MapStruct::NotifyParams
#ifndef _MSC_VER
constexpr uint16_t MapStruct::NotifyParams::_capnpPrivate::dataWordSize;
constexpr uint16_t MapStruct::NotifyParams::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind MapStruct::NotifyParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MapStruct::NotifyParams::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MapStruct::NotifyParams::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// MapStruct::NotifyResults
#ifndef _MSC_VER
constexpr uint16_t MapStruct::NotifyResults::_capnpPrivate::dataWordSize;
constexpr uint16_t MapStruct::NotifyResults::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind MapStruct::NotifyResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MapStruct::NotifyResults::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MapStruct::NotifyResults::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// MapStruct::CacheMapParams
#ifndef _MSC_VER
constexpr uint16_t MapStruct::CacheMapParams::_capnpPrivate::dataWordSize;
constexpr uint16_t MapStruct::CacheMapParams::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind MapStruct::CacheMapParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MapStruct::CacheMapParams::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MapStruct::CacheMapParams::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// MapStruct::CacheMapResults
#ifndef _MSC_VER
constexpr uint16_t MapStruct::CacheMapResults::_capnpPrivate::dataWordSize;
constexpr uint16_t MapStruct::CacheMapResults::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind MapStruct::CacheMapResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MapStruct::CacheMapResults::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MapStruct::CacheMapResults::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// MapStruct::GetPoints2Params
#ifndef _MSC_VER
constexpr uint16_t MapStruct::GetPoints2Params::_capnpPrivate::dataWordSize;
constexpr uint16_t MapStruct::GetPoints2Params::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind MapStruct::GetPoints2Params::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MapStruct::GetPoints2Params::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MapStruct::GetPoints2Params::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// MapStruct::GetPoints2Results
#ifndef _MSC_VER
constexpr uint16_t MapStruct::GetPoints2Results::_capnpPrivate::dataWordSize;
constexpr uint16_t MapStruct::GetPoints2Results::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind MapStruct::GetPoints2Results::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MapStruct::GetPoints2Results::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MapStruct::GetPoints2Results::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// MapStruct::QueryPolygon2Params
#ifndef _MSC_VER
constexpr uint16_t MapStruct::QueryPolygon2Params::_capnpPrivate::dataWordSize;
constexpr uint16_t MapStruct::QueryPolygon2Params::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind MapStruct::QueryPolygon2Params::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MapStruct::QueryPolygon2Params::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MapStruct::QueryPolygon2Params::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// MapStruct::QueryPolygon2Results
#ifndef _MSC_VER
constexpr uint16_t MapStruct::QueryPolygon2Results::_capnpPrivate::dataWordSize;
constexpr uint16_t MapStruct::QueryPolygon2Results::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind MapStruct::QueryPolygon2Results::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MapStruct::QueryPolygon2Results::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MapStruct::QueryPolygon2Results::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// MapStruct::GetClusteredPointsParams
#ifndef _MSC_VER
constexpr uint16_t MapStruct::GetClusteredPointsParams::_capnpPrivate::dataWordSize;
constexpr uint16_t MapStruct::GetClusteredPointsParams::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind MapStruct::GetClusteredPointsParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MapStruct::GetClusteredPointsParams::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MapStruct::GetClusteredPointsParams::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// MapStruct::GetClusteredPointsResults
#ifndef _MSC_VER
constexpr uint16_t MapStruct::GetClusteredPointsResults::_capnpPrivate::dataWordSize;
constexpr uint16_t MapStruct::GetClusteredPointsResults::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind MapStruct::GetClusteredPointsResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MapStruct::GetClusteredPointsResults::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MapStruct::GetClusteredPointsResults::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// MapStruct::Analyze2Params
#ifndef _MSC_VER
constexpr uint16_t MapStruct::Analyze2Params::_capnpPrivate::dataWordSize;
constexpr uint16_t MapStruct::Analyze2Params::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind MapStruct::Analyze2Params::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MapStruct::Analyze2Params::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MapStruct::Analyze2Params::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// MapStruct::Analyze2Results
#ifndef _MSC_VER
constexpr uint16_t MapStruct::Analyze2Results::_capnpPrivate::dataWordSize;
constexpr uint16_t MapStruct::Analyze2Results::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind MapStruct::Analyze2Results::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MapStruct::Analyze2Results::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MapStruct::Analyze2Results::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// MapStruct::Report2Params
#ifndef _MSC_VER
constexpr uint16_t MapStruct::Report2Params::_capnpPrivate::dataWordSize;
constexpr uint16_t MapStruct::Report2Params::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind MapStruct::Report2Params::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MapStruct::Report2Params::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MapStruct::Report2Params::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// MapStruct::Report2Results
#ifndef _MSC_VER
constexpr uint16_t MapStruct::Report2Results::_capnpPrivate::dataWordSize;
constexpr uint16_t MapStruct::Report2Results::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind MapStruct::Report2Results::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MapStruct::Report2Results::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MapStruct::Report2Results::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// MapStruct::Notify2Params
#ifndef _MSC_VER
constexpr uint16_t MapStruct::Notify2Params::_capnpPrivate::dataWordSize;
constexpr uint16_t MapStruct::Notify2Params::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind MapStruct::Notify2Params::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MapStruct::Notify2Params::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MapStruct::Notify2Params::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// MapStruct::Notify2Results
#ifndef _MSC_VER
constexpr uint16_t MapStruct::Notify2Results::_capnpPrivate::dataWordSize;
constexpr uint16_t MapStruct::Notify2Results::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind MapStruct::Notify2Results::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MapStruct::Notify2Results::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MapStruct::Notify2Results::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// MapStruct::CacheMap2Params
#ifndef _MSC_VER
constexpr uint16_t MapStruct::CacheMap2Params::_capnpPrivate::dataWordSize;
constexpr uint16_t MapStruct::CacheMap2Params::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind MapStruct::CacheMap2Params::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MapStruct::CacheMap2Params::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MapStruct::CacheMap2Params::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// MapStruct::CacheMap2Results
#ifndef _MSC_VER
constexpr uint16_t MapStruct::CacheMap2Results::_capnpPrivate::dataWordSize;
constexpr uint16_t MapStruct::CacheMap2Results::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind MapStruct::CacheMap2Results::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MapStruct::CacheMap2Results::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MapStruct::CacheMap2Results::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// MapStruct::ReportPolyParams
#ifndef _MSC_VER
constexpr uint16_t MapStruct::ReportPolyParams::_capnpPrivate::dataWordSize;
constexpr uint16_t MapStruct::ReportPolyParams::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind MapStruct::ReportPolyParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MapStruct::ReportPolyParams::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MapStruct::ReportPolyParams::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// MapStruct::ReportPolyResults
#ifndef _MSC_VER
constexpr uint16_t MapStruct::ReportPolyResults::_capnpPrivate::dataWordSize;
constexpr uint16_t MapStruct::ReportPolyResults::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind MapStruct::ReportPolyResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MapStruct::ReportPolyResults::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MapStruct::ReportPolyResults::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// MapStruct::ReportPoly2Params
#ifndef _MSC_VER
constexpr uint16_t MapStruct::ReportPoly2Params::_capnpPrivate::dataWordSize;
constexpr uint16_t MapStruct::ReportPoly2Params::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind MapStruct::ReportPoly2Params::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MapStruct::ReportPoly2Params::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MapStruct::ReportPoly2Params::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// MapStruct::ReportPoly2Results
#ifndef _MSC_VER
constexpr uint16_t MapStruct::ReportPoly2Results::_capnpPrivate::dataWordSize;
constexpr uint16_t MapStruct::ReportPoly2Results::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind MapStruct::ReportPoly2Results::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MapStruct::ReportPoly2Results::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MapStruct::ReportPoly2Results::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// MapStruct::FindMissingNeighbours2Params
#ifndef _MSC_VER
constexpr uint16_t MapStruct::FindMissingNeighbours2Params::_capnpPrivate::dataWordSize;
constexpr uint16_t MapStruct::FindMissingNeighbours2Params::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind MapStruct::FindMissingNeighbours2Params::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MapStruct::FindMissingNeighbours2Params::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MapStruct::FindMissingNeighbours2Params::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// MapStruct::FindMissingNeighbours2Results
#ifndef _MSC_VER
constexpr uint16_t MapStruct::FindMissingNeighbours2Results::_capnpPrivate::dataWordSize;
constexpr uint16_t MapStruct::FindMissingNeighbours2Results::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind MapStruct::FindMissingNeighbours2Results::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MapStruct::FindMissingNeighbours2Results::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MapStruct::FindMissingNeighbours2Results::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// MapStruct::FindSwappedFeeders2Params
#ifndef _MSC_VER
constexpr uint16_t MapStruct::FindSwappedFeeders2Params::_capnpPrivate::dataWordSize;
constexpr uint16_t MapStruct::FindSwappedFeeders2Params::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind MapStruct::FindSwappedFeeders2Params::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MapStruct::FindSwappedFeeders2Params::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MapStruct::FindSwappedFeeders2Params::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// MapStruct::FindSwappedFeeders2Results
#ifndef _MSC_VER
constexpr uint16_t MapStruct::FindSwappedFeeders2Results::_capnpPrivate::dataWordSize;
constexpr uint16_t MapStruct::FindSwappedFeeders2Results::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind MapStruct::FindSwappedFeeders2Results::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MapStruct::FindSwappedFeeders2Results::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MapStruct::FindSwappedFeeders2Results::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// MapStruct::RemoveFromCache2Params
#ifndef _MSC_VER
constexpr uint16_t MapStruct::RemoveFromCache2Params::_capnpPrivate::dataWordSize;
constexpr uint16_t MapStruct::RemoveFromCache2Params::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind MapStruct::RemoveFromCache2Params::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MapStruct::RemoveFromCache2Params::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MapStruct::RemoveFromCache2Params::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// MapStruct::RemoveFromCache2Results
#ifndef _MSC_VER
constexpr uint16_t MapStruct::RemoveFromCache2Results::_capnpPrivate::dataWordSize;
constexpr uint16_t MapStruct::RemoveFromCache2Results::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind MapStruct::RemoveFromCache2Results::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MapStruct::RemoveFromCache2Results::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MapStruct::RemoveFromCache2Results::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// MapStruct::ReloadCellsParams
#ifndef _MSC_VER
constexpr uint16_t MapStruct::ReloadCellsParams::_capnpPrivate::dataWordSize;
constexpr uint16_t MapStruct::ReloadCellsParams::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind MapStruct::ReloadCellsParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MapStruct::ReloadCellsParams::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MapStruct::ReloadCellsParams::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// MapStruct::ReloadCellsResults
#ifndef _MSC_VER
constexpr uint16_t MapStruct::ReloadCellsResults::_capnpPrivate::dataWordSize;
constexpr uint16_t MapStruct::ReloadCellsResults::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind MapStruct::ReloadCellsResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MapStruct::ReloadCellsResults::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MapStruct::ReloadCellsResults::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// MapStruct::QueryCellsParams
#ifndef _MSC_VER
constexpr uint16_t MapStruct::QueryCellsParams::_capnpPrivate::dataWordSize;
constexpr uint16_t MapStruct::QueryCellsParams::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind MapStruct::QueryCellsParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MapStruct::QueryCellsParams::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MapStruct::QueryCellsParams::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// MapStruct::QueryCellsResults
#ifndef _MSC_VER
constexpr uint16_t MapStruct::QueryCellsResults::_capnpPrivate::dataWordSize;
constexpr uint16_t MapStruct::QueryCellsResults::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind MapStruct::QueryCellsResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MapStruct::QueryCellsResults::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MapStruct::QueryCellsResults::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// MapStruct::InsertSignalParams
#ifndef _MSC_VER
constexpr uint16_t MapStruct::InsertSignalParams::_capnpPrivate::dataWordSize;
constexpr uint16_t MapStruct::InsertSignalParams::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind MapStruct::InsertSignalParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MapStruct::InsertSignalParams::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MapStruct::InsertSignalParams::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// MapStruct::InsertSignalResults
#ifndef _MSC_VER
constexpr uint16_t MapStruct::InsertSignalResults::_capnpPrivate::dataWordSize;
constexpr uint16_t MapStruct::InsertSignalResults::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind MapStruct::InsertSignalResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MapStruct::InsertSignalResults::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MapStruct::InsertSignalResults::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// MapStruct::RemoveSignalParams
#ifndef _MSC_VER
constexpr uint16_t MapStruct::RemoveSignalParams::_capnpPrivate::dataWordSize;
constexpr uint16_t MapStruct::RemoveSignalParams::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind MapStruct::RemoveSignalParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MapStruct::RemoveSignalParams::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MapStruct::RemoveSignalParams::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// MapStruct::RemoveSignalResults
#ifndef _MSC_VER
constexpr uint16_t MapStruct::RemoveSignalResults::_capnpPrivate::dataWordSize;
constexpr uint16_t MapStruct::RemoveSignalResults::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind MapStruct::RemoveSignalResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MapStruct::RemoveSignalResults::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MapStruct::RemoveSignalResults::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// MapStruct::OnCellChangeParams
#ifndef _MSC_VER
constexpr uint16_t MapStruct::OnCellChangeParams::_capnpPrivate::dataWordSize;
constexpr uint16_t MapStruct::OnCellChangeParams::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind MapStruct::OnCellChangeParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MapStruct::OnCellChangeParams::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MapStruct::OnCellChangeParams::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// MapStruct::OnCellChangeResults
#ifndef _MSC_VER
constexpr uint16_t MapStruct::OnCellChangeResults::_capnpPrivate::dataWordSize;
constexpr uint16_t MapStruct::OnCellChangeResults::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind MapStruct::OnCellChangeResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MapStruct::OnCellChangeResults::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MapStruct::OnCellChangeResults::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// MapStruct::UpdateCellParams
#ifndef _MSC_VER
constexpr uint16_t MapStruct::UpdateCellParams::_capnpPrivate::dataWordSize;
constexpr uint16_t MapStruct::UpdateCellParams::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind MapStruct::UpdateCellParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MapStruct::UpdateCellParams::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MapStruct::UpdateCellParams::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// MapStruct::UpdateCellResults
#ifndef _MSC_VER
constexpr uint16_t MapStruct::UpdateCellResults::_capnpPrivate::dataWordSize;
constexpr uint16_t MapStruct::UpdateCellResults::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind MapStruct::UpdateCellResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MapStruct::UpdateCellResults::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MapStruct::UpdateCellResults::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// MapStruct::FinishUpdateCellParams
#ifndef _MSC_VER
constexpr uint16_t MapStruct::FinishUpdateCellParams::_capnpPrivate::dataWordSize;
constexpr uint16_t MapStruct::FinishUpdateCellParams::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind MapStruct::FinishUpdateCellParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MapStruct::FinishUpdateCellParams::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MapStruct::FinishUpdateCellParams::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// MapStruct::FinishUpdateCellResults
#ifndef _MSC_VER
constexpr uint16_t MapStruct::FinishUpdateCellResults::_capnpPrivate::dataWordSize;
constexpr uint16_t MapStruct::FinishUpdateCellResults::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind MapStruct::FinishUpdateCellResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MapStruct::FinishUpdateCellResults::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MapStruct::FinishUpdateCellResults::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// MapStruct::PingRPCParams
#ifndef _MSC_VER
constexpr uint16_t MapStruct::PingRPCParams::_capnpPrivate::dataWordSize;
constexpr uint16_t MapStruct::PingRPCParams::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind MapStruct::PingRPCParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MapStruct::PingRPCParams::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MapStruct::PingRPCParams::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// MapStruct::PingRPCResults
#ifndef _MSC_VER
constexpr uint16_t MapStruct::PingRPCResults::_capnpPrivate::dataWordSize;
constexpr uint16_t MapStruct::PingRPCResults::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind MapStruct::PingRPCResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MapStruct::PingRPCResults::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MapStruct::PingRPCResults::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// MapStruct::ToCSVParams
#ifndef _MSC_VER
constexpr uint16_t MapStruct::ToCSVParams::_capnpPrivate::dataWordSize;
constexpr uint16_t MapStruct::ToCSVParams::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind MapStruct::ToCSVParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MapStruct::ToCSVParams::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MapStruct::ToCSVParams::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// MapStruct::ToCSVResults
#ifndef _MSC_VER
constexpr uint16_t MapStruct::ToCSVResults::_capnpPrivate::dataWordSize;
constexpr uint16_t MapStruct::ToCSVResults::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind MapStruct::ToCSVResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MapStruct::ToCSVResults::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MapStruct::ToCSVResults::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// MapStruct::ExportCellCSVParams
#ifndef _MSC_VER
constexpr uint16_t MapStruct::ExportCellCSVParams::_capnpPrivate::dataWordSize;
constexpr uint16_t MapStruct::ExportCellCSVParams::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind MapStruct::ExportCellCSVParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MapStruct::ExportCellCSVParams::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MapStruct::ExportCellCSVParams::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// MapStruct::ExportCellCSVResults
#ifndef _MSC_VER
constexpr uint16_t MapStruct::ExportCellCSVResults::_capnpPrivate::dataWordSize;
constexpr uint16_t MapStruct::ExportCellCSVResults::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind MapStruct::ExportCellCSVResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MapStruct::ExportCellCSVResults::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MapStruct::ExportCellCSVResults::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// MapStruct::GenerateParams
#ifndef _MSC_VER
constexpr uint16_t MapStruct::GenerateParams::_capnpPrivate::dataWordSize;
constexpr uint16_t MapStruct::GenerateParams::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind MapStruct::GenerateParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MapStruct::GenerateParams::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MapStruct::GenerateParams::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// MapStruct::GenerateResults
#ifndef _MSC_VER
constexpr uint16_t MapStruct::GenerateResults::_capnpPrivate::dataWordSize;
constexpr uint16_t MapStruct::GenerateResults::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind MapStruct::GenerateResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MapStruct::GenerateResults::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MapStruct::GenerateResults::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// MapStruct::GetBoxParams
#ifndef _MSC_VER
constexpr uint16_t MapStruct::GetBoxParams::_capnpPrivate::dataWordSize;
constexpr uint16_t MapStruct::GetBoxParams::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind MapStruct::GetBoxParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MapStruct::GetBoxParams::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MapStruct::GetBoxParams::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// MapStruct::GetBoxResults
#ifndef _MSC_VER
constexpr uint16_t MapStruct::GetBoxResults::_capnpPrivate::dataWordSize;
constexpr uint16_t MapStruct::GetBoxResults::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind MapStruct::GetBoxResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MapStruct::GetBoxResults::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MapStruct::GetBoxResults::_capnpPrivate::brand;
#endif  // !CAPNP_LITE


}  // namespace

